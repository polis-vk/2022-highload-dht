<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (1,237 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.16%)</title><rect x="10.0" y="899.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.40%)</title><rect x="11.9" y="899.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="14.9" y="910.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.08%)</title><rect x="11.9" y="883.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.9" y="894.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.32%)</title><rect x="12.9" y="883.0" width="3.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.32%)</title><rect x="12.9" y="867.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.24%)</title><rect x="13.8" y="851.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.24%)</title><rect x="13.8" y="835.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="16.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_clock_gettime (2 samples, 0.16%)</title><rect x="13.8" y="819.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.8" y="830.0"></text>
</g>
<g>
<title>posix_get_realtime_timespec (2 samples, 0.16%)</title><rect x="13.8" y="803.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.8" y="814.0"></text>
</g>
<g>
<title>ktime_get_real_ts64 (2 samples, 0.16%)</title><rect x="13.8" y="787.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.8" y="798.0"></text>
</g>
<g>
<title>read_hpet (2 samples, 0.16%)</title><rect x="13.8" y="771.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="16.8" y="782.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="15.7" y="819.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.7" y="830.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.57%)</title><rect x="16.7" y="899.0" width="6.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.7" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.57%)</title><rect x="16.7" y="883.0" width="6.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="19.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.49%)</title><rect x="17.6" y="867.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.49%)</title><rect x="17.6" y="851.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="20.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_clock_gettime (5 samples, 0.40%)</title><rect x="17.6" y="835.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.6" y="846.0"></text>
</g>
<g>
<title>posix_get_monotonic_timespec (5 samples, 0.40%)</title><rect x="17.6" y="819.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.6" y="830.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.40%)</title><rect x="17.6" y="803.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.6" y="814.0"></text>
</g>
<g>
<title>read_hpet (5 samples, 0.40%)</title><rect x="17.6" y="787.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.6" y="798.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="22.4" y="835.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (726 samples, 58.69%)</title><rect x="23.4" y="899.0" width="692.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.4" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (591 samples, 47.78%)</title><rect x="23.4" y="883.0" width="563.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.4" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (591 samples, 47.78%)</title><rect x="23.4" y="867.0" width="563.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.4" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (591 samples, 47.78%)</title><rect x="23.4" y="851.0" width="563.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.4" y="862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao$$Lambda$176.0x0000000800d4b990.call (591 samples, 47.78%)</title><rect x="23.4" y="835.0" width="563.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.4" y="846.0">ok/dht/test/kazakov/dao/MemorySegmentDao$$Lambda$176.0x0000000800d4b990.call</text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao.lambda$flushInBg$1 (591 samples, 47.78%)</title><rect x="23.4" y="819.0" width="563.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.4" y="830.0">ok/dht/test/kazakov/dao/MemorySegmentDao.lambda$flushInBg$1</text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/Storage.load (585 samples, 47.29%)</title><rect x="23.4" y="803.0" width="558.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.4" y="814.0">ok/dht/test/kazakov/dao/Storage.load</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.73%)</title><rect x="23.4" y="787.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c91400.invoke (8 samples, 0.65%)</title><rect x="24.3" y="771.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c0d000.invoke (7 samples, 0.57%)</title><rect x="24.3" y="755.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.57%)</title><rect x="24.3" y="739.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArrayWithSuffix (6 samples, 0.49%)</title><rect x="25.3" y="723.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.08%)</title><rect x="25.3" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.24%)</title><rect x="26.2" y="707.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.24%)</title><rect x="26.2" y="691.0" width="2.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="29.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (2 samples, 0.16%)</title><rect x="29.1" y="707.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.16%)</title><rect x="29.1" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c91000.invoke (1 samples, 0.08%)</title><rect x="31.0" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="31.0" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (1 samples, 0.08%)</title><rect x="31.0" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.08%)</title><rect x="31.0" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.0" y="718.0"></text>
</g>
<g>
<title>java/nio/file/Path.resolve (3 samples, 0.24%)</title><rect x="31.9" y="787.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.08%)</title><rect x="31.9" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.08%)</title><rect x="31.9" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (1 samples, 0.08%)</title><rect x="31.9" y="739.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.9" y="750.0"></text>
</g>
<g>
<title>java/lang/System$2.getBytesNoRepl (1 samples, 0.08%)</title><rect x="31.9" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytesNoRepl (1 samples, 0.08%)</title><rect x="31.9" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytesNoRepl1 (1 samples, 0.08%)</title><rect x="31.9" y="691.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isASCII (1 samples, 0.08%)</title><rect x="31.9" y="675.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.resolve (2 samples, 0.16%)</title><rect x="32.9" y="771.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.resolve (2 samples, 0.16%)</title><rect x="32.9" y="755.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.resolve (2 samples, 0.16%)</title><rect x="32.9" y="739.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.9" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.16%)</title><rect x="32.9" y="723.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, JavaThread*) (2 samples, 0.16%)</title><rect x="32.9" y="707.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.16%)</title><rect x="32.9" y="691.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="35.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="32.9" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.9" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.08%)</title><rect x="32.9" y="659.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.9" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.08%)</title><rect x="32.9" y="643.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.9" y="654.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long) (1 samples, 0.08%)</title><rect x="33.8" y="675.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="36.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.08%)</title><rect x="34.8" y="787.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.08%)</title><rect x="34.8" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.08%)</title><rect x="34.8" y="755.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.08%)</title><rect x="34.8" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="34.8" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="34.8" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.08%)</title><rect x="34.8" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.8" y="702.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/Storage.mapForRead (572 samples, 46.24%)</title><rect x="35.8" y="787.0" width="545.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.8" y="798.0">ok/dht/test/kazakov/dao/Storage.mapForRead</text>
</g>
<g>
<title>java/nio/file/Files.size (132 samples, 10.67%)</title><rect x="35.8" y="771.0" width="125.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.8" y="782.0">java/nio/file/F..</text>
</g>
<g>
<title>java/nio/file/Files.readAttributes (130 samples, 10.51%)</title><rect x="36.7" y="755.0" width="124.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.7" y="766.0">java/nio/file/F..</text>
</g>
<g>
<title>sun/nio/fs/LinuxFileSystemProvider.readAttributes (130 samples, 10.51%)</title><rect x="36.7" y="739.0" width="124.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.7" y="750.0">sun/nio/fs/Linu..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.readAttributes (130 samples, 10.51%)</title><rect x="36.7" y="723.0" width="124.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.7" y="734.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileAttributeViews$Basic.readAttributes (130 samples, 10.51%)</title><rect x="36.7" y="707.0" width="124.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.7" y="718.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileAttributes.get (130 samples, 10.51%)</title><rect x="36.7" y="691.0" width="124.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.7" y="702.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.stat (130 samples, 10.51%)</title><rect x="36.7" y="675.0" width="124.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.7" y="686.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="37.7" y="659.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="40.7" y="670.0"></text>
</g>
<g>
<title>exc_page_fault (1 samples, 0.08%)</title><rect x="37.7" y="643.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="40.7" y="654.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="37.7" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="40.7" y="638.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.08%)</title><rect x="37.7" y="611.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="40.7" y="622.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.08%)</title><rect x="37.7" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="40.7" y="606.0"></text>
</g>
<g>
<title>native_set_pte (1 samples, 0.08%)</title><rect x="37.7" y="579.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="40.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.stat0 (128 samples, 10.35%)</title><rect x="38.6" y="659.0" width="122.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.6" y="670.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>Java_sun_nio_fs_UnixNativeDispatcher_stat0 (19 samples, 1.54%)</title><rect x="39.6" y="643.0" width="18.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="42.6" y="654.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.08%)</title><rect x="39.6" y="627.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="42.6" y="638.0"></text>
</g>
<g>
<title>jni_SetLongField (2 samples, 0.16%)</title><rect x="40.5" y="627.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.5" y="638.0"></text>
</g>
<g>
<title>prepAttributes (16 samples, 1.29%)</title><rect x="42.4" y="627.0" width="15.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="45.4" y="638.0"></text>
</g>
<g>
<title>jni_SetIntField (5 samples, 0.40%)</title><rect x="43.4" y="611.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="46.4" y="622.0"></text>
</g>
<g>
<title>jni_SetLongField (10 samples, 0.81%)</title><rect x="48.2" y="611.0" width="9.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="51.2" y="622.0"></text>
</g>
<g>
<title>__xstat64 (108 samples, 8.73%)</title><rect x="57.7" y="643.0" width="103.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="60.7" y="654.0">__xstat64</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="60.6" y="627.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.6" y="638.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="60.6" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="63.6" y="622.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="60.6" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.6" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="60.6" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.6" y="590.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.08%)</title><rect x="60.6" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.6" y="574.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.08%)</title><rect x="60.6" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.6" y="558.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.08%)</title><rect x="60.6" y="531.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="63.6" y="542.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.08%)</title><rect x="60.6" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="60.6" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.6" y="510.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.08%)</title><rect x="60.6" y="483.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.6" y="494.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.08%)</title><rect x="60.6" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.6" y="478.0"></text>
</g>
<g>
<title>__unfreeze_partials (1 samples, 0.08%)</title><rect x="60.6" y="451.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.6" y="462.0"></text>
</g>
<g>
<title>discard_slab (1 samples, 0.08%)</title><rect x="60.6" y="435.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.6" y="446.0"></text>
</g>
<g>
<title>__free_slab (1 samples, 0.08%)</title><rect x="60.6" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.6" y="430.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.08%)</title><rect x="60.6" y="403.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.6" y="414.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.08%)</title><rect x="60.6" y="387.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.6" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 8.41%)</title><rect x="61.5" y="627.0" width="99.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="64.5" y="638.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_newstat (1 samples, 0.08%)</title><rect x="61.5" y="611.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (103 samples, 8.33%)</title><rect x="62.5" y="611.0" width="98.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.5" y="622.0">do_syscall_64</text>
</g>
<g>
<title>__do_sys_newstat (1 samples, 0.08%)</title><rect x="62.5" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_newstat (96 samples, 7.76%)</title><rect x="63.4" y="595.0" width="91.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.4" y="606.0">__x64_sys_n..</text>
</g>
<g>
<title>__do_sys_newstat (96 samples, 7.76%)</title><rect x="63.4" y="579.0" width="91.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.4" y="590.0">__do_sys_ne..</text>
</g>
<g>
<title>cp_new_stat (2 samples, 0.16%)</title><rect x="63.4" y="563.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="66.4" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.08%)</title><rect x="63.4" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.4" y="558.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.08%)</title><rect x="64.4" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="67.4" y="558.0"></text>
</g>
<g>
<title>user_path_at_empty (1 samples, 0.08%)</title><rect x="65.3" y="563.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="68.3" y="574.0"></text>
</g>
<g>
<title>vfs_statx (93 samples, 7.52%)</title><rect x="66.3" y="563.0" width="88.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.3" y="574.0">vfs_statx</text>
</g>
<g>
<title>security_inode_getattr (13 samples, 1.05%)</title><rect x="66.3" y="547.0" width="12.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.3" y="558.0"></text>
</g>
<g>
<title>user_path_at_empty (60 samples, 4.85%)</title><rect x="78.7" y="547.0" width="57.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.7" y="558.0">user_p..</text>
</g>
<g>
<title>filename_lookup (33 samples, 2.67%)</title><rect x="78.7" y="531.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="81.7" y="542.0">fi..</text>
</g>
<g>
<title>path_lookupat.isra.0 (33 samples, 2.67%)</title><rect x="78.7" y="515.0" width="31.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="81.7" y="526.0">pa..</text>
</g>
<g>
<title>complete_walk (1 samples, 0.08%)</title><rect x="78.7" y="499.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.7" y="510.0"></text>
</g>
<g>
<title>try_to_unlazy (1 samples, 0.08%)</title><rect x="78.7" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="81.7" y="494.0"></text>
</g>
<g>
<title>legitimize_links (1 samples, 0.08%)</title><rect x="78.7" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.7" y="478.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (14 samples, 1.13%)</title><rect x="79.6" y="499.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.6" y="510.0"></text>
</g>
<g>
<title>inode_permission (4 samples, 0.32%)</title><rect x="84.4" y="483.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.4" y="494.0"></text>
</g>
<g>
<title>generic_permission (3 samples, 0.24%)</title><rect x="85.4" y="467.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.4" y="478.0"></text>
</g>
<g>
<title>walk_component (5 samples, 0.40%)</title><rect x="88.2" y="483.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.2" y="494.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.16%)</title><rect x="90.1" y="467.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.1" y="478.0"></text>
</g>
<g>
<title>__d_lookup_rcu (2 samples, 0.16%)</title><rect x="90.1" y="451.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="93.1" y="462.0"></text>
</g>
<g>
<title>step_into (1 samples, 0.08%)</title><rect x="92.0" y="467.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="95.0" y="478.0"></text>
</g>
<g>
<title>path_init (2 samples, 0.16%)</title><rect x="93.0" y="499.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.0" y="510.0"></text>
</g>
<g>
<title>walk_component (16 samples, 1.29%)</title><rect x="94.9" y="499.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.9" y="510.0"></text>
</g>
<g>
<title>lookup_fast (16 samples, 1.29%)</title><rect x="94.9" y="483.0" width="15.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="97.9" y="494.0"></text>
</g>
<g>
<title>__d_lookup_rcu (16 samples, 1.29%)</title><rect x="94.9" y="467.0" width="15.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.9" y="478.0"></text>
</g>
<g>
<title>getname_flags (23 samples, 1.86%)</title><rect x="110.2" y="531.0" width="21.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.2" y="542.0">g..</text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.16%)</title><rect x="111.1" y="515.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.1" y="526.0"></text>
</g>
<g>
<title>memset (9 samples, 0.73%)</title><rect x="113.0" y="515.0" width="8.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.0" y="526.0"></text>
</g>
<g>
<title>strncpy_from_user (11 samples, 0.89%)</title><rect x="121.6" y="515.0" width="10.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.6" y="526.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.08%)</title><rect x="125.4" y="499.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.4" y="510.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.40%)</title><rect x="126.4" y="499.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.4" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.16%)</title><rect x="129.2" y="483.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="132.2" y="494.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.08%)</title><rect x="131.1" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.1" y="510.0"></text>
</g>
<g>
<title>putname (3 samples, 0.24%)</title><rect x="132.1" y="531.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.24%)</title><rect x="132.1" y="515.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.1" y="526.0"></text>
</g>
<g>
<title>restore_nameidata (1 samples, 0.08%)</title><rect x="135.0" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.0" y="542.0"></text>
</g>
<g>
<title>vfs_getattr (20 samples, 1.62%)</title><rect x="135.9" y="547.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="138.9" y="558.0"></text>
</g>
<g>
<title>ext4_file_getattr (3 samples, 0.24%)</title><rect x="135.9" y="531.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.9" y="542.0"></text>
</g>
<g>
<title>security_inode_getattr (2 samples, 0.16%)</title><rect x="138.8" y="531.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.8" y="542.0"></text>
</g>
<g>
<title>apparmor_inode_getattr (2 samples, 0.16%)</title><rect x="138.8" y="515.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.8" y="526.0"></text>
</g>
<g>
<title>common_perm_cond (2 samples, 0.16%)</title><rect x="138.8" y="499.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.8" y="510.0"></text>
</g>
<g>
<title>vfs_getattr_nosec (15 samples, 1.21%)</title><rect x="140.7" y="531.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.7" y="542.0"></text>
</g>
<g>
<title>ext4_file_getattr (14 samples, 1.13%)</title><rect x="140.7" y="515.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.7" y="526.0"></text>
</g>
<g>
<title>ext4_getattr (2 samples, 0.16%)</title><rect x="152.1" y="499.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="155.1" y="510.0"></text>
</g>
<g>
<title>ext4_getattr (1 samples, 0.08%)</title><rect x="154.0" y="515.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="157.0" y="526.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (6 samples, 0.49%)</title><rect x="155.0" y="595.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="158.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileAttributes$UnixAsBasicFileAttributes.size (1 samples, 0.08%)</title><rect x="160.7" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.7" y="766.0"></text>
</g>
<g>
<title>jdk/incubator/foreign/MemorySegment.mapFile (440 samples, 35.57%)</title><rect x="161.7" y="771.0" width="419.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.7" y="782.0">jdk/incubator/foreign/MemorySegment.mapFile</text>
</g>
<g>
<title>jdk/internal/foreign/MappedMemorySegmentImpl.makeMappedSegment (439 samples, 35.49%)</title><rect x="162.6" y="755.0" width="418.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.6" y="766.0">jdk/internal/foreign/MappedMemorySegmentImpl.makeMappedSe..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (157 samples, 12.69%)</title><rect x="162.6" y="739.0" width="149.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.6" y="750.0">java/nio/channels/F..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (153 samples, 12.37%)</title><rect x="162.6" y="723.0" width="146.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.6" y="734.0">java/nio/channels/..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (153 samples, 12.37%)</title><rect x="162.6" y="707.0" width="146.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.6" y="718.0">sun/nio/fs/UnixFil..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (153 samples, 12.37%)</title><rect x="162.6" y="691.0" width="146.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.6" y="702.0">sun/nio/fs/UnixCha..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (153 samples, 12.37%)</title><rect x="162.6" y="675.0" width="146.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.6" y="686.0">sun/nio/fs/UnixCha..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (4 samples, 0.32%)</title><rect x="162.6" y="659.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (4 samples, 0.32%)</title><rect x="162.6" y="643.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (4 samples, 0.32%)</title><rect x="162.6" y="627.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.6" y="638.0"></text>
</g>
<g>
<title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="162.6" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="165.6" y="622.0"></text>
</g>
<g>
<title>exc_page_fault (1 samples, 0.08%)</title><rect x="162.6" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.6" y="606.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="162.6" y="579.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (3 samples, 0.24%)</title><rect x="163.6" y="611.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (3 samples, 0.24%)</title><rect x="163.6" y="595.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (3 samples, 0.24%)</title><rect x="163.6" y="579.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (11 samples, 0.89%)</title><rect x="166.4" y="659.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.73%)</title><rect x="168.4" y="643.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.57%)</title><rect x="168.4" y="627.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.57%)</title><rect x="168.4" y="611.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.57%)</title><rect x="168.4" y="595.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.16%)</title><rect x="175.0" y="627.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="176.0" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (135 samples, 10.91%)</title><rect x="176.9" y="659.0" width="128.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.9" y="670.0">sun/nio/fs/UnixC..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.16%)</title><rect x="177.9" y="643.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="180.9" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (2 samples, 0.16%)</title><rect x="177.9" y="627.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="180.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.08%)</title><rect x="177.9" y="611.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="178.8" y="611.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="181.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (132 samples, 10.67%)</title><rect x="179.8" y="643.0" width="125.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.8" y="654.0">sun/nio/fs/Unix..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (8 samples, 0.65%)</title><rect x="179.8" y="627.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.copyCStringToNativeBuffer (1 samples, 0.08%)</title><rect x="179.8" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.08%)</title><rect x="179.8" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.08%)</title><rect x="179.8" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.08%)</title><rect x="179.8" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.08%)</title><rect x="179.8" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.08%)</title><rect x="179.8" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.getNativeBufferFromCache (5 samples, 0.40%)</title><rect x="180.8" y="611.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.32%)</title><rect x="181.7" y="595.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.32%)</title><rect x="181.7" y="579.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getByteArrayForSysCalls (2 samples, 0.16%)</title><rect x="185.5" y="611.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (124 samples, 10.02%)</title><rect x="187.4" y="627.0" width="118.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.4" y="638.0">sun/nio/fs/Uni..</text>
</g>
<g>
<title>[unknown] (123 samples, 9.94%)</title><rect x="188.4" y="611.0" width="117.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="191.4" y="622.0">[unknown]</text>
</g>
<g>
<title>__open64 (123 samples, 9.94%)</title><rect x="188.4" y="595.0" width="117.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="191.4" y="606.0">__open64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 9.14%)</title><rect x="197.9" y="579.0" width="107.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.9" y="590.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_openat (3 samples, 0.24%)</title><rect x="197.9" y="563.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (110 samples, 8.89%)</title><rect x="200.8" y="563.0" width="104.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.8" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_openat (108 samples, 8.73%)</title><rect x="200.8" y="547.0" width="103.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.8" y="558.0">__x64_sys_op..</text>
</g>
<g>
<title>do_sys_open (108 samples, 8.73%)</title><rect x="200.8" y="531.0" width="103.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.8" y="542.0">do_sys_open</text>
</g>
<g>
<title>do_sys_openat2 (104 samples, 8.41%)</title><rect x="203.6" y="515.0" width="99.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.6" y="526.0">do_sys_openat2</text>
</g>
<g>
<title>do_filp_open (75 samples, 6.06%)</title><rect x="203.6" y="499.0" width="71.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="206.6" y="510.0">do_filp_..</text>
</g>
<g>
<title>path_openat (74 samples, 5.98%)</title><rect x="204.6" y="483.0" width="70.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.6" y="494.0">path_ope..</text>
</g>
<g>
<title>alloc_empty_file (22 samples, 1.78%)</title><rect x="207.5" y="467.0" width="20.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.5" y="478.0"></text>
</g>
<g>
<title>__alloc_file (22 samples, 1.78%)</title><rect x="207.5" y="451.0" width="20.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.5" y="462.0"></text>
</g>
<g>
<title>apparmor_file_alloc_security (1 samples, 0.08%)</title><rect x="209.4" y="435.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.4" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc (15 samples, 1.21%)</title><rect x="210.3" y="435.0" width="14.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.3" y="446.0"></text>
</g>
<g>
<title>___slab_alloc (6 samples, 0.49%)</title><rect x="216.0" y="419.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="219.0" y="430.0"></text>
</g>
<g>
<title>new_slab (6 samples, 0.49%)</title><rect x="216.0" y="403.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.0" y="414.0"></text>
</g>
<g>
<title>allocate_slab (5 samples, 0.40%)</title><rect x="216.0" y="387.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="219.0" y="398.0"></text>
</g>
<g>
<title>alloc_pages (3 samples, 0.24%)</title><rect x="216.0" y="371.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.0" y="382.0"></text>
</g>
<g>
<title>__alloc_pages (3 samples, 0.24%)</title><rect x="216.0" y="355.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.0" y="366.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.24%)</title><rect x="216.0" y="339.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="219.0" y="350.0"></text>
</g>
<g>
<title>prep_new_page (2 samples, 0.16%)</title><rect x="217.0" y="323.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="220.0" y="334.0"></text>
</g>
<g>
<title>clear_page_rep (2 samples, 0.16%)</title><rect x="217.0" y="307.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.0" y="318.0"></text>
</g>
<g>
<title>fixup_red_left (1 samples, 0.08%)</title><rect x="218.9" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>memcg_alloc_page_obj_cgroups (1 samples, 0.08%)</title><rect x="219.9" y="371.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.08%)</title><rect x="219.9" y="355.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.9" y="366.0"></text>
</g>
<g>
<title>memcg_alloc_page_obj_cgroups (1 samples, 0.08%)</title><rect x="220.8" y="387.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.8" y="398.0"></text>
</g>
<g>
<title>get_obj_cgroup_from_current (3 samples, 0.24%)</title><rect x="221.8" y="419.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.8" y="430.0"></text>
</g>
<g>
<title>security_file_alloc (4 samples, 0.32%)</title><rect x="224.6" y="435.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.24%)</title><rect x="225.6" y="419.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.6" y="430.0"></text>
</g>
<g>
<title>do_open.isra.0 (34 samples, 2.75%)</title><rect x="228.4" y="467.0" width="32.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.4" y="478.0">do..</text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.08%)</title><rect x="229.4" y="451.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.4" y="462.0"></text>
</g>
<g>
<title>ima_file_check (3 samples, 0.24%)</title><rect x="230.4" y="451.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.4" y="462.0"></text>
</g>
<g>
<title>security_task_getsecid_subj (2 samples, 0.16%)</title><rect x="231.3" y="435.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.3" y="446.0"></text>
</g>
<g>
<title>apparmor_task_getsecid (2 samples, 0.16%)</title><rect x="231.3" y="419.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="234.3" y="430.0"></text>
</g>
<g>
<title>may_open (1 samples, 0.08%)</title><rect x="233.2" y="451.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>vfs_open (28 samples, 2.26%)</title><rect x="234.2" y="451.0" width="26.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="237.2" y="462.0">v..</text>
</g>
<g>
<title>do_dentry_open (18 samples, 1.46%)</title><rect x="234.2" y="435.0" width="17.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.2" y="446.0"></text>
</g>
<g>
<title>ext4_file_open (6 samples, 0.49%)</title><rect x="237.0" y="419.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="240.0" y="430.0"></text>
</g>
<g>
<title>dquot_file_open (1 samples, 0.08%)</title><rect x="238.0" y="403.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="241.0" y="414.0"></text>
</g>
<g>
<title>fscrypt_file_open (2 samples, 0.16%)</title><rect x="238.9" y="403.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.9" y="414.0"></text>
</g>
<g>
<title>dput (1 samples, 0.08%)</title><rect x="239.9" y="387.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.9" y="398.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (1 samples, 0.08%)</title><rect x="239.9" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.9" y="382.0"></text>
</g>
<g>
<title>generic_file_open (2 samples, 0.16%)</title><rect x="240.8" y="403.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.8" y="414.0"></text>
</g>
<g>
<title>file_ra_state_init (2 samples, 0.16%)</title><rect x="242.8" y="419.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="245.8" y="430.0"></text>
</g>
<g>
<title>hook_file_open (1 samples, 0.08%)</title><rect x="244.7" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.7" y="430.0"></text>
</g>
<g>
<title>path_get (1 samples, 0.08%)</title><rect x="245.6" y="419.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="248.6" y="430.0"></text>
</g>
<g>
<title>lockref_get (1 samples, 0.08%)</title><rect x="245.6" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.6" y="414.0"></text>
</g>
<g>
<title>security_file_open (5 samples, 0.40%)</title><rect x="246.6" y="419.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.6" y="430.0"></text>
</g>
<g>
<title>apparmor_file_open (2 samples, 0.16%)</title><rect x="249.4" y="403.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.4" y="414.0"></text>
</g>
<g>
<title>errseq_sample (9 samples, 0.73%)</title><rect x="251.3" y="435.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="254.3" y="446.0"></text>
</g>
<g>
<title>ext4_file_open (1 samples, 0.08%)</title><rect x="259.9" y="435.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="262.9" y="446.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (13 samples, 1.05%)</title><rect x="260.9" y="467.0" width="12.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.9" y="478.0"></text>
</g>
<g>
<title>inode_permission (2 samples, 0.16%)</title><rect x="265.7" y="451.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.7" y="462.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.08%)</title><rect x="266.6" y="435.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="269.6" y="446.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.08%)</title><rect x="267.6" y="451.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.6" y="462.0"></text>
</g>
<g>
<title>step_into (1 samples, 0.08%)</title><rect x="268.5" y="451.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.5" y="462.0"></text>
</g>
<g>
<title>walk_component (4 samples, 0.32%)</title><rect x="269.5" y="451.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.5" y="462.0"></text>
</g>
<g>
<title>lookup_fast (3 samples, 0.24%)</title><rect x="270.4" y="435.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.4" y="446.0"></text>
</g>
<g>
<title>__d_lookup_rcu (3 samples, 0.24%)</title><rect x="270.4" y="419.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.4" y="430.0"></text>
</g>
<g>
<title>path_init (1 samples, 0.08%)</title><rect x="273.3" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.3" y="478.0"></text>
</g>
<g>
<title>step_into (1 samples, 0.08%)</title><rect x="274.2" y="467.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.2" y="478.0"></text>
</g>
<g>
<title>get_unused_fd_flags (2 samples, 0.16%)</title><rect x="275.2" y="499.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.2" y="510.0"></text>
</g>
<g>
<title>_find_next_bit (2 samples, 0.16%)</title><rect x="275.2" y="483.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.2" y="494.0"></text>
</g>
<g>
<title>getname (23 samples, 1.86%)</title><rect x="277.1" y="499.0" width="21.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="280.1" y="510.0">g..</text>
</g>
<g>
<title>getname_flags (23 samples, 1.86%)</title><rect x="277.1" y="483.0" width="21.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="280.1" y="494.0">g..</text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.16%)</title><rect x="278.1" y="467.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.1" y="478.0"></text>
</g>
<g>
<title>memset (15 samples, 1.21%)</title><rect x="280.0" y="467.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.0" y="478.0"></text>
</g>
<g>
<title>strncpy_from_user (5 samples, 0.40%)</title><rect x="294.3" y="467.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.3" y="478.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.16%)</title><rect x="297.1" y="451.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.1" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.16%)</title><rect x="297.1" y="435.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.1" y="446.0"></text>
</g>
<g>
<title>putname (4 samples, 0.32%)</title><rect x="299.0" y="499.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.32%)</title><rect x="299.0" y="483.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.0" y="494.0"></text>
</g>
<g>
<title>get_unused_fd_flags (1 samples, 0.08%)</title><rect x="302.9" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.9" y="526.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="303.8" y="547.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.8" y="558.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (1 samples, 0.08%)</title><rect x="304.8" y="547.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="307.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.toString (3 samples, 0.24%)</title><rect x="305.7" y="659.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/fs/Util.toString (3 samples, 0.24%)</title><rect x="305.7" y="643.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.24%)</title><rect x="305.7" y="627.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.24%)</title><rect x="305.7" y="611.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.24%)</title><rect x="305.7" y="595.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.7" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="307.6" y="579.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="310.6" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (4 samples, 0.32%)</title><rect x="308.6" y="723.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.32%)</title><rect x="308.6" y="707.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.32%)</title><rect x="308.6" y="691.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.32%)</title><rect x="308.6" y="675.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.6" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (28 samples, 2.26%)</title><rect x="312.4" y="739.0" width="26.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.4" y="750.0">j..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (24 samples, 1.94%)</title><rect x="316.2" y="723.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.2" y="734.0">s..</text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (22 samples, 1.78%)</title><rect x="316.2" y="707.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (2 samples, 0.16%)</title><rect x="316.2" y="691.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear0 (2 samples, 0.16%)</title><rect x="316.2" y="675.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.2" y="686.0"></text>
</g>
<g>
<title>JVM_ReferenceClear (2 samples, 0.16%)</title><rect x="316.2" y="659.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="319.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (20 samples, 1.62%)</title><rect x="318.1" y="691.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (20 samples, 1.62%)</title><rect x="318.1" y="675.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.1" y="686.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (20 samples, 1.62%)</title><rect x="318.1" y="659.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.1" y="670.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (20 samples, 1.62%)</title><rect x="318.1" y="643.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.1" y="654.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (20 samples, 1.62%)</title><rect x="318.1" y="627.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.1" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.16%)</title><rect x="319.1" y="611.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="322.1" y="622.0"></text>
</g>
<g>
<title>close (13 samples, 1.05%)</title><rect x="321.0" y="611.0" width="12.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="324.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.89%)</title><rect x="322.9" y="595.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="325.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_close (1 samples, 0.08%)</title><rect x="322.9" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="325.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.81%)</title><rect x="323.8" y="579.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_close (2 samples, 0.16%)</title><rect x="323.8" y="563.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="326.8" y="574.0"></text>
</g>
<g>
<title>close_fd (2 samples, 0.16%)</title><rect x="323.8" y="547.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="323.8" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="326.8" y="542.0"></text>
</g>
<g>
<title>filp_close (1 samples, 0.08%)</title><rect x="324.8" y="531.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="327.8" y="542.0"></text>
</g>
<g>
<title>locks_remove_posix (1 samples, 0.08%)</title><rect x="324.8" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.8" y="526.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (8 samples, 0.65%)</title><rect x="325.7" y="563.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.7" y="574.0"></text>
</g>
<g>
<title>fileDescriptorClose (3 samples, 0.24%)</title><rect x="333.4" y="611.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="336.4" y="622.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.08%)</title><rect x="333.4" y="595.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="336.4" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.08%)</title><rect x="334.3" y="595.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="337.3" y="606.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.08%)</title><rect x="335.3" y="595.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="338.3" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.08%)</title><rect x="336.2" y="611.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.signalAndWait (2 samples, 0.16%)</title><rect x="337.2" y="707.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/foreign/ResourceScopeImpl.addOrCleanupIfFail (6 samples, 0.49%)</title><rect x="339.1" y="739.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.mapInternal (248 samples, 20.05%)</title><rect x="344.8" y="739.0" width="236.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.8" y="750.0">sun/nio/ch/FileChannelImpl.mapI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.mapInternal (248 samples, 20.05%)</title><rect x="344.8" y="723.0" width="236.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.8" y="734.0">sun/nio/ch/FileChannelImpl.mapI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$DefaultUnmapper.&lt;init&gt; (5 samples, 0.40%)</title><rect x="346.7" y="707.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$DefaultUnmapper.incrementStats (5 samples, 0.40%)</title><rect x="346.7" y="691.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.24%)</title><rect x="351.5" y="707.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.5" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.24%)</title><rect x="351.5" y="691.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.5" y="702.0"></text>
</g>
<g>
<title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="351.5" y="675.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="354.5" y="686.0"></text>
</g>
<g>
<title>exc_page_fault (1 samples, 0.08%)</title><rect x="351.5" y="659.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.5" y="670.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="351.5" y="643.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="354.5" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.16%)</title><rect x="352.5" y="675.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.5" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.16%)</title><rect x="352.5" y="659.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.16%)</title><rect x="352.5" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.08%)</title><rect x="354.4" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.4" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.08%)</title><rect x="354.4" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.08%)</title><rect x="355.3" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.3" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.08%)</title><rect x="355.3" y="691.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.map0 (198 samples, 16.01%)</title><rect x="356.3" y="707.0" width="188.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.3" y="718.0">sun/nio/ch/FileChannelIm..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileChannelImpl_map0 (6 samples, 0.49%)</title><rect x="363.0" y="691.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="366.0" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="363.0" y="675.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="366.0" y="686.0"></text>
</g>
<g>
<title>jni_GetObjectField (4 samples, 0.32%)</title><rect x="364.9" y="675.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="367.9" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;401510ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 401510ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.08%)</title><rect x="366.8" y="659.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="369.8" y="670.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.08%)</title><rect x="366.8" y="643.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="369.8" y="654.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*, AllocFailStrategy::AllocFailEnum) (1 samples, 0.08%)</title><rect x="367.7" y="659.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.7" y="670.0"></text>
</g>
<g>
<title>__mmap (184 samples, 14.87%)</title><rect x="368.7" y="691.0" width="175.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="371.7" y="702.0">__mmap</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (177 samples, 14.31%)</title><rect x="375.4" y="675.0" width="168.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.4" y="686.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>__x64_sys_mmap (1 samples, 0.08%)</title><rect x="375.4" y="659.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="378.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (176 samples, 14.23%)</title><rect x="376.3" y="659.0" width="167.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.3" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_mmap (168 samples, 13.58%)</title><rect x="376.3" y="643.0" width="160.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="379.3" y="654.0">__x64_sys_mmap</text>
</g>
<g>
<title>fget (1 samples, 0.08%)</title><rect x="376.3" y="627.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="379.3" y="638.0"></text>
</g>
<g>
<title>is_file_shm_hugepages (1 samples, 0.08%)</title><rect x="377.3" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.3" y="638.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (166 samples, 13.42%)</title><rect x="378.2" y="627.0" width="158.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.2" y="638.0">ksys_mmap_pgoff</text>
</g>
<g>
<title>fget (1 samples, 0.08%)</title><rect x="379.2" y="611.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.2" y="622.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (164 samples, 13.26%)</title><rect x="380.1" y="611.0" width="156.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.1" y="622.0">vm_mmap_pgoff</text>
</g>
<g>
<title>apparmor_mmap_file (3 samples, 0.24%)</title><rect x="380.1" y="595.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.1" y="606.0"></text>
</g>
<g>
<title>do_mmap (152 samples, 12.29%)</title><rect x="383.0" y="595.0" width="145.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="386.0" y="606.0">do_mmap</text>
</g>
<g>
<title>ext4_file_mmap (3 samples, 0.24%)</title><rect x="383.9" y="579.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="386.9" y="590.0"></text>
</g>
<g>
<title>get_unmapped_area (51 samples, 4.12%)</title><rect x="386.8" y="579.0" width="48.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.8" y="590.0">get_..</text>
</g>
<g>
<title>arch_get_unmapped_area_topdown (2 samples, 0.16%)</title><rect x="387.8" y="563.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.8" y="574.0"></text>
</g>
<g>
<title>cap_mmap_addr (1 samples, 0.08%)</title><rect x="389.7" y="563.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="392.7" y="574.0"></text>
</g>
<g>
<title>thp_get_unmapped_area (47 samples, 3.80%)</title><rect x="390.6" y="563.0" width="44.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="393.6" y="574.0">thp_..</text>
</g>
<g>
<title>arch_get_unmapped_area_topdown (45 samples, 3.64%)</title><rect x="391.6" y="547.0" width="42.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.6" y="558.0">arch..</text>
</g>
<g>
<title>vm_unmapped_area (44 samples, 3.56%)</title><rect x="392.5" y="531.0" width="42.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.5" y="542.0">vm_..</text>
</g>
<g>
<title>get_mmap_base (1 samples, 0.08%)</title><rect x="434.5" y="547.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.5" y="558.0"></text>
</g>
<g>
<title>is_file_shm_hugepages (1 samples, 0.08%)</title><rect x="435.4" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="438.4" y="590.0"></text>
</g>
<g>
<title>may_expand_vm (1 samples, 0.08%)</title><rect x="436.4" y="579.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.4" y="590.0"></text>
</g>
<g>
<title>mmap_region (93 samples, 7.52%)</title><rect x="437.4" y="579.0" width="88.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.4" y="590.0">mmap_region</text>
</g>
<g>
<title>__vma_link_file (1 samples, 0.08%)</title><rect x="445.9" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.9" y="574.0"></text>
</g>
<g>
<title>ext4_file_mmap (3 samples, 0.24%)</title><rect x="446.9" y="563.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.9" y="574.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.24%)</title><rect x="446.9" y="547.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.9" y="558.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.08%)</title><rect x="447.8" y="531.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.8" y="542.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.08%)</title><rect x="447.8" y="515.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.8" y="526.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.08%)</title><rect x="447.8" y="499.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.8" y="510.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.08%)</title><rect x="448.8" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.8" y="542.0"></text>
</g>
<g>
<title>may_expand_vm (1 samples, 0.08%)</title><rect x="449.8" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.8" y="574.0"></text>
</g>
<g>
<title>perf_event_mmap (2 samples, 0.16%)</title><rect x="450.7" y="563.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.7" y="574.0"></text>
</g>
<g>
<title>vm_area_alloc (18 samples, 1.46%)</title><rect x="452.6" y="563.0" width="17.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.6" y="574.0"></text>
</g>
<g>
<title>get_obj_cgroup_from_current (1 samples, 0.08%)</title><rect x="453.6" y="547.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="456.6" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (13 samples, 1.05%)</title><rect x="454.5" y="547.0" width="12.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="457.5" y="558.0"></text>
</g>
<g>
<title>___slab_alloc (5 samples, 0.40%)</title><rect x="460.3" y="531.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>new_slab (4 samples, 0.32%)</title><rect x="461.2" y="515.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.2" y="526.0"></text>
</g>
<g>
<title>allocate_slab (4 samples, 0.32%)</title><rect x="461.2" y="499.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.2" y="510.0"></text>
</g>
<g>
<title>alloc_pages (1 samples, 0.08%)</title><rect x="461.2" y="483.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="464.2" y="494.0"></text>
</g>
<g>
<title>__alloc_pages (1 samples, 0.08%)</title><rect x="461.2" y="467.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="464.2" y="478.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="461.2" y="451.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="464.2" y="462.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.08%)</title><rect x="461.2" y="435.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="464.2" y="446.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.08%)</title><rect x="461.2" y="419.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.2" y="430.0"></text>
</g>
<g>
<title>get_random_u32 (2 samples, 0.16%)</title><rect x="462.2" y="483.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.2" y="494.0"></text>
</g>
<g>
<title>memcg_alloc_page_obj_cgroups (1 samples, 0.08%)</title><rect x="464.1" y="483.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="467.1" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.08%)</title><rect x="464.1" y="467.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.1" y="478.0"></text>
</g>
<g>
<title>mem_cgroup_from_task (1 samples, 0.08%)</title><rect x="465.0" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.0" y="542.0"></text>
</g>
<g>
<title>obj_cgroup_charge (1 samples, 0.08%)</title><rect x="466.0" y="531.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.0" y="542.0"></text>
</g>
<g>
<title>try_charge_memcg (1 samples, 0.08%)</title><rect x="466.0" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.0" y="526.0"></text>
</g>
<g>
<title>memset (3 samples, 0.24%)</title><rect x="466.9" y="547.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.9" y="558.0"></text>
</g>
<g>
<title>vm_pgprot_modify (1 samples, 0.08%)</title><rect x="469.8" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.8" y="574.0"></text>
</g>
<g>
<title>vma_link (57 samples, 4.61%)</title><rect x="470.7" y="563.0" width="54.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.7" y="574.0">vma_l..</text>
</g>
<g>
<title>__vma_link_file (26 samples, 2.10%)</title><rect x="471.7" y="547.0" width="24.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.7" y="558.0">_..</text>
</g>
<g>
<title>vma_interval_tree_insert (26 samples, 2.10%)</title><rect x="471.7" y="531.0" width="24.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.7" y="542.0">v..</text>
</g>
<g>
<title>__rb_insert_augmented (6 samples, 0.49%)</title><rect x="489.8" y="515.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.8" y="526.0"></text>
</g>
<g>
<title>vma_interval_tree_augment_rotate (1 samples, 0.08%)</title><rect x="495.5" y="515.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.5" y="526.0"></text>
</g>
<g>
<title>__vma_link_rb (23 samples, 1.86%)</title><rect x="496.5" y="547.0" width="21.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.5" y="558.0">_..</text>
</g>
<g>
<title>__rb_insert_augmented (4 samples, 0.32%)</title><rect x="512.7" y="531.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="515.7" y="542.0"></text>
</g>
<g>
<title>vma_gap_callbacks_rotate (2 samples, 0.16%)</title><rect x="514.6" y="515.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="517.6" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r14 (1 samples, 0.08%)</title><rect x="516.5" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.5" y="542.0"></text>
</g>
<g>
<title>vma_gap_callbacks_rotate (1 samples, 0.08%)</title><rect x="517.5" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.5" y="542.0"></text>
</g>
<g>
<title>down_write (6 samples, 0.49%)</title><rect x="518.4" y="547.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.4" y="558.0"></text>
</g>
<g>
<title>__cond_resched (1 samples, 0.08%)</title><rect x="523.2" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.2" y="542.0"></text>
</g>
<g>
<title>vma_interval_tree_insert (1 samples, 0.08%)</title><rect x="524.2" y="547.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.2" y="558.0"></text>
</g>
<g>
<title>vma_set_page_prot (1 samples, 0.08%)</title><rect x="525.1" y="563.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.1" y="574.0"></text>
</g>
<g>
<title>vma_wants_writenotify (1 samples, 0.08%)</title><rect x="525.1" y="547.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.1" y="558.0"></text>
</g>
<g>
<title>path_noexec (1 samples, 0.08%)</title><rect x="526.1" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.1" y="590.0"></text>
</g>
<g>
<title>thp_get_unmapped_area (1 samples, 0.08%)</title><rect x="527.0" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.0" y="590.0"></text>
</g>
<g>
<title>down_write_killable (5 samples, 0.40%)</title><rect x="528.0" y="595.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.0" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.08%)</title><rect x="531.8" y="579.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="534.8" y="590.0"></text>
</g>
<g>
<title>security_mmap_file (4 samples, 0.32%)</title><rect x="532.7" y="595.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="535.7" y="606.0"></text>
</g>
<g>
<title>apparmor_mmap_file (3 samples, 0.24%)</title><rect x="532.7" y="579.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="535.7" y="590.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.08%)</title><rect x="532.7" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="535.7" y="574.0"></text>
</g>
<g>
<title>common_mmap.part.0 (2 samples, 0.16%)</title><rect x="533.7" y="563.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.7" y="574.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.16%)</title><rect x="533.7" y="547.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.7" y="558.0"></text>
</g>
<g>
<title>ima_file_mmap (1 samples, 0.08%)</title><rect x="535.6" y="579.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="538.6" y="590.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (8 samples, 0.65%)</title><rect x="536.6" y="643.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.08%)</title><rect x="544.2" y="691.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="547.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.size (37 samples, 2.99%)</title><rect x="545.1" y="707.0" width="35.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.1" y="718.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.size0 (37 samples, 2.99%)</title><rect x="545.1" y="691.0" width="35.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.1" y="702.0">sun..</text>
</g>
<g>
<title>__fxstat64 (36 samples, 2.91%)</title><rect x="546.1" y="675.0" width="34.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="549.1" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 2.67%)</title><rect x="549.0" y="659.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.0" y="670.0">en..</text>
</g>
<g>
<title>__x64_sys_newfstat (3 samples, 0.24%)</title><rect x="549.0" y="643.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 2.43%)</title><rect x="551.8" y="643.0" width="28.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.8" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_newfstat (21 samples, 1.70%)</title><rect x="552.8" y="627.0" width="20.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.8" y="638.0"></text>
</g>
<g>
<title>__do_sys_newfstat (21 samples, 1.70%)</title><rect x="552.8" y="611.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="555.8" y="622.0"></text>
</g>
<g>
<title>cp_new_stat (8 samples, 0.65%)</title><rect x="552.8" y="595.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="555.8" y="606.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.08%)</title><rect x="553.7" y="579.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.40%)</title><rect x="554.7" y="579.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.7" y="590.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.08%)</title><rect x="559.5" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.5" y="590.0"></text>
</g>
<g>
<title>vfs_fstat (13 samples, 1.05%)</title><rect x="560.4" y="595.0" width="12.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.4" y="606.0"></text>
</g>
<g>
<title>__fdget_raw (1 samples, 0.08%)</title><rect x="560.4" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="560.4" y="563.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.4" y="574.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.08%)</title><rect x="561.4" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="564.4" y="590.0"></text>
</g>
<g>
<title>security_inode_getattr (1 samples, 0.08%)</title><rect x="562.3" y="579.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.3" y="590.0"></text>
</g>
<g>
<title>vfs_getattr (10 samples, 0.81%)</title><rect x="563.3" y="579.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.3" y="590.0"></text>
</g>
<g>
<title>security_inode_getattr (4 samples, 0.32%)</title><rect x="564.2" y="563.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="567.2" y="574.0"></text>
</g>
<g>
<title>apparmor_inode_getattr (3 samples, 0.24%)</title><rect x="565.2" y="547.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.2" y="558.0"></text>
</g>
<g>
<title>common_perm_cond (3 samples, 0.24%)</title><rect x="565.2" y="531.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.2" y="542.0"></text>
</g>
<g>
<title>common_perm (1 samples, 0.08%)</title><rect x="567.1" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.1" y="526.0"></text>
</g>
<g>
<title>vfs_getattr_nosec (5 samples, 0.40%)</title><rect x="568.0" y="563.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.0" y="574.0"></text>
</g>
<g>
<title>ext4_file_getattr (2 samples, 0.16%)</title><rect x="570.0" y="547.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.0" y="558.0"></text>
</g>
<g>
<title>ext4_getattr (1 samples, 0.08%)</title><rect x="571.9" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.9" y="558.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (8 samples, 0.65%)</title><rect x="572.8" y="627.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.08%)</title><rect x="580.4" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.08%)</title><rect x="580.4" y="691.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.4" y="702.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/Storage.save (6 samples, 0.49%)</title><rect x="581.4" y="803.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.4" y="814.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/Storage.save (6 samples, 0.49%)</title><rect x="581.4" y="787.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.08%)</title><rect x="581.4" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.4" y="782.0"></text>
</g>
<g>
<title>java/nio/file/Files.deleteIfExists (1 samples, 0.08%)</title><rect x="582.4" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/fs/AbstractFileSystemProvider.deleteIfExists (1 samples, 0.08%)</title><rect x="582.4" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (1 samples, 0.08%)</title><rect x="582.4" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileAttributes.get (1 samples, 0.08%)</title><rect x="582.4" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.lstat (1 samples, 0.08%)</title><rect x="582.4" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.lstat0 (1 samples, 0.08%)</title><rect x="582.4" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.4" y="702.0"></text>
</g>
<g>
<title>__lxstat (1 samples, 0.08%)</title><rect x="582.4" y="675.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="585.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="582.4" y="659.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="582.4" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_newlstat (1 samples, 0.08%)</title><rect x="582.4" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="585.4" y="638.0"></text>
</g>
<g>
<title>__do_sys_newlstat (1 samples, 0.08%)</title><rect x="582.4" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.4" y="622.0"></text>
</g>
<g>
<title>vfs_statx (1 samples, 0.08%)</title><rect x="582.4" y="595.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.4" y="606.0"></text>
</g>
<g>
<title>user_path_at_empty (1 samples, 0.08%)</title><rect x="582.4" y="579.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.4" y="590.0"></text>
</g>
<g>
<title>filename_lookup (1 samples, 0.08%)</title><rect x="582.4" y="563.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="585.4" y="574.0"></text>
</g>
<g>
<title>path_lookupat.isra.0 (1 samples, 0.08%)</title><rect x="582.4" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="585.4" y="558.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.08%)</title><rect x="582.4" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.4" y="542.0"></text>
</g>
<g>
<title>__lookup_slow (1 samples, 0.08%)</title><rect x="582.4" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.4" y="526.0"></text>
</g>
<g>
<title>ext4_lookup (1 samples, 0.08%)</title><rect x="582.4" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.4" y="510.0"></text>
</g>
<g>
<title>__ext4_find_entry (1 samples, 0.08%)</title><rect x="582.4" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="585.4" y="494.0"></text>
</g>
<g>
<title>ext4_dx_find_entry (1 samples, 0.08%)</title><rect x="582.4" y="467.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="585.4" y="478.0"></text>
</g>
<g>
<title>ext4_search_dir (1 samples, 0.08%)</title><rect x="582.4" y="451.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.4" y="462.0"></text>
</g>
<g>
<title>ext4_match.part.0 (1 samples, 0.08%)</title><rect x="582.4" y="435.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="585.4" y="446.0"></text>
</g>
<g>
<title>fscrypt_match_name (1 samples, 0.08%)</title><rect x="582.4" y="419.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.4" y="430.0"></text>
</g>
<g>
<title>java/nio/file/Path.resolveSibling (1 samples, 0.08%)</title><rect x="583.3" y="771.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="782.0"></text>
</g>
<g>
<title>jdk/incubator/foreign/MemorySegment.mapFile (1 samples, 0.08%)</title><rect x="584.3" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/foreign/MappedMemorySegmentImpl.makeMappedSegment (1 samples, 0.08%)</title><rect x="584.3" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.3" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.08%)</title><rect x="584.3" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.3" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.08%)</title><rect x="584.3" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.08%)</title><rect x="584.3" y="707.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.08%)</title><rect x="584.3" y="691.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.08%)</title><rect x="584.3" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (1 samples, 0.08%)</title><rect x="584.3" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (1 samples, 0.08%)</title><rect x="584.3" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (1 samples, 0.08%)</title><rect x="584.3" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="584.3" y="611.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="587.3" y="622.0"></text>
</g>
<g>
<title>__open64 (1 samples, 0.08%)</title><rect x="584.3" y="595.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="587.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="584.3" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="584.3" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.08%)</title><rect x="584.3" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.3" y="558.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.08%)</title><rect x="584.3" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.3" y="542.0"></text>
</g>
<g>
<title>do_sys_openat2 (1 samples, 0.08%)</title><rect x="584.3" y="515.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.3" y="526.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.08%)</title><rect x="584.3" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="587.3" y="510.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.08%)</title><rect x="584.3" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.3" y="494.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.08%)</title><rect x="584.3" y="467.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.3" y="478.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.08%)</title><rect x="584.3" y="451.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="587.3" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="584.3" y="435.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.3" y="446.0"></text>
</g>
<g>
<title>obj_cgroup_charge (1 samples, 0.08%)</title><rect x="584.3" y="419.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/foreign/ResourceScopeImpl.close (1 samples, 0.08%)</title><rect x="585.2" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/foreign/ConfinedScope$ConfinedResourceList.cleanup (1 samples, 0.08%)</title><rect x="585.2" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/foreign/ResourceScopeImpl$ResourceList.cleanup (1 samples, 0.08%)</title><rect x="585.2" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="588.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/foreign/MappedMemorySegmentImpl$1.cleanup (1 samples, 0.08%)</title><rect x="585.2" y="723.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Unmapper.unmap (1 samples, 0.08%)</title><rect x="585.2" y="707.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.unmap0 (1 samples, 0.08%)</title><rect x="585.2" y="691.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.2" y="702.0"></text>
</g>
<g>
<title>__munmap (1 samples, 0.08%)</title><rect x="585.2" y="675.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="588.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="585.2" y="659.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="585.2" y="643.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_munmap (1 samples, 0.08%)</title><rect x="585.2" y="627.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.2" y="638.0"></text>
</g>
<g>
<title>__vm_munmap (1 samples, 0.08%)</title><rect x="585.2" y="611.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.2" y="622.0"></text>
</g>
<g>
<title>__do_munmap (1 samples, 0.08%)</title><rect x="585.2" y="595.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.2" y="606.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.08%)</title><rect x="585.2" y="579.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.08%)</title><rect x="586.2" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.08%)</title><rect x="586.2" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl.run (135 samples, 10.91%)</title><rect x="587.1" y="883.0" width="128.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.1" y="894.0">jdk/internal/ref..</text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (135 samples, 10.91%)</title><rect x="587.1" y="867.0" width="128.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.1" y="878.0">jdk/internal/ref..</text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (135 samples, 10.91%)</title><rect x="587.1" y="851.0" width="128.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.1" y="862.0">jdk/internal/ref..</text>
</g>
<g>
<title>jdk/internal/foreign/ResourceScopeImpl$ResourceList.run (135 samples, 10.91%)</title><rect x="587.1" y="835.0" width="128.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.1" y="846.0">jdk/internal/for..</text>
</g>
<g>
<title>jdk/internal/foreign/SharedScope$SharedResourceList.cleanup (135 samples, 10.91%)</title><rect x="587.1" y="819.0" width="128.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.1" y="830.0">jdk/internal/for..</text>
</g>
<g>
<title>jdk/internal/foreign/ResourceScopeImpl$ResourceList.cleanup (135 samples, 10.91%)</title><rect x="587.1" y="803.0" width="128.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.1" y="814.0">jdk/internal/for..</text>
</g>
<g>
<title>jdk/internal/foreign/MappedMemorySegmentImpl$1.cleanup (135 samples, 10.91%)</title><rect x="587.1" y="787.0" width="128.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.1" y="798.0">jdk/internal/for..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Unmapper.unmap (134 samples, 10.83%)</title><rect x="588.1" y="771.0" width="127.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.1" y="782.0">sun/nio/ch/FileC..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$DefaultUnmapper.decrementStats (2 samples, 0.16%)</title><rect x="588.1" y="755.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.unmap0 (132 samples, 10.67%)</title><rect x="590.0" y="755.0" width="125.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.0" y="766.0">sun/nio/ch/File..</text>
</g>
<g>
<title>__munmap (131 samples, 10.59%)</title><rect x="590.9" y="739.0" width="125.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.9" y="750.0">__munmap</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 10.27%)</title><rect x="594.8" y="723.0" width="121.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.8" y="734.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_munmap (2 samples, 0.16%)</title><rect x="594.8" y="707.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="597.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (124 samples, 10.02%)</title><rect x="596.7" y="707.0" width="118.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_munmap (78 samples, 6.31%)</title><rect x="597.6" y="691.0" width="74.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.6" y="702.0">__x64_sy..</text>
</g>
<g>
<title>__vm_munmap (78 samples, 6.31%)</title><rect x="597.6" y="675.0" width="74.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.6" y="686.0">__vm_mun..</text>
</g>
<g>
<title>__do_munmap (73 samples, 5.90%)</title><rect x="598.6" y="659.0" width="69.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.6" y="670.0">__do_mu..</text>
</g>
<g>
<title>__vma_rb_erase (5 samples, 0.40%)</title><rect x="602.4" y="643.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="605.4" y="654.0"></text>
</g>
<g>
<title>__rb_erase_color (2 samples, 0.16%)</title><rect x="604.3" y="627.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="607.3" y="638.0"></text>
</g>
<g>
<title>vma_gap_callbacks_rotate (1 samples, 0.08%)</title><rect x="605.2" y="611.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.2" y="622.0"></text>
</g>
<g>
<title>vma_gap_callbacks_rotate (1 samples, 0.08%)</title><rect x="606.2" y="627.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.2" y="638.0"></text>
</g>
<g>
<title>downgrade_write (2 samples, 0.16%)</title><rect x="607.2" y="643.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="610.2" y="654.0"></text>
</g>
<g>
<title>find_vma (11 samples, 0.89%)</title><rect x="609.1" y="643.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="612.1" y="654.0"></text>
</g>
<g>
<title>vmacache_find (3 samples, 0.24%)</title><rect x="616.7" y="627.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="619.7" y="638.0"></text>
</g>
<g>
<title>remove_vma (19 samples, 1.54%)</title><rect x="619.6" y="643.0" width="18.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.6" y="654.0"></text>
</g>
<g>
<title>vm_area_free (16 samples, 1.29%)</title><rect x="619.6" y="627.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="622.6" y="638.0"></text>
</g>
<g>
<title>kmem_cache_free (16 samples, 1.29%)</title><rect x="619.6" y="611.0" width="15.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="622.6" y="622.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.32%)</title><rect x="629.1" y="595.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="632.1" y="606.0"></text>
</g>
<g>
<title>obj_cgroup_uncharge (2 samples, 0.16%)</title><rect x="632.9" y="595.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="635.9" y="606.0"></text>
</g>
<g>
<title>refill_obj_stock (2 samples, 0.16%)</title><rect x="632.9" y="579.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="635.9" y="590.0"></text>
</g>
<g>
<title>obj_cgroup_uncharge_pages (1 samples, 0.08%)</title><rect x="633.9" y="563.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="636.9" y="574.0"></text>
</g>
<g>
<title>refill_stock (1 samples, 0.08%)</title><rect x="633.9" y="547.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.9" y="558.0"></text>
</g>
<g>
<title>vma_do_fput (3 samples, 0.24%)</title><rect x="634.8" y="627.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.8" y="638.0"></text>
</g>
<g>
<title>fput (3 samples, 0.24%)</title><rect x="634.8" y="611.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.8" y="622.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.08%)</title><rect x="634.8" y="595.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.8" y="606.0"></text>
</g>
<g>
<title>task_work_add (1 samples, 0.08%)</title><rect x="634.8" y="579.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="637.8" y="590.0"></text>
</g>
<g>
<title>kick_process (1 samples, 0.08%)</title><rect x="634.8" y="563.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="637.8" y="574.0"></text>
</g>
<g>
<title>task_work_add (2 samples, 0.16%)</title><rect x="635.8" y="595.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="638.8" y="606.0"></text>
</g>
<g>
<title>unmap_region (29 samples, 2.34%)</title><rect x="637.7" y="643.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.7" y="654.0">u..</text>
</g>
<g>
<title>free_pgtables (22 samples, 1.78%)</title><rect x="638.6" y="627.0" width="21.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.6" y="638.0"></text>
</g>
<g>
<title>unlink_file_vma (20 samples, 1.62%)</title><rect x="638.6" y="611.0" width="19.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="641.6" y="622.0"></text>
</g>
<g>
<title>__remove_shared_vm_struct.isra.0 (7 samples, 0.57%)</title><rect x="645.3" y="595.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.3" y="606.0"></text>
</g>
<g>
<title>vma_interval_tree_remove (7 samples, 0.57%)</title><rect x="645.3" y="579.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.3" y="590.0"></text>
</g>
<g>
<title>__rb_erase_color (1 samples, 0.08%)</title><rect x="650.1" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.1" y="574.0"></text>
</g>
<g>
<title>vma_interval_tree_augment_rotate (1 samples, 0.08%)</title><rect x="650.1" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.1" y="558.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="651.0" y="563.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.0" y="574.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="651.0" y="547.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.0" y="558.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="651.0" y="531.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.0" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="651.0" y="515.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.0" y="526.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.08%)</title><rect x="651.0" y="499.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.08%)</title><rect x="651.0" y="483.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.08%)</title><rect x="651.0" y="467.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.0" y="478.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.08%)</title><rect x="651.0" y="451.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="654.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="651.0" y="435.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.0" y="446.0"></text>
</g>
<g>
<title>obj_cgroup_uncharge (1 samples, 0.08%)</title><rect x="651.0" y="419.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.0" y="430.0"></text>
</g>
<g>
<title>refill_obj_stock (1 samples, 0.08%)</title><rect x="651.0" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.0" y="414.0"></text>
</g>
<g>
<title>down_write (6 samples, 0.49%)</title><rect x="652.0" y="595.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="655.0" y="606.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.16%)</title><rect x="657.7" y="611.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="660.7" y="622.0"></text>
</g>
<g>
<title>lru_add_drain (1 samples, 0.08%)</title><rect x="659.6" y="627.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="662.6" y="638.0"></text>
</g>
<g>
<title>lru_add_drain_cpu (1 samples, 0.08%)</title><rect x="659.6" y="611.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.6" y="622.0"></text>
</g>
<g>
<title>unmap_single_vma (1 samples, 0.08%)</title><rect x="660.6" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.6" y="638.0"></text>
</g>
<g>
<title>unmap_vmas (4 samples, 0.32%)</title><rect x="661.5" y="627.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.5" y="638.0"></text>
</g>
<g>
<title>unmap_single_vma (3 samples, 0.24%)</title><rect x="662.5" y="611.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="665.5" y="622.0"></text>
</g>
<g>
<title>unmap_page_range (2 samples, 0.16%)</title><rect x="663.4" y="595.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="666.4" y="606.0"></text>
</g>
<g>
<title>userfaultfd_unmap_prep (2 samples, 0.16%)</title><rect x="665.3" y="643.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="668.3" y="654.0"></text>
</g>
<g>
<title>vmacache_update (1 samples, 0.08%)</title><rect x="667.3" y="643.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.3" y="654.0"></text>
</g>
<g>
<title>down_write_killable (4 samples, 0.32%)</title><rect x="668.2" y="659.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.2" y="670.0"></text>
</g>
<g>
<title>__cond_resched (1 samples, 0.08%)</title><rect x="670.1" y="643.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.1" y="654.0"></text>
</g>
<g>
<title>rwsem_down_write_slowpath (1 samples, 0.08%)</title><rect x="671.1" y="643.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="674.1" y="654.0"></text>
</g>
<g>
<title>rwsem_spin_on_owner (1 samples, 0.08%)</title><rect x="671.1" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="674.1" y="638.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="672.0" y="691.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.0" y="702.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="672.0" y="675.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="675.0" y="686.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="672.0" y="659.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.0" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="672.0" y="643.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.0" y="654.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.08%)</title><rect x="672.0" y="627.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.0" y="638.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.08%)</title><rect x="672.0" y="611.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="675.0" y="622.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.08%)</title><rect x="672.0" y="595.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.0" y="606.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.08%)</title><rect x="672.0" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.0" y="590.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="672.0" y="563.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="675.0" y="574.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (3 samples, 0.24%)</title><rect x="673.0" y="691.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="676.0" y="702.0"></text>
</g>
<g>
<title>syscall_exit_to_user_mode (41 samples, 3.31%)</title><rect x="675.8" y="691.0" width="39.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.8" y="702.0">sys..</text>
</g>
<g>
<title>exit_to_user_mode_prepare (41 samples, 3.31%)</title><rect x="675.8" y="675.0" width="39.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.8" y="686.0">exi..</text>
</g>
<g>
<title>mem_cgroup_handle_over_high (1 samples, 0.08%)</title><rect x="675.8" y="659.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.8" y="670.0"></text>
</g>
<g>
<title>task_work_run (40 samples, 3.23%)</title><rect x="676.8" y="659.0" width="38.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="679.8" y="670.0">tas..</text>
</g>
<g>
<title>____fput (37 samples, 2.99%)</title><rect x="679.7" y="643.0" width="35.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="682.7" y="654.0">___..</text>
</g>
<g>
<title>__fput (37 samples, 2.99%)</title><rect x="679.7" y="627.0" width="35.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="682.7" y="638.0">__f..</text>
</g>
<g>
<title>apparmor_file_free_security (2 samples, 0.16%)</title><rect x="705.4" y="611.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="708.4" y="622.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="706.4" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.4" y="606.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="706.4" y="579.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.4" y="590.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="706.4" y="563.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="709.4" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="706.4" y="547.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="709.4" y="558.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.08%)</title><rect x="706.4" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.4" y="542.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.08%)</title><rect x="706.4" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="709.4" y="526.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.08%)</title><rect x="706.4" y="499.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="709.4" y="510.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.08%)</title><rect x="706.4" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.4" y="494.0"></text>
</g>
<g>
<title>call_rcu (3 samples, 0.24%)</title><rect x="707.3" y="611.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="710.3" y="622.0"></text>
</g>
<g>
<title>ext4_release_file (1 samples, 0.08%)</title><rect x="710.2" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.2" y="622.0"></text>
</g>
<g>
<title>lockref_put_return (2 samples, 0.16%)</title><rect x="711.1" y="611.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="714.1" y="622.0"></text>
</g>
<g>
<title>rcu_read_unlock_strict (1 samples, 0.08%)</title><rect x="713.0" y="611.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.0" y="622.0"></text>
</g>
<g>
<title>security_file_free (1 samples, 0.08%)</title><rect x="714.0" y="611.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.0" y="622.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="714.0" y="595.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="717.0" y="606.0"></text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="714.9" y="707.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="717.9" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (374 samples, 30.23%)</title><rect x="715.9" y="899.0" width="356.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.16%)</title><rect x="715.9" y="883.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.16%)</title><rect x="715.9" y="867.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="715.9" y="851.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="716.9" y="851.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="719.9" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="716.9" y="835.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="719.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="716.9" y="819.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="719.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="716.9" y="803.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="719.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_clock_gettime (1 samples, 0.08%)</title><rect x="716.9" y="787.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="719.9" y="798.0"></text>
</g>
<g>
<title>posix_get_monotonic_timespec (1 samples, 0.08%)</title><rect x="716.9" y="771.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="719.9" y="782.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.08%)</title><rect x="716.9" y="755.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.9" y="766.0"></text>
</g>
<g>
<title>read_hpet (1 samples, 0.08%)</title><rect x="716.9" y="739.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="719.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (372 samples, 30.07%)</title><rect x="717.8" y="883.0" width="354.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.8" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (372 samples, 30.07%)</title><rect x="717.8" y="867.0" width="354.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.8" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (350 samples, 28.29%)</title><rect x="717.8" y="851.0" width="333.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.8" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (340 samples, 27.49%)</title><rect x="717.8" y="835.0" width="324.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.8" y="846.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>ok/dht/test/kazakov/service/http/DaoHttpServer.handleRequest (340 samples, 27.49%)</title><rect x="717.8" y="819.0" width="324.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.8" y="830.0">ok/dht/test/kazakov/service/http/DaoHttpServ..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (340 samples, 27.49%)</title><rect x="717.8" y="803.0" width="324.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.8" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_handlePut.handleRequest (340 samples, 27.49%)</title><rect x="717.8" y="787.0" width="324.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.8" y="798.0">RequestHandler1_handlePut.handleRequest</text>
</g>
<g>
<title>ok/dht/test/kazakov/service/DaoWebService.handlePut (300 samples, 24.25%)</title><rect x="717.8" y="771.0" width="286.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.8" y="782.0">ok/dht/test/kazakov/service/DaoWebServ..</text>
</g>
<g>
<title>ok/dht/test/kazakov/service/DaoService.upsert (299 samples, 24.17%)</title><rect x="717.8" y="755.0" width="285.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.8" y="766.0">ok/dht/test/kazakov/service/DaoService..</text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao.upsert (298 samples, 24.09%)</title><rect x="717.8" y="739.0" width="284.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.8" y="750.0">ok/dht/test/kazakov/dao/MemorySegmentD..</text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao$Memory.put (1 samples, 0.08%)</title><rect x="717.8" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.08%)</title><rect x="717.8" y="707.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.08%)</title><rect x="717.8" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="717.8" y="675.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle.checkExactAccessMode (1 samples, 0.08%)</title><rect x="717.8" y="659.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.8" y="670.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao.flushInBg (297 samples, 24.01%)</title><rect x="718.8" y="723.0" width="283.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.8" y="734.0">ok/dht/test/kazakov/dao/MemorySegmentD..</text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (1 samples, 0.08%)</title><rect x="733.1" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (1 samples, 0.08%)</title><rect x="733.1" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.08%)</title><rect x="733.1" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.workerCountOf (1 samples, 0.08%)</title><rect x="733.1" y="659.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (185 samples, 14.96%)</title><rect x="734.0" y="707.0" width="176.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.0" y="718.0">java/util/concurrent/lo..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (181 samples, 14.63%)</title><rect x="737.8" y="691.0" width="172.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.8" y="702.0">java/util/concurrent/l..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (181 samples, 14.63%)</title><rect x="737.8" y="675.0" width="172.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="686.0">java/util/concurrent/l..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (104 samples, 8.41%)</title><rect x="811.3" y="659.0" width="99.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.3" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (82 samples, 6.63%)</title><rect x="910.5" y="707.0" width="78.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.5" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (82 samples, 6.63%)</title><rect x="910.5" y="691.0" width="78.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.5" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (4 samples, 0.32%)</title><rect x="978.2" y="675.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryRelease (7 samples, 0.57%)</title><rect x="982.0" y="675.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (3 samples, 0.24%)</title><rect x="982.0" y="659.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.isHeldExclusively (4 samples, 0.32%)</title><rect x="984.9" y="659.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.9" y="670.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao$State.isFlushing (1 samples, 0.08%)</title><rect x="988.7" y="707.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.7" y="718.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/dao/MemorySegmentDao.accessState (13 samples, 1.05%)</title><rect x="989.7" y="707.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.7" y="718.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="1001.1" y="691.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1004.1" y="702.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="1001.1" y="675.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.1" y="686.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="1001.1" y="659.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1004.1" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="1001.1" y="643.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1004.1" y="654.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.08%)</title><rect x="1001.1" y="627.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.1" y="638.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.08%)</title><rect x="1001.1" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.1" y="622.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.08%)</title><rect x="1001.1" y="595.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1004.1" y="606.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.08%)</title><rect x="1001.1" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.1" y="590.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="1001.1" y="563.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.1" y="574.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.08%)</title><rect x="1001.1" y="547.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1004.1" y="558.0"></text>
</g>
<g>
<title>ok/dht/test/kazakov/service/DaoService.toMemorySegment (1 samples, 0.08%)</title><rect x="1002.1" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (1 samples, 0.08%)</title><rect x="1002.1" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.08%)</title><rect x="1002.1" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="1002.1" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.08%)</title><rect x="1003.0" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.0" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.08%)</title><rect x="1003.0" y="739.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1006.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.08%)</title><rect x="1003.0" y="723.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="1003.0" y="707.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1006.0" y="718.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWordImpl**) const (1 samples, 0.08%)</title><rect x="1003.0" y="691.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 3.15%)</title><rect x="1004.0" y="771.0" width="37.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.0" y="782.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 3.07%)</title><rect x="1004.0" y="755.0" width="36.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.0" y="766.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="1004.0" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 2.99%)</title><rect x="1004.9" y="739.0" width="35.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.9" y="750.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.08%)</title><rect x="1004.9" y="723.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1007.9" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(JavaThread*) (1 samples, 0.08%)</title><rect x="1004.9" y="707.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1007.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="1004.9" y="691.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1007.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="1004.9" y="675.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.9" y="686.0"></text>
</g>
<g>
<title>G1NUMA::index_of_current_thread() const (1 samples, 0.08%)</title><rect x="1004.9" y="659.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 2.91%)</title><rect x="1005.9" y="723.0" width="34.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.9" y="734.0">on..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="1005.9" y="707.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1008.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (35 samples, 2.83%)</title><rect x="1006.8" y="707.0" width="33.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.8" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (35 samples, 2.83%)</title><rect x="1006.8" y="691.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.8" y="702.0">on..</text>
</g>
<g>
<title>__send (34 samples, 2.75%)</title><rect x="1007.8" y="675.0" width="32.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1010.8" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 2.75%)</title><rect x="1007.8" y="659.0" width="32.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.8" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (34 samples, 2.75%)</title><rect x="1007.8" y="643.0" width="32.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.8" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (34 samples, 2.75%)</title><rect x="1007.8" y="627.0" width="32.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.8" y="638.0">__..</text>
</g>
<g>
<title>__sys_sendto (34 samples, 2.75%)</title><rect x="1007.8" y="611.0" width="32.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.8" y="622.0">__..</text>
</g>
<g>
<title>sock_sendmsg (33 samples, 2.67%)</title><rect x="1007.8" y="595.0" width="31.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1010.8" y="606.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (33 samples, 2.67%)</title><rect x="1007.8" y="579.0" width="31.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.8" y="590.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (33 samples, 2.67%)</title><rect x="1007.8" y="563.0" width="31.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1010.8" y="574.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (33 samples, 2.67%)</title><rect x="1007.8" y="547.0" width="31.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1010.8" y="558.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="1007.8" y="531.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1010.8" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter (1 samples, 0.08%)</title><rect x="1008.8" y="531.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.8" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="1009.7" y="531.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.7" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.16%)</title><rect x="1009.7" y="515.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.7" y="526.0"></text>
</g>
<g>
<title>__cond_resched (1 samples, 0.08%)</title><rect x="1009.7" y="499.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.7" y="510.0"></text>
</g>
<g>
<title>kmalloc_reserve (1 samples, 0.08%)</title><rect x="1010.7" y="499.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1013.7" y="510.0"></text>
</g>
<g>
<title>memset (1 samples, 0.08%)</title><rect x="1010.7" y="483.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.7" y="494.0"></text>
</g>
<g>
<title>tcp_push (29 samples, 2.34%)</title><rect x="1011.6" y="531.0" width="27.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.6" y="542.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (29 samples, 2.34%)</title><rect x="1011.6" y="515.0" width="27.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1014.6" y="526.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (29 samples, 2.34%)</title><rect x="1011.6" y="499.0" width="27.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.6" y="510.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (24 samples, 1.94%)</title><rect x="1011.6" y="483.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.6" y="494.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 1.94%)</title><rect x="1011.6" y="467.0" width="22.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.6" y="478.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (24 samples, 1.94%)</title><rect x="1011.6" y="451.0" width="22.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.6" y="462.0">_..</text>
</g>
<g>
<title>ip_local_out (24 samples, 1.94%)</title><rect x="1011.6" y="435.0" width="22.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1014.6" y="446.0">i..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.32%)</title><rect x="1011.6" y="419.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.6" y="430.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.08%)</title><rect x="1011.6" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.6" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.24%)</title><rect x="1012.6" y="403.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.6" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.16%)</title><rect x="1012.6" y="387.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1015.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.16%)</title><rect x="1012.6" y="371.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1015.6" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.08%)</title><rect x="1012.6" y="355.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.6" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.08%)</title><rect x="1012.6" y="339.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1015.6" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.08%)</title><rect x="1012.6" y="323.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.6" y="334.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.08%)</title><rect x="1013.5" y="355.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.5" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.08%)</title><rect x="1014.5" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.5" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.08%)</title><rect x="1014.5" y="371.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.5" y="382.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.08%)</title><rect x="1014.5" y="355.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1017.5" y="366.0"></text>
</g>
<g>
<title>ip_output (20 samples, 1.62%)</title><rect x="1015.4" y="419.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (20 samples, 1.62%)</title><rect x="1015.4" y="403.0" width="19.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.4" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (20 samples, 1.62%)</title><rect x="1015.4" y="387.0" width="19.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.4" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (20 samples, 1.62%)</title><rect x="1015.4" y="371.0" width="19.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.4" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 1.46%)</title><rect x="1015.4" y="355.0" width="17.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.4" y="366.0"></text>
</g>
<g>
<title>do_softirq (18 samples, 1.46%)</title><rect x="1015.4" y="339.0" width="17.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.4" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 1.46%)</title><rect x="1015.4" y="323.0" width="17.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 1.46%)</title><rect x="1015.4" y="307.0" width="17.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.4" y="318.0"></text>
</g>
<g>
<title>__napi_poll (17 samples, 1.37%)</title><rect x="1016.4" y="291.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.4" y="302.0"></text>
</g>
<g>
<title>process_backlog (17 samples, 1.37%)</title><rect x="1016.4" y="275.0" width="16.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 1.37%)</title><rect x="1016.4" y="259.0" width="16.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.4" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 1.37%)</title><rect x="1016.4" y="243.0" width="16.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1019.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 1.37%)</title><rect x="1016.4" y="227.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1019.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (15 samples, 1.21%)</title><rect x="1016.4" y="211.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1019.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 1.21%)</title><rect x="1016.4" y="195.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 1.21%)</title><rect x="1016.4" y="179.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 1.21%)</title><rect x="1016.4" y="163.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1019.4" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.08%)</title><rect x="1016.4" y="147.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (14 samples, 1.13%)</title><rect x="1017.3" y="147.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 1.05%)</title><rect x="1017.3" y="131.0" width="12.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 1.05%)</title><rect x="1017.3" y="115.0" width="12.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.3" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.08%)</title><rect x="1017.3" y="99.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.3" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.08%)</title><rect x="1017.3" y="83.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1020.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.08%)</title><rect x="1017.3" y="67.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1020.3" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.08%)</title><rect x="1017.3" y="51.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.08%)</title><rect x="1017.3" y="35.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1020.3" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 0.49%)</title><rect x="1018.3" y="99.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1021.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.49%)</title><rect x="1018.3" y="83.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1021.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.49%)</title><rect x="1018.3" y="67.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1021.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.49%)</title><rect x="1018.3" y="51.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1021.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.49%)</title><rect x="1018.3" y="35.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1021.3" y="46.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.49%)</title><rect x="1024.0" y="99.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1027.0" y="110.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.49%)</title><rect x="1024.0" y="83.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.0" y="94.0"></text>
</g>
<g>
<title>read_hpet (6 samples, 0.49%)</title><rect x="1024.0" y="67.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.0" y="78.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.08%)</title><rect x="1029.7" y="131.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1032.7" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.16%)</title><rect x="1030.7" y="211.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.7" y="222.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.08%)</title><rect x="1030.7" y="195.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.7" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_pre_routing?[nf_nat] (1 samples, 0.08%)</title><rect x="1031.6" y="195.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1034.6" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.16%)</title><rect x="1032.6" y="355.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1035.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.16%)</title><rect x="1032.6" y="339.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="1032.6" y="323.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.6" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.08%)</title><rect x="1032.6" y="307.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.6" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.08%)</title><rect x="1033.6" y="307.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1036.6" y="318.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.32%)</title><rect x="1034.5" y="483.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.5" y="494.0"></text>
</g>
<g>
<title>read_hpet (4 samples, 0.32%)</title><rect x="1034.5" y="467.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.5" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.08%)</title><rect x="1038.3" y="483.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.3" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="1039.3" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1042.3" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.08%)</title><rect x="1039.3" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="1039.3" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1042.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="1040.2" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="1040.2" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="1040.2" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.08%)</title><rect x="1041.2" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="1041.2" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.57%)</title><rect x="1042.1" y="835.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.16%)</title><rect x="1042.1" y="819.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.32%)</title><rect x="1044.1" y="819.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.32%)</title><rect x="1044.1" y="803.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.1" y="814.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.08%)</title><rect x="1045.0" y="787.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1048.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.isAsciiString (2 samples, 0.16%)</title><rect x="1046.0" y="787.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.0" y="798.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.16%)</title><rect x="1046.0" y="771.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.08%)</title><rect x="1047.9" y="819.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.08%)</title><rect x="1048.8" y="835.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="1048.8" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="1048.8" y="803.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.08%)</title><rect x="1049.8" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="1050.7" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 1.78%)</title><rect x="1051.7" y="851.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 1.78%)</title><rect x="1051.7" y="835.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.7" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.16%)</title><rect x="1052.6" y="819.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1055.6" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="1052.6" y="803.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.6" y="814.0"></text>
</g>
<g>
<title>recv (19 samples, 1.54%)</title><rect x="1054.5" y="819.0" width="18.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1057.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 1.21%)</title><rect x="1058.4" y="803.0" width="14.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.21%)</title><rect x="1058.4" y="787.0" width="14.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 1.21%)</title><rect x="1058.4" y="771.0" width="14.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 1.13%)</title><rect x="1058.4" y="755.0" width="13.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1061.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 1.05%)</title><rect x="1058.4" y="739.0" width="12.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.4" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.97%)</title><rect x="1059.3" y="723.0" width="11.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.3" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.89%)</title><rect x="1060.3" y="707.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.3" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg_locked (11 samples, 0.89%)</title><rect x="1060.3" y="691.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.3" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.57%)</title><rect x="1061.2" y="675.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1064.2" y="686.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.57%)</title><rect x="1061.2" y="659.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.2" y="670.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (7 samples, 0.57%)</title><rect x="1061.2" y="643.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.2" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.08%)</title><rect x="1061.2" y="627.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.2" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.08%)</title><rect x="1061.2" y="611.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.2" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.49%)</title><rect x="1062.2" y="627.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.40%)</title><rect x="1063.1" y="611.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.1" y="622.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.40%)</title><rect x="1063.1" y="595.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.1" y="606.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.32%)</title><rect x="1064.1" y="579.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1067.1" y="590.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.08%)</title><rect x="1064.1" y="563.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.1" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.08%)</title><rect x="1064.1" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.1" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.08%)</title><rect x="1064.1" y="531.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1067.1" y="542.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.24%)</title><rect x="1065.0" y="563.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.0" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.24%)</title><rect x="1065.0" y="547.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.0" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.24%)</title><rect x="1065.0" y="531.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.0" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.24%)</title><rect x="1065.0" y="515.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.0" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.24%)</title><rect x="1065.0" y="499.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1068.0" y="510.0"></text>
</g>
<g>
<title>do_softirq (3 samples, 0.24%)</title><rect x="1065.0" y="483.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1068.0" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.24%)</title><rect x="1065.0" y="467.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.0" y="478.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.24%)</title><rect x="1065.0" y="451.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.0" y="462.0"></text>
</g>
<g>
<title>__napi_poll (3 samples, 0.24%)</title><rect x="1065.0" y="435.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.0" y="446.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.24%)</title><rect x="1065.0" y="419.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1068.0" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.24%)</title><rect x="1065.0" y="403.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1068.0" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.24%)</title><rect x="1065.0" y="387.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.0" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.08%)</title><rect x="1065.0" y="371.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.0" y="382.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.16%)</title><rect x="1066.0" y="371.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.0" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.16%)</title><rect x="1066.0" y="355.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1069.0" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.16%)</title><rect x="1066.0" y="339.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.0" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.16%)</title><rect x="1066.0" y="323.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1069.0" y="334.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.16%)</title><rect x="1066.0" y="307.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.16%)</title><rect x="1066.0" y="291.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1069.0" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.16%)</title><rect x="1066.0" y="275.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.0" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.16%)</title><rect x="1066.0" y="259.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.0" y="270.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.16%)</title><rect x="1066.0" y="243.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1069.0" y="254.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.08%)</title><rect x="1066.0" y="227.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.0" y="238.0"></text>
</g>
<g>
<title>read_hpet (1 samples, 0.08%)</title><rect x="1066.0" y="211.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1069.0" y="222.0"></text>
</g>
<g>
<title>read_hpet (1 samples, 0.08%)</title><rect x="1066.9" y="227.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.9" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.24%)</title><rect x="1067.9" y="675.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.9" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.24%)</title><rect x="1067.9" y="659.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1070.9" y="670.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.24%)</title><rect x="1067.9" y="643.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.9" y="654.0"></text>
</g>
<g>
<title>read_hpet (3 samples, 0.24%)</title><rect x="1067.9" y="627.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1070.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="1070.8" y="739.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1073.8" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.08%)</title><rect x="1071.7" y="755.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1074.7" y="766.0"></text>
</g>
<g>
<title>start_thread (123 samples, 9.94%)</title><rect x="1072.7" y="899.0" width="117.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1075.7" y="910.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (123 samples, 9.94%)</title><rect x="1072.7" y="883.0" width="117.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1075.7" y="894.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (123 samples, 9.94%)</title><rect x="1072.7" y="867.0" width="117.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1075.7" y="878.0">Thread::call_r..</text>
</g>
<g>
<title>GangWorker::run() (110 samples, 8.89%)</title><rect x="1072.7" y="851.0" width="104.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.7" y="862.0">GangWorker::..</text>
</g>
<g>
<title>GangWorker::loop() (110 samples, 8.89%)</title><rect x="1072.7" y="835.0" width="104.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.7" y="846.0">GangWorker::..</text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (40 samples, 3.23%)</title><rect x="1072.7" y="819.0" width="38.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.7" y="830.0">G1E..</text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (39 samples, 3.15%)</title><rect x="1072.7" y="803.0" width="37.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.7" y="814.0">G1E..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (39 samples, 3.15%)</title><rect x="1072.7" y="787.0" width="37.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.7" y="798.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ScannerTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*) (16 samples, 1.29%)</title><rect x="1072.7" y="771.0" width="15.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1075.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (13 samples, 1.05%)</title><rect x="1075.5" y="755.0" width="12.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1078.5" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.49%)</title><rect x="1082.2" y="739.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.2" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (23 samples, 1.86%)</title><rect x="1087.9" y="771.0" width="22.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.9" y="782.0">G..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.32%)</title><rect x="1106.1" y="755.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1109.1" y="766.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.08%)</title><rect x="1109.9" y="803.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1112.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool) (1 samples, 0.08%)</title><rect x="1109.9" y="787.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1112.9" y="798.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (1 samples, 0.08%)</title><rect x="1109.9" y="771.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1112.9" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.08%)</title><rect x="1109.9" y="755.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.9" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, narrowOop&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.08%)</title><rect x="1109.9" y="739.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1112.9" y="750.0"></text>
</g>
<g>
<title>G1FullGCAdjustTask::work(unsigned int) (11 samples, 0.89%)</title><rect x="1110.8" y="819.0" width="10.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1113.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (2 samples, 0.16%)</title><rect x="1110.8" y="803.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.8" y="814.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_code_blob(CodeBlob*) (1 samples, 0.08%)</title><rect x="1110.8" y="787.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.8" y="798.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.08%)</title><rect x="1110.8" y="771.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1113.8" y="782.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.08%)</title><rect x="1111.8" y="787.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.8" y="798.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.08%)</title><rect x="1112.7" y="803.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.7" y="814.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (8 samples, 0.65%)</title><rect x="1113.7" y="803.0" width="7.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.7" y="814.0"></text>
</g>
<g>
<title>G1AdjustRegionClosure::do_heap_region(HeapRegion*) (6 samples, 0.49%)</title><rect x="1113.7" y="787.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.7" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1AdjustClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, narrowOop&gt;(G1AdjustClosure*, oopDesc*, Klass*) (4 samples, 0.32%)</title><rect x="1115.6" y="771.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1118.6" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1AdjustClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, narrowOop&gt;(G1AdjustClosure*, oopDesc*, Klass*) (2 samples, 0.16%)</title><rect x="1119.4" y="787.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.4" y="798.0"></text>
</g>
<g>
<title>G1FullGCCompactTask::work(unsigned int) (10 samples, 0.81%)</title><rect x="1121.3" y="819.0" width="9.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.3" y="830.0"></text>
</g>
<g>
<title>G1FullGCCompactTask::compact_region(HeapRegion*) (10 samples, 0.81%)</title><rect x="1121.3" y="803.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.24%)</title><rect x="1124.2" y="787.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1127.2" y="798.0"></text>
</g>
<g>
<title>G1FullGCCompactTask::G1CompactRegionClosure::apply(oopDesc*) (4 samples, 0.32%)</title><rect x="1127.0" y="787.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1130.0" y="798.0"></text>
</g>
<g>
<title>G1FullGCMarkTask::work(unsigned int) (31 samples, 2.51%)</title><rect x="1130.9" y="819.0" width="29.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.9" y="830.0">G1..</text>
</g>
<g>
<title>G1FullGCMarker::complete_marking(GenericTaskQueueSet&lt;OverflowTaskQueue&lt;oopDesc*, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*, GenericTaskQueueSet&lt;OverflowTaskQueue&lt;ObjArrayTask, (MEMFLAGS)5, 131072u&gt;, (MEMFLAGS)5&gt;*, TaskTerminator*) (28 samples, 2.26%)</title><rect x="1130.9" y="803.0" width="26.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.9" y="814.0">G..</text>
</g>
<g>
<title>SpinPause (2 samples, 0.16%)</title><rect x="1132.8" y="787.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1135.8" y="798.0"></text>
</g>
<g>
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.08%)</title><rect x="1134.7" y="787.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1137.7" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, narrowOop&gt;(G1MarkAndPushClosure*, oopDesc*, Klass*) (15 samples, 1.21%)</title><rect x="1135.6" y="787.0" width="14.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.6" y="798.0"></text>
</g>
<g>
<title>G1RegionMarkStatsCache::add_live_words(oopDesc*) (2 samples, 0.16%)</title><rect x="1148.0" y="771.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.0" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, narrowOop&gt;(G1MarkAndPushClosure*, oopDesc*, Klass*) (2 samples, 0.16%)</title><rect x="1149.9" y="787.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.9" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, narrowOop&gt;(G1MarkAndPushClosure*, oopDesc*, Klass*) (2 samples, 0.16%)</title><rect x="1151.8" y="787.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.8" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.08%)</title><rect x="1152.8" y="771.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.8" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;397414ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 397414ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.08%)</title><rect x="1152.8" y="755.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long, oopDesc*, long) (1 samples, 0.08%)</title><rect x="1152.8" y="739.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>void objArrayOopDesc::oop_iterate_range&lt;G1MarkAndPushClosure&gt;(G1MarkAndPushClosure*, int, int) (4 samples, 0.32%)</title><rect x="1153.8" y="787.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.8" y="798.0"></text>
</g>
<g>
<title>G1RegionMarkStatsCache::add_live_words(oopDesc*) (1 samples, 0.08%)</title><rect x="1156.6" y="771.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.6" y="782.0"></text>
</g>
<g>
<title>G1RootProcessor::process_strong_roots(OopClosure*, CLDClosure*, CodeBlobClosure*) (2 samples, 0.16%)</title><rect x="1157.6" y="803.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.6" y="814.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.08%)</title><rect x="1157.6" y="787.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.6" y="798.0"></text>
</g>
<g>
<title>ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*) (1 samples, 0.08%)</title><rect x="1157.6" y="771.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.6" y="782.0"></text>
</g>
<g>
<title>G1MarkAndPushClosure::do_oop(oopDesc**) (1 samples, 0.08%)</title><rect x="1157.6" y="755.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.6" y="766.0"></text>
</g>
<g>
<title>G1RegionMarkStatsCache::add_live_words(oopDesc*) (1 samples, 0.08%)</title><rect x="1157.6" y="739.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.6" y="750.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.08%)</title><rect x="1158.5" y="787.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.5" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do_no_frames(OopClosure*, CodeBlobClosure*) (1 samples, 0.08%)</title><rect x="1158.5" y="771.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.5" y="782.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.08%)</title><rect x="1158.5" y="755.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.5" y="766.0"></text>
</g>
<g>
<title>G1MarkAndPushClosure::do_oop(oopDesc**) (1 samples, 0.08%)</title><rect x="1158.5" y="739.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.5" y="750.0"></text>
</g>
<g>
<title>G1RegionMarkStatsCache::add_live_words(oopDesc*) (1 samples, 0.08%)</title><rect x="1158.5" y="723.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.5" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, narrowOop&gt;(G1MarkAndPushClosure*, oopDesc*, Klass*) (1 samples, 0.08%)</title><rect x="1159.5" y="803.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.5" y="814.0"></text>
</g>
<g>
<title>G1FullGCPrepareTask::work(unsigned int) (9 samples, 0.73%)</title><rect x="1160.4" y="819.0" width="8.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.4" y="830.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (9 samples, 0.73%)</title><rect x="1160.4" y="803.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.4" y="814.0"></text>
</g>
<g>
<title>G1FullGCPrepareTask::G1CalculatePointersClosure::do_heap_region(HeapRegion*) (9 samples, 0.73%)</title><rect x="1160.4" y="787.0" width="8.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.4" y="798.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::update() (1 samples, 0.08%)</title><rect x="1160.4" y="771.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.4" y="782.0"></text>
</g>
<g>
<title>G1FullGCPrepareTask::G1CalculatePointersClosure::prepare_for_compaction(HeapRegion*) (8 samples, 0.65%)</title><rect x="1161.4" y="771.0" width="7.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.4" y="782.0"></text>
</g>
<g>
<title>G1FullGCCompactionPoint::forward(oopDesc*, unsigned long) (4 samples, 0.32%)</title><rect x="1164.2" y="755.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.2" y="766.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWordImpl***, unsigned long*, HeapWordImpl**, HeapWordImpl**) (1 samples, 0.08%)</title><rect x="1165.2" y="739.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.2" y="750.0"></text>
</g>
<g>
<title>HeapRegion::cross_threshold(HeapWordImpl**, HeapWordImpl**) (2 samples, 0.16%)</title><rect x="1166.2" y="739.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWordImpl***, unsigned long*, HeapWordImpl**, HeapWordImpl**) (2 samples, 0.16%)</title><rect x="1166.2" y="723.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>HeapRegion::cross_threshold(HeapWordImpl**, HeapWordImpl**) (1 samples, 0.08%)</title><rect x="1168.1" y="755.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="766.0"></text>
</g>
<g>
<title>G1MergeHeapRootsTask::work(unsigned int) (1 samples, 0.08%)</title><rect x="1169.0" y="819.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.0" y="830.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(G1CardTableEntryClosure*, unsigned int) (1 samples, 0.08%)</title><rect x="1169.0" y="803.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.0" y="814.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (6 samples, 0.49%)</title><rect x="1170.0" y="819.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.0" y="830.0"></text>
</g>
<g>
<title>CodeCacheUnloadingTask::work(unsigned int) (6 samples, 0.49%)</title><rect x="1170.0" y="803.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.0" y="814.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.08%)</title><rect x="1170.0" y="787.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.0" y="798.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (5 samples, 0.40%)</title><rect x="1170.9" y="787.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.9" y="798.0"></text>
</g>
<g>
<title>ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const (2 samples, 0.16%)</title><rect x="1170.9" y="771.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.9" y="782.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.16%)</title><rect x="1170.9" y="755.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.9" y="766.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.08%)</title><rect x="1171.9" y="739.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (3 samples, 0.24%)</title><rect x="1172.8" y="771.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.8" y="782.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (3 samples, 0.24%)</title><rect x="1172.8" y="755.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.08%)</title><rect x="1173.8" y="739.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.8" y="750.0"></text>
</g>
<g>
<title>DirectNativeCallWrapper::instruction_address() const (1 samples, 0.08%)</title><rect x="1174.7" y="739.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.7" y="750.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.08%)</title><rect x="1175.7" y="819.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1178.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="1175.7" y="803.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1178.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="1175.7" y="787.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="1175.7" y="771.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.08%)</title><rect x="1175.7" y="755.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.7" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.08%)</title><rect x="1175.7" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1178.7" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.08%)</title><rect x="1175.7" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1178.7" y="734.0"></text>
</g>
<g>
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (1 samples, 0.08%)</title><rect x="1176.6" y="819.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.89%)</title><rect x="1177.6" y="851.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.6" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.89%)</title><rect x="1177.6" y="835.0" width="10.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.6" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.89%)</title><rect x="1177.6" y="819.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.6" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (9 samples, 0.73%)</title><rect x="1177.6" y="803.0" width="8.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.6" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, bool, bool, DirectiveSet*) (9 samples, 0.73%)</title><rect x="1177.6" y="787.0" width="8.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.6" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.40%)</title><rect x="1177.6" y="771.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.6" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.08%)</title><rect x="1177.6" y="755.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.6" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.08%)</title><rect x="1177.6" y="739.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.6" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.08%)</title><rect x="1177.6" y="723.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.6" y="734.0"></text>
</g>
<g>
<title>Node::is_block_proj() const (1 samples, 0.08%)</title><rect x="1177.6" y="707.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.6" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.24%)</title><rect x="1178.6" y="755.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.16%)</title><rect x="1178.6" y="739.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.6" y="750.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.08%)</title><rect x="1179.5" y="723.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.08%)</title><rect x="1180.5" y="739.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.08%)</title><rect x="1180.5" y="723.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>PhaseOutput::Output() (1 samples, 0.08%)</title><rect x="1181.4" y="755.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.4" y="766.0"></text>
</g>
<g>
<title>PhaseOutput::shorten_branches(unsigned int*) (1 samples, 0.08%)</title><rect x="1181.4" y="739.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.4" y="750.0"></text>
</g>
<g>
<title>CallLeafDirectNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.08%)</title><rect x="1181.4" y="723.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.24%)</title><rect x="1182.4" y="771.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() [clone .part.0] (1 samples, 0.08%)</title><rect x="1182.4" y="755.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="766.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.08%)</title><rect x="1182.4" y="739.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.08%)</title><rect x="1183.3" y="755.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize() (1 samples, 0.08%)</title><rect x="1183.3" y="739.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.08%)</title><rect x="1183.3" y="723.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.08%)</title><rect x="1184.3" y="755.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.08%)</title><rect x="1184.3" y="739.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1184.3" y="723.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.08%)</title><rect x="1185.2" y="771.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (2 samples, 0.16%)</title><rect x="1186.2" y="803.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="814.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*) (2 samples, 0.16%)</title><rect x="1186.2" y="787.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.16%)</title><rect x="1186.2" y="771.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.16%)</title><rect x="1186.2" y="755.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="766.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (1 samples, 0.08%)</title><rect x="1186.2" y="739.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.08%)</title><rect x="1186.2" y="723.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="734.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.08%)</title><rect x="1186.2" y="707.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.08%)</title><rect x="1186.2" y="691.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1186.2" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1186.2" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1186.2" y="643.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1186.2" y="627.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1186.2" y="611.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1186.2" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1186.2" y="579.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1186.2" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1186.2" y="547.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1186.2" y="531.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1186.2" y="515.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1186.2" y="499.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1186.2" y="483.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.08%)</title><rect x="1187.1" y="739.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.08%)</title><rect x="1187.1" y="723.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (1 samples, 0.08%)</title><rect x="1187.1" y="707.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.08%)</title><rect x="1187.1" y="691.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.08%)</title><rect x="1187.1" y="675.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.08%)</title><rect x="1187.1" y="659.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.08%)</title><rect x="1187.1" y="643.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.16%)</title><rect x="1188.1" y="851.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>VMThread::inner_execute(VM_Operation*) (2 samples, 0.16%)</title><rect x="1188.1" y="835.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.16%)</title><rect x="1188.1" y="819.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.16%)</title><rect x="1188.1" y="803.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.16%)</title><rect x="1188.1" y="787.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.16%)</title><rect x="1188.1" y="771.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (2 samples, 0.16%)</title><rect x="1188.1" y="755.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (2 samples, 0.16%)</title><rect x="1188.1" y="739.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>FreeRegionList::abandon() (1 samples, 0.08%)</title><rect x="1188.1" y="723.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet*, G1RedirtyCardsQueueSet*, G1EvacuationInfo*, unsigned long const*) (1 samples, 0.08%)</title><rect x="1189.0" y="723.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.0" y="734.0"></text>
</g>
<g>
<title>G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::worker_cost() const (1 samples, 0.08%)</title><rect x="1189.0" y="707.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.0" y="718.0"></text>
</g>
</g>
</svg>
