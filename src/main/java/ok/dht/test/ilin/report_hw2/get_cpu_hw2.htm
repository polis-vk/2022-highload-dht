<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='utf-8'>
<style>
	body {margin: 0; padding: 4px 8px 24px; background-color: #ffffff; overflow-y: scroll}
    h1 {margin: 5px 0 0 0; font-size: 18px; font-weight: normal; text-align: center}
	header {margin: -24px 0 5px 0; line-height: 24px}
	button {font: 12px sans-serif; cursor: pointer}
	p {margin: 5px 0 5px 0}
	a {color: #0366d6}
	#hl {position: absolute; display: none; overflow: hidden; white-space: nowrap; pointer-events: none; background-color: #ffffe0; outline: 1px solid #ffc000; height: 15px}
	#hl span {padding: 0 3px 0 3px}
	#status {overflow: hidden; white-space: nowrap}
	#match {overflow: hidden; white-space: nowrap; display: none; float: right; text-align: right}
	#reset {cursor: pointer}
	#canvas {width: 100%; height: 300px}

    .selectionPart {position: absolute; display: none; pointer-events: none; box-sizing: border-box;}
    .sel {background-color: #dada0040}
    .act {background-color: #00da0040}
    .dif {background-color: #00dada40}
    .top {border-top: .1px solid #000}
    .left {border-left: .1px solid #000}
    .bottom {border-bottom: .1px solid #000}
    .right {border-right: .1px solid #000}

    #info-tooltip {display: none; position: absolute; top: 100px; right: 32px; width: 204px; border: 1px solid #666666; background: #ffffe0; border-radius: 8px; padding: 4px}
    #heatmap-height-line, #heatmap-info { text-decoration: #0366d6 dashed underline; cursor: pointer; font-family: monospace}
    #heatmap-info {cursor: help}
    #heatmap-info:hover + #info-tooltip {display: block}

    .colortip {width: 100px; box-sizing: border-box; padding: 4px; background: linear-gradient(var(--c1), var(--c2))}


</style>
</head>
<body style='font: 12px Verdana, sans-serif'>


<div style="display: flex">
    <div style="width: 20px; margin-right: 2px; float: left; writing-mode: vertical-rl; transform: scale(-1); text-align: center; user-select: none"><pre id="heatmap-height-line"> 1 sec : 20 ms </pre></div>

    <div id='heatmap-canvas-container' style="width: 100%; position: relative" autofocus>
        <div id='heatmap-canvas-wrapper' style='overflow: hidden; width: 100%'>
            <canvas id='heatmap-canvas' style='height: 314px'></canvas>
        </div>

        <div id='middleActive' class='selectionPart top bottom act'><span></span></div>
        <div id='leftActive' class='selectionPart top left bottom act'><span></span></div>
        <div id='rightActive' class='selectionPart top right bottom act'><span></span></div>
        <div id='leftMiddleActive' class='selectionPart right'><span></span></div>
        <div id='rightMiddleActive' class='selectionPart left'><span></span></div>

        <div id='middleSelection' class='selectionPart top bottom sel'><span></span></div>
        <div id='leftSelection' class='selectionPart top left bottom sel'><span></span></div>
        <div id='rightSelection' class='selectionPart top right bottom sel'><span></span></div>
        <div id='leftMiddleSelection' class='selectionPart right'><span></span></div>
        <div id='rightMiddleSelection' class='selectionPart left'><span></span></div>

        <div id='middleDiff' class='selectionPart top bottom dif'><span></span></div>
        <div id='leftDiff' class='selectionPart top left bottom dif'><span></span></div>
        <div id='rightDiff' class='selectionPart top right bottom dif'><span></span></div>
        <div id='leftMiddleDiff' class='selectionPart right'><span></span></div>
        <div id='rightMiddleDiff' class='selectionPart left'><span></span></div>
    </div>

    <div id="heatmap-info" style="width: 20px; margin-right: 2px; writing-mode: vertical-rl; text-align: center; user-select: none">
        <pre> Info </pre>
    </div>
    <div id="info-tooltip">
        <div style="float:left">
            <div style="padding: 4px;">Frame types:</div>
            <div class="colortip" style="--c1:#b2e1b2;--c2:#c6f5c6">Interpreted</div>
            <div class="colortip" style="--c1:#50e150;--c2:#6eff6e">JIT-Compiled</div>
            <div class="colortip" style="--c1:#50cccc;--c2:#6eeaea">Inlined</div>
            <div class="colortip" style="--c1:#e15a5a;--c2:#ff8282">Native</div>
            <div class="colortip" style="--c1:#c8c83c;--c2:#e6e646">C++</div>
            <div class="colortip" style="--c1:#e17d00;--c2:#ff9b00">Kernel</div>
            <div class="colortip" style="--c1:#cce880;--c2:#e0fc94">C1-Compiled</div>
        </div>
        <div style="float:left; margin-left: 4px">
            <div style="padding: 4px;">Special colors:</div>
            <div class="colortip" style="--c1:#ee00ee;--c2:#ee00ee">Matches regexp</div>
            <div class="colortip" style="--c1:#baa551;--c2:#baa551">New frames</div>
            <div class="colortip" style="--c1:#f0f0c0;--c2:#f0f0c0">Same frames</div>
            <div class="colortip" style="--c1:#99aaff;--c2:#99aaff">Less frames</div>
            <div class="colortip" style="--c1:#ffaa99;--c2:#ffaa99">More frames</div>
        </div>
        <div style="float:left; margin-top: 4px; width: 100%; border: 1px solid #666666; border-radius: 2px; padding: 2px; box-sizing: border-box;">
            Shift + Click - Select range<br>
            Ctrl + Click - Compare<br>
            Ctrl + F - Search<br>
        </div>
    </div>
</div>
<div id="executionsHeatmap" style="display:none">BNl]AW]sApE_GnGlHkK`NiSvSaVd]xeQG??????????????????@??????????????????????????????????????@?????AP`aAG[J`[GHRDG`ULKG`DLKKMNOq`@pDO]UG[KUJpUMIB`DLQ`CKHxDKHhhTMLH`pFKHh``qx\KLUSMJKLTQPKJ`CNOEKR]LLG[MH@`DIO?\JWQEG?hGBQh?G`OCG`A`^Ghq`SJqxYpx``ELKGUULHpiFNK[KLI`ULMLIQ[R[OpZ^G@W\NKMLGVLSKTGh\KUNNRhSKULGWFSMTLMGhh`[LKSIh?`CIA`DKMKLPpqp```DO^IW`p`i]SLG`Rpaa?ihiKNVQpDKVKKJ[WBpTKH?CMIhhh]KHh`i[SNHhpGxiLUJ?aAAppZ?FGEJpxp`hph`yp`]KUGxpFLJDI`DHOhh?@MMJG?GBDKJQiFGh`G?FLQ`phLKUMMJxTNNSKMSLTJhypDUGhiCKVG``hCMKMKJAaDTPaaDQCNNLKJ\KSJA`hhhSUTKMJ`iEMKSGq`[VKLLNMKJyDGhCIhiqFOyhpDTMHi`a?xh\O`[Gax`aaq[TNIiiaO`DLTLMMI`hq]MKIDTMLMMSTKMKGFQppTLOLIpZ`h\O]KWVH``DSGpDTGpxCR`phphp``ipWh`USUGpipERKKSKKNO`p]GyqDLQDJ`hyaBpUKMOYhiahhLG\ICLGxih``pESMLVI`qFRpEUMSGZh[MUOCSLLIhVLGx`h`q```hh`EKLLTJ]MTULQpTLOa`?hDGxxhphOFGI`xhUR`pp^O[[KTLG`CMJCVRSRhhY?p``ZpqDJKKVKMJ`^LGR]LMMLJTKSG``pBCG?JOJ]G```ah?Q?MH\IhOapCPTMTLMULMLKOWqyp^GppP`aLKKUGapi`CGqhpDIhi?pQ`CLR```hpq`BKGLMOhZEMMMJa``hhphDJSLKLI`hCJLGENUKLJ]NGx`hpaZaEVLMR`iDSMLTKNKHx`x``LVLI^GiBDSLLSNGxqh]Gip`[LLKRR`y`LIa\TKLSUOYpApEJpTTJEGSTLKJppxpODMG`p@xhxqpRP`phBxEGhGhQpap`ip`a`hJ`W`MHLMMOphO\MMGx`WxULKMLKI]KMGhp]R[LGaR`qEULKKNLPaxp`hyC[LI\LSGDQ`A[JYOhWpq`TUJFG`pA`ah?i`aq@xyFLMKOqWaGBTKJpqDQxp[]GDLKMJBqDO]NTRxip`WhapO`ihaxNJahhp`hphq`ph`y``h[SIBpEO`[SG\SMGSJp``iphiDJOpyEKSSI``h`ii`ixahTKQaahpxA`ahDLMMHhaAO`EMUMMG`pCNICLOFMG`hB`KKG``aS[VGhOaBCKNP[Ihypp`hZ\OFMMKJ?h`xEKNLMQAi`pqYCKGpDGh^KI?p`AhCSIpFVKO`i@VSGWY`KLMMNGaa`ppDIppxi`pqhap]MO]ODMLOMG`qp^VSGhqR^LKMMSLSOpEGxihqhDQ`SMKJiCG`CSKGhhhhip`iBJipaOEGppELUGaCMP^LJqpFUNLLRhihKLKGBpap^R[LKI`EMLVLOppp`phia`qLKGiSVGxy```phhx[ITSQyqCMKJpCJbah`aBhxp``xp`xZ`hyVHDKMGp`h`?`h^HFK[KLGqOpph`hpWW\KKOq`UKSKKG`haCJp\MHhp`SG`]UKMIaiVGpEKP``AahQppEUGhW`hDOaG[MMOxphhpaRpWa`[JxhxpFLUJCKLKO`?hTLIAyxa[GSO^VOBCJxPp[OC\NMG``xh[TLNSGi`WKVMLLUMQ]QBpSKKMMLLGx?`DGqhhhpp`BW`DJ\GhWY?DLJ`apDJNJSMJ\LMNLLMUG^TGBhhh`ETLMLKTGWiB[INSPFLTNTOqB`hSKLKTGhpR[SUNLJpSQxZAip\H`x\KMKUIFPJhaCJ`UMKUMLQ]KRhpppxLJ@iOphphCLLJEKJhahiiCNOix[MLTQqap`BqBihxhaxhphyi``h\LTLUKUSH`ah^G`?xCTOVG\JVKLLGqy]KTLKMMKKLLMIWpx?pZxp?ihIqFLSNLLLTMJ``ihap`hhh``TKPYqEHZxhB\KMJ`\KUHa`hh`Qhxhxix^RKRDSRhHFJ\Ph?hi@a\KUJp`xhh`XBhKLLJa`RpaCMTMKGFHPxDIBVO^TMTSWPOWBG`?aTMPB``qhq`ip``h`[GEGpERBhxII?`GZFMLLG`OSKI`a[R`phIOp`pyhqLJAiq`DMLKRh`h`XiTIKKJYpah`AOCR\GCTKGW`QOBEKMQ```EGTTGOHaG?JaX?LLNGiZR\NUKKLKIi`x\GxpyTKJp]H`TLTO[KUQOypEGhp`VMKLIxI[I]UKIpWZBDHaDG`hxDKIEKTKKSGxO[LSMUMKWNKKKMJZihxpBhhVGphDRENMGaULKMGxyENGhhQp`pp`DHiYp\NTKSKKPhBDMGa`SMKIhJhhpa?]LKGW`?ETLKLR`xhh\LLKNSJhi?`hiEKGOpphCK^I^NLKGYDLNMLMO[ICNMRha``yCLGyZTNGZhDSKJa[MLG`i@\SGpixhpEH`i`CNKLLLGiyWUI?hCG]KJh`FRhhhppqq[KKIxDSGESLLKI[KTJa`px`x`hSMO\Qh``hhphip`DUMG`y`BpERKTKLKTMMLMMKIqMKMLLKTLKUJ`hUSGapLKOWbiaFVMGaahKLMJhipULKHA?h`ah`ahiphbESMGpiTG?^Gh``SRaixhaa[LGpiERhh\NSKVJxhKVIi]MLOhKGMIh`ia`ZxRpGp`EJ`yhbh`iDJ`hR``iEKJ``CLMJSKLH\Gb`ULLMKQLQ]OZ?qhTKKLUG``Bip`qXZ`ppx`CIW[UGi\I`ZbiFMLTMGh@hahCKNJ\KNGapppCUMOaCLPqZCTUJh\LTR`?`[Gix`a]KTMSG`a`EVKLLG`A\JihCTMJhip[VKJp`hqhSKKLNJEKNMNTLMJ`ESMKODKKTSMLKLSLJp`a]GqGhihhW`FGhhh```BxFRZ`aOpB``xUNMIip\G`CSROqFNMLNG`FLLJaNMRahaph?`hy?yiDGp\KLP`hq`p`EHRWxYOaJ`SRDJZXBMOWh`?CJ`?h`?\G``PPDKSGEKIPWRB[OY``GIO?SGTHJFOGDGWWhy`hpOhA``SLKJXCGxBSRhhWxZp?`h``ahEKJ?pGhCKMLLOY`hiCSPZFNIDKKSVOp`ZqhO`i`phSSLMMMMKNVKIp`p`iDLVLMKLKKMO``xh`hLMGYGGaG`bhQUJWCWDGOO`Ry?HUNH@?@PxY]GDGXTHB`\JTKGhx@J?SQDTLGW`pR@EUHXG@KLPMGWYGBpA`A?H`?A```KLGGp`EGKGxWhKI`OO`ARqaDLGqA[JhhppCKUIp[J``?`?G`@`TKLG`OQ@]IICLJDKKLR`AAGhTIWppiGxpFH?`h[KJGYGxFKR`i]KOq\Ra`haxaCNG`BhhihphqCLMGpphqEIi`B``pq`yp`pqpiqYhDLMMKKKGh[HSRx`pXhCKJY?pI`hpEKSGiDSRaYOaWpa?aWCTKGxyELJCQ]NMGpUODLMGxZa]Ii`p[JiTLVKNMKLLIp]Ip``hEGhhq\KNHyq`\SGx?iG`axSMRqEMLJCKP\MSKMLGa]TGppBQx]MJ`FKLLJSLRMI?qCNKTKLKKIEMJp`q@paiBpia``ahxh]I`p`xiCLUGFMGpa`GhahSSMSGhahp\KJa`[OFSOxipDVTKNMO``\KULNKGq`qCMMLKMMIpphhpBO\SRhppDGiER\SLTJxCLLKULQGY?h[NG`a`hhO`SJiW`p@CIh?hqqaEHahAO``]UPqx`aSKLGii`@FHAO`hIhOCIah@hpFLLQxVKGpahDKG@YO`EJCKKMIXyh`Opip``[TGhG``iCI?KUKKZCOVKMIhyR?DLSMKLRELUG``ZOCGTGWqppGhFLKGA`i`h?`aG`GMGX`ABGB?[OxaDKG]KI`h`DHUVVGCTGX??@paCGTMLO\KJPEOWh\Gp[KJ?O@`HBEGB\OpAZ??G??Gp`?pAhR?``]Hh`OQIBppx\KMG?CKLIXG?p`i`pNNLLG`pi?`aOiGiiO`OO`ihhpx[IMQiq`AaFGipq`pCUKNKKMJhCJahhh^KO?ERLSRxUMKTGaphh?phphha`Ba`]GKKHSLSGh`aiB?DSKNGQ`CKKKLO]KGCUG]G@IpDGPXiBx?FKNHaAZqpapqBh^LGJi?SJphDNKJBSJW??R`pDKJSHBWA@B\KNGR`MG@i??`G`Bpxih\MIYhpSOh`@hFSOhFLSG??ESMMLJYAJOB[LHCILO[GSQSMG?hiKKLMGhp`hEGCJTKJ[LHTLOp?IxZxWxOH@Y`DIhDUK[Ipqh[SMLGxqh``\KTOihxLLTKMLMJhDGSHiJ``Wah`hhya`appqW`aUUO`p`VLRyq@YYyxFKGpihCUGDMLMI[Pah`iZ`@SKTLIxx[LR`xpSNSLIxqLSJURDJaWh]RybCLLKJ]H`aDKRh`\SLGiXh`Oh`hpX`qp]LJi``hKJ\IiFPYpy`paihDGXB@`xhpSMRbbEMQyyihKQhiBhhh`hxENI`[HipKMIx]KMI`h`A`p`EGqqhiHh]J?VLGhhhpp`aCUOxxxZhhi?`q\QqDOxAaOWWp]SQ`i?yEJph\KMJOhG]MKG[Rx`WUO?`y\KLLNKKUJDHSGppiCVKGOyCLMTMGph`CUUGaa`TI`Bx`VKGDSKLMJxipqEUKMO``Bph`ZDSKMJpx?pxWi`h`bTUJA`ZQWCOBGpBEGxELGApah`yA`UKKG?hW@`G?@p?`EI?TMTJCMJ\G]MTGSOyh`pxpBxp`]JUOMLNOxp`h`\NR`xhELSLTG`pRyDKLR\GpSLSMLIqaCI`\I`hX`SLMG`pDI`hpUMKI`hWEMKJEMKO[KHqpqCOKW[TUGbFJhpCJh]GCHqip]KKNKZFLKMKNIhiJpELIphh]ULVLQpTKKMTKIa`qRFIELIhGO`p?BqTOhDKRp`p\IOhxax`xy`qpDGp[MMHa\JERpii`y`EODODSTLMUGh`iihhhh\Q?h[LTMOpqaG``hhSR`ix`phCMObB`EKJETO[TKJA\KKNPaFLMLLNTISSGZDMSULVMRai`xq`AHCGGph?B?FJSHVRhipC[GWhAABEIW`OW`X@]GO`?ASMKIpp?APhYhiWpOOa`hX`?Ja`ESGJUKMO\OW`p`?y`EKG`pCMKJ]LOx?TSKGi[MUJhDJph]LRxAahpayI``x[NLUMLUKLOxphqBp`pW?`xhCG`\LGhpADGp?FMGhhhpZA\I`apaBhxDKTIqKKGGah`Rhhqq`hhqCNSIxahb`DNJ\J@xENSKNLMLLLNSLSTJDO]Qpxh\TOhqi]NHKTMOpahhqh]SSKKO`pa[Jh`ppJ`paWhyxDTKSHaKMGiUMO`hMKNIVMRCKKJai`A`h`xCMLKMUSJCTJ`RSI?`h\LLKMKLKJa``hAaahCOBipxx`ppxxh^VLLMINMLTMKVR`pyp]MKR?``COph`yp\LLQhZq\KJ`WhWhTKGpx`AI``CSOhDQh??ADTLKLGNJ[Hh@BhWAi``aO?CJhhMH`bGRB^GG`O?CVGq`xh``hBIhhJh?`QAO`@TJDGx@paSKMSUOi?[G?FHx?hCJp`aq`GpH@GAapMJhVJYpaPO`YphRhZpCJpDLH`p??DIppYpxhOI`pAh[GBxap`hCIaphG[LLUKVOhp`h``i?[IpqpDPOhhph]KWyh[JDSKLGiWhhp`]JiDOpha`LSMNNKNKIaAiVGCSLJqDUQpSLG@`pYOhDTLMJpCTJbp?qapUKJ`SQaqEMMJppEG`yhUNRp`hYhh`piiUMOTJTMKLMLMOhCMKSKIDG`qaaDG`TGhhpEUSKNNLMI[SKOaq[MKSKSI]G\O[O`xSJ?h\R`a[MSLMMMLUUULLGxh`yahEMKLKKLRiYq\UGYyDH?p\KGZa```iQ`ha?iZ``qEGpp\KLNRy?p`hpp`CJpO]LLGpKKKG`x`h`PASMQ[SQDLOhq`\LKQpKKKH`B@ZpSKKMOqphDTOhTJSNIhihp]LNGipP`aADKKLNMJQxhhpOTNLNVIiZpULMLKQEGphhpDMKNG`GahahRa?yTNKJaELJ`h^TKGxDSTIELJ`WaCTQhDOp`SHbW`aDLG`piyQ`EHa```YpiEJSHQiOpiRi`]JaUJDGTHaaYixhxhh`q`hh`ZZ`VOEG?xx`]GpCUNI]MRhpq`qaWqhUKGhDOxWibW?]MKKUQhqELSLKTKLKKLJhhiUIRqMIppDHpi[MKMSOxYESTLNIxapa`ppp`h\MKGaKLULOa`\TG]KKKLKLMMGp`DKUNTOBpO]LMJ\TMSRxi`pZDKLGipahhhbDUIh`aqESTHq\MKKMNUI`B`hKSG`p`QipVLH]Ghppqhah`abh`DSOpqSIaEKUUKUGAUOa?ppCLKTSG`B[ZaX`h?hh`VGaih`q`\Jhq?iqiDLO`\Gqh\TOyCTLGDLMJWqRaCJhOqhBCH``ypqaLUO^MICMOiiahyq[UMKLVUKGFJCNKGhih``aTMR`KUObhYhCIEIaCQhp?iLLOpqy`pCJhxh^OphbKSR`x`Rpaphphh]Ja`x[J`@[NGhpxCJhq`hpRCTLGTKOWpUGhpipEKKJ`bihDGZh``Zqa`[OphEIRpK]MLH?h`OxYB]MLGx\OiEMOxppCKKLLKI`phCZh]SH`p`DHOiDKTKGyOhFTGx`hphWph`iDJ`phEKKKHDGxDLMSIhyhSOC[GaypDTLKKULLJqhiZNQBWhDJQAhaahihJENJahWxa`[TJipyqhy`qahbaph``?Hp``VLJxTLKKKGapApahhMUJDNOaEJ@hOSMO\Qp`h\GhEO\LMMNKLLLPWGhiipEMGhp^NMLLLH`hqhhZxhFLRhhp`LGaiyUKSJOhipxBpKLJ]TMNLGp`hhCSKGhBJLGZhCI[NKRxEI`iqaRa?hFGQpiIKJ^KKLKJZhpp`ppDOTRyy`[UKGiRq`Ayy``apxhhDKLKUHiphaFLKGTR`hyZaEHapTPaa`FKMQ`\QZp`EGphiDICKSG`KKMKKKGx`H\KOCLVLIpiqpDLI[VISKGphqCLOhCKMGDUMVOh`Axp`qx`CMKJ``iDO`h`KGh\JKG`?hhhFMLKQh\VIhhiZ`BDGh`COA`B`aLKMKMLKKLULLLKVKOb`aCSRVIxhpaEKOppXxh`\KTKKNLJ\Jaa`DGB`b`DSLHiSLGp`?B^UMKSIphahDGaxBi`hx`hpp`qxSH[ONKLGaEKKLOOhBaELNH[MLKMKGx^UKLTLMLMTKLUKOqappbyhiCLLOa[O@?P`BTODTIXR`CGxMJ`]JApxh`MIxxa[MJEMMKMSGh`YhDMLO`SKLTKGh]MMMTG]LKH``CZNMLTGq[Rh`hYh[JDKHBQiTHppOIaGAOybhh`pCJCJW?pCLGDG]GBhDULGTGCO?ADJA@OO@OxFIQQ`ppZ`EG^JIpDIAYA`Ihh@hHWhWhhKTVGDGaB@EKLLG`RhCTO`TLTSUUSMJ?qh`CJMLJh`ppRAFI]MO`?CLG?`X`aCSMLNMKRahTMULGZ`PxhCMGh[LLO`SLKJA`pCIGpZ`yB?B`@`a]G?\JBWhAQ?LO?JB\Jp?`hOi?aG`KJ[GOBh^IB`x`iGFNULMLMIPTLMKNG?`@p``aW`aDMKJpTMLSTH?QWEHCI?`APXAEG?hDJACIpA?RpCKMGFGph\Oh[OahpA`hx`yUJyhipCUJ]J``aBxaTJ`xHaahWhDJx?[GppTLLJVLTRxpEGhyDKTHi`MJpphihxDLOi`DMMOyWap\LLKLKNOpyOSMKOhi[LLGhpCQbi``hLTGhCJDURaCMLOphWxppapNSLNLMKULKMGhBpaFLKUHpxDTNSGpxFUR`CKTIDJ[MGxbhhORhppYihqDPEMVJapLHpZbDGq\KTUGxEJCG[MGCH`xRaah`x`xhGA``h[TLMKMJLJpGCHX`KKNMLNMGY`KKGZUKLSMGyax`h`CMMLKSJiCNLLMNJ\STKNLMIxp[KUSLIBip`FQEGpXxDLMGaDTSG`?h`aCG`GP@Wx[SKMLH?hB`DMGhYULO`IO?AXpa\J?xaX`qh]J`FNGpihELG`hpETSOayELGxELLGixGqDMMRhZR\LGp[UNOiOxZ``ihWh`]LRi`\Hh`MIBKGph`]KTQh`pxh`hhp`AWiCP?DGx\JOUHGah`hAhFKKMKO`CKH`hhi`bphq`[TLLKUGhihiP`hhxpDSLNMNKVJxi`h[QFMUOah?WahCKTLMLJaEKJxLLSJqhDIVMPHSMTG^MGxFGpp`hp\LKLKMKKKG`apapph[UITLKRpaa^GapA`hpOCNLTIhhhRa\TREKLMSJ?``TNMMGZqpxFUJ`phpxO[OKMG^NULULLLKTRhaWh`piDRMNMTMGipxWCLKKMMOSSMOaaSKMG[UTMLNNKR?h`CJ`AZRa`\UKKJKJ^I`CKJxpq?pSKMJpxEJp`?xqqEJCSJyWh]TNHph`qDRELSG[KGh`yEUG\JTKKIapY?hph]KKKKZ@xpphh[RhEKNOhphCQiaLKOh[MJ`h]VHaGhia]J`Zp?qEHLR[VHhLSKLNGEKGELKKG`ipTRh^Ix@`yOi]NMJ`iDNLLI`p`hh@@paCUMLLLTMKMRqTUMSKJDMMIh`p\LMNTJp?]SG\Oxhah`Wx`pp`xxaCLJyhpp]GiCUJxiDVVGpqip`h`xqPhaFKSSMLLLVPUHpySUMMGp`TOhpp`DGph[UGyh?ahpFLGUP`SLOp]LUGxxCNHphAWh`iph`hx``?`UMH]J`apEUGihx`aCKOyDLLLH`\KSZpxhhpTLGUTKUTLGphxph``pCGCTSKGWAhpCROTGpCJW?p?@BDG?pBSLIW`hqAqihULMMMNIi`\KQSMTRZER``baO@hapWpOxWULMMNLMJWhp`CSKLSGTJpLKJ`iDG\GX?`]JRBBa]KG[JZOSG@?`ph?pWx?`KGYxhx^MGpaa?`ih\UJiFUJaQpxAhhTGi`xqCRaCJp`hhpqCI?XapDTJpahDIDNG`h``h@QYxh`DJSTKGLMJDKJpxULKUIBaDGPp``]SMUGCVGhqppx`aCMLH`y]LOhp`xpCTIpyaahiCMGhZ?PZHYBhx?GWEHhDJpYpELO``xhSKGGRBpQKKJGhA`CJAhx`]KNGFGpqhpDJOP`SWi?ihTROCG`hGxa?UKUGJ[GTGqFRRH`?p]G`DJDIp]KLQ[LKIhaa`phhhhh`xUGahTMGW`DIFJhhpih?^KMKTTMMLJ`h`hCO\S^Oh`bhGCLUGh@CVLHhYEJh`x?SGYpGHpSMLLKKNUNIhWhJ?hBTNIWp@?OpDNGayhWh`h`pOphZp[G[MIiOhXHahpHhxhFJpp``EJ`GOEJhTKKKGh?WxBpxCH?CG?RWXGOaCPFIGap@`h]MGNGKKGhFLIAh[SG``COW`?`qhpELMIp`aqhp`aqVTLGxhphOh?KJCVKSI`\JpxPW`?hTKJSKIWy[LGOa`a?GBpapqp`p\JKLI^KGyqCGOiiq^LSMMTMUMKNJ?FKJhi`pNJZhhyaSKKGNJhiiSR\VRTSG@KKR`YhKSVKI[G\LTGRq[KUJZhTNGp\Ixpq`B?xip`hTO`yBp`p`p\LGCMMLMGpEUQpDMJWh`DNIphih`xEJTMKJb`IBCGp]LMIhx@xppTKGpiCUGiyxCKMKSTJ\IhppWpi`a\HxWQ[Gh[OYxFJ`]I[Y]LOTOiBTGphh`FKPh`yp`qhaMLOi\TMMMOpi`iQqRTKLMGhqiTUGR`FIih]UG[Jph`W`pCGKMH[MGqhXZCGJa`h\LGDMGqa``hh[LTJi[MKJ`b`ihEGhEMGphh^R?XMIBpSJKLKIp?`\KGFMGBh\JLJhi\Gp`hhiJh]KR`hah?iCLLGpAphh[URSKKI[VMHBAap]LKGxi[VGp`hBx?`pxJ@ahaxpp[J\LJa[GBWaCSGhi`p`pWaaDLLGpWpEMOq\KSHVGxY`a`?SGBOi`TMG`G?OaTJQ`[GXbPGAhhPOAEI]Op?ph[MGiK[Gpq[^NQByppqpxiqAO?i[JhxAENMKG??pxxC^VJDMKGp`aDVKG?`FKLG?CNLMKKMKMO\LMKGx?h`ahaqR`xaOOCG``W?B@GY`\Gh]LIKKJOKGFTPp`NVKJ[KRhiDVKGaO`JpahhhDVLLMJphCMO``aqVHhQBqCLJIDJiDLKGENLG`FSMKRqGapEMGSKLMSSWaENJhh`aODUOpQhyDKQh``y[KKJSRp[KMSGyYYaDR^NR`B`q]SLLMUMLICNGhh``hpp`pppQ``xhh@EKLLMMGappCSVNLLIaZ`[LVO`hpppaAqRqCUJWSGQh?SG]I?yap[STMKQ`p``J`FMLKKGhZ`?hxSJUKULSSMLMJDOhxUG``hhJhUUKKTHaxipa[OCGap`TPDKHMJpp?pp[GUUMGCPUMQb``TOZ`DLGpppiXxihhaaxESLKJ@\KGh`[O\KWphMGh`DG`hpERh`CNMLKULJb`OTJhhEMO\LI`[MMJh``DR[JpyhAphMKJhxy?`pCNNKJpOhDKKKLG^MHxa`qMLIphWpC^TSKKKMSKG``aQh^KGCKIhp`\KKSKS\OiiCJ@ADLRa`iiCSJTTTMJ`iCMG`MUKP[KJh``aphSGh?ELNGp`h\LKKMNJxpiAp`WUKTNJpx\JhDSTI\LKMIhFOCG@`hhFMKMJa``pCLLNP`yTJ`hyWTG`[OhqDNPp`KLMMGahCLO``KLTGxEJahTMR`Bq`hpCVIZRZRyQZ\MJ``h`QOBWB`DR`DKG``hO`p@G`@pO`Bh`HpFKOhPi`EMUJhh`LGB`?`aKJ?GW`p`?`qBQFO`Wh@TKP`LLJA[PVIOqEPaCMGZhhph[LJZ`a^LGpyahhhBiaWhh`xyYVOhxaxDUJ]LMLVKLMKMLOiiyi^ULOVLRhxZVOA]MMJ@EQREVNTHpCLKLNGhCTJq`ZQDLLLMMKTNJyDRCUIh`ppqDMNIB`^MSG`h`EHa`hp`qpVMQpxiEOq`pOhiCLIh[LLUGhh`xEGhA\H\SLOhW```pqBW`pihhhhhVG`papahDMSG?hKLOphDLMJ``pqCNJGELKHY`Gax`ahah[OipTUOiCOLGip\LSIipai]GWDLLKWpLKGDGhhphVQ\KJx`xiCG]TNGhCLLLH`Bi?LKOhqhFTKRSKO`x]Jx`p?xiiTGQCG`hOhhDKTKKTJhXAiqWER`xLKLKNGxp`TMGha`[Jhhhh`pTOpULLLMLKI`DVO?OWqhqJh\JxOhSTNLLTKKMKRhpihEMJh`q`hx[LQh?DOhhI`hFO\MNMLSTMJhWhhhppB`AhW^NPVKKGpEMLKLMLQTRFGaaih``piELMNULTJESKJhEKSGipUKKTGihBh`hx[LHhY`?i``O`AC[RiipCKTMMLGELO``pYDLJBPhHTR@Y?CGCHBhhSGDH?p\LGELG[Jh??`^GFLMLSNKR`EIBO?TJ?WYA^HaFGFGB`a[GW?OaEORMG?hZYp??\GphCIEKG`VRCIDIGKKGWSGYY`h?`TLSLKVMO`x`i`hFMSJahFKGhpELMKMMJp]P``ha`KUI`pDMNUJi`phqyhFMLKNNPhp[NOX`AOpx?`FICMGHDR`xp?W\OhERKGR@DIhhLQJJYOO`EKG??aipp?Gp[G``FJOBhxp?SG`WpppyhpEJ?SJ`A`YZBiEKKNQ`yODGhCKLTLTUKLKNH`ULSTJ?OWhpTJWhDKMI]IhNLJp`xhMQ@haP?CI?GTI`I?hqhahX^I?ODGhhAhSTMGq`PAx^LIaWpSLLSGpDGpa?`\GGEJBhPp??x?CLGaLJapESJxh`Zp]MGip`xxEKTIhb[JAhdqA|~Ad}Ak}Ax{AdqA`dBqiB{bBvbBxgBulBwdBfdBobBitB}aBmdBn`BdlB`hBxdBsfB|mBdaB_dBt~AukBf~A~iBq`BjdBujBlnBgzBykB_hBbaBvmBudB`aBpmB`oBiyBkdBumBq}ArdBrsBp|A`tBo|A_eC~pBlvBm~AwgBwmBqbBzoBosBa|Bg`BodBnsBaoC~~AelBnqBxvBqvBpkBtlBj|Be`BoaCzbBntBmlB_|A`bBybBmgBmvBdaCl{A``BgcBleBcmBspBcxBueBlcCvdBkfBtiBazAh}AwjBjpCskB}zAs~AecB_vBy|BahButBkyB}~AsdBnkBflBemBzqAt`Bx`BfaB{jBw{Ar|ApfB`rBayBfbBjcB_rBnuBsbC_`B~eBbfB_iBtgC{{AtaBfhBjjBpnBapB_qBouBccBndBgeBmeBviBsmBluBtbCafC{jC}eBugBxjBa{B|`CsdCgjCj|ApdBjfBngB{hBhkBxkB_mBqmBrmBhnBopBpuBw|Bj}B}}BraCbeCbuAy|ArfBijBsjB}jBmmBhoBpoB}pBtrBpwBqyBk|Bs|Bl~Bq~By`CtcCnbBreBveBafB}fBhjBooBiuBivBo{By}B`~Bu_ClfCbhCijCkmC`wCkxAhbBmbB{eBlfB~fB|hBslB~mBenBarBksBovBiwBvxBpyBwyBk}BeaCkcCadCfiCwoCzpCswA}wAjyA||Aa`BqaBlbBpbBocBjgBuiBkjB`mBqnBznBcoBtoBjqBvrBmsB}tBwxBjyBlyBb{Bl_Cg`CzaCucCodCzeCogCugCmhCssAk{As|AsaBfcBkcBzcBpeBtgB~kB`nBdnBknB{nBioBjoBkqBxwBryBz|Bc_Cs`CobCrbCbdC_kCvkCfmCjqCfxC{yAj{AoaBebBydB|dBojBlkBllBuoBkpBppBrpBiqB}rB|uB`vBgvBjvBvwB|xBwzBn|Bm}Bu}Bt~Bs_CmaC`cCjcC~fCerAawA~zAb_BhaBzaBgbB{fBygBvhBfiBiiBqjBvjB|jBbkBtkBfmB}mBjnBrnBjpBtpBbrBqsBhuBmuBjwBbyBxyB}yBjzB{{Bp}Bv}B|}By~Bt_CtaC_cChcCycC_dCldCteC{gChhCoiCqtCqzCvrAxrA`wAhyAlyA|}Ac_Bv_B{_By`BibBsbBedBldB}dBjeBefBokBqkBomBgnB|nB{oBbpBdpB{pBzqBzrBvsB{sBjtBotBzuBbwByxB{xB|yBzzB{zBh{Bm|Bx|Bb~B~~B~`CqaCsaCxaCvbCwcCxcC`dCzhCniCclCylC~nC|pCrwC_rAgvAqvAgyAjzAmzAn|An}Ag_B}`BjaBvaB{aBbbBcbBdbBvcB{cBadBqdBcfBlgBmhBsiBfjBklBnpB{rB}sBytB~uBcvBhvByvBhwBmwBqwBrwBqxBnyBvzBc{Bg{Bn{Bq{Bi|B{|Bc}Bo}B_~Bg~Bs~B__Ck_Cm_Cq_C{`CaaCvaCebCubCecCidC`eCmeCpeCxeCsfCzgCkhC`jCfjCrkC_mCgmCnmCzoCypC~pCmtCvvCpwCzxCczCcsAstAeuAjuAtuAuuAfvApvAvvAqwAwwA~wApxAwxAi}Au~A{~Ax_By_B}_B_bBrbBucBwcBseBpgBhhB|iBajBbjByjBclBrlBzlB~lBanBsnB}nBkoByoB}oBcpBzpBsqBfrBhtBwtBeuBwuBuvB_wBtwBywBdxBexBgxBrxBhyByyBazBbzBdzBezBszBd{Bp{B_|Bb|Bq|Br}Bd~Bh~Bm~Bo~B|~Bd_Cn_Cr_Cw_C_`Ck`C}`CdbChbCwbCtdCreC{eC|eCdfCifC{fC_gCngCpgCsgCvgCghC`iCgiCqiCsjC|jC`kCdkCkkCnkCtkCzkCelColC~lC`mChmCtmCxmCanCynCboCnpCupCwpCsqCbrCorCdsCtsCysC}sCavCrvCawCowC`zCg{Cs{Cw{C~{Cr|Ct|C~|CsqAwsAztA{tAluAouAvuAuvA}vAiwAjwAmwAnwAowApwAcxAnxAoxAvxAfyAnyAryAzyAdzAgzAuzAa{Ab{Af{Ae|Ai|Au|Ap}Aw}A}}A`~Ak~Aq~Ax~Af_Bm_Bq_Bs_Bt_Bz_Bb`Bi`Bp`B|`BpaBwaBbcBicBxcB`eBeeBkeB|eBofBqfBvfB|fBagBegBfgBggBhgBigBqgB}gB~gBbhBphBthBzhBjiBpiByiB_jBgjBpjBzjB~jBckBgkBikBwkB`lBblBilB{lBgmBnmBtmBfnBinBloBwoBipBaqByqB{qB}qBrrBwrByrBbsBdsBfsBisBctBftBttBztB{tBauBcuBsuBnvBrvBtvBvvBwvB}vB~vB`wBcwBdwBfwBkwBzwBixBmxB}xB~xB_yB`yBmyBoyBzyB{yBczBizBkzB~zBm{By{Bz{B`|Be|Bh|Bo|B~|Bf}Bz}Ba~Bf~Bv~B}~Bh_Cj_Cx_C|_Cc`Cd`CcaC_bCqbC{bCdcCqcCvcC|cC~cCddCjdCmdCudCydCzdC|dC~dCgeCheCqeCueCbfCcfChfCrfCwfCxfClgC_hCjhClhCvhCsiCziCtjCujC~jCekC}kChlCklCxlCcmCjmClmCinCznC{nCcoCfoCjoCnoCqoCvoCbpCepChpClpCrpC}pCqqC|qCcrCmrCsrCtrCxrCzrCesCfsCjsCstC_uC`uC}uChvCkvCsvC}wCbxCoxCrxCyxChyCvyC~yCgzCuzCa{Ck{Cn{Cz{C{{Co}Cg~Cr_DkaD~bDeqAgqAhqAiqAvqAwqAxqAyqA{qA}qA~qAgrAhrAsrAurAzrA{rA|rA}rA~rA_sA`sAesAfsAlsAosAusAvsAxsAzsA|sA}sA`tAhtAjtAktAltAmtAntAotAptAqtArtAttAutAvtAxtAytA|tAduAguAhuAiuAkuAquAruAsuAxuAyuAzuA{uA|uA}uA~uA_vA`vAavAbvAcvAdvAevAhvAkvAlvAmvAnvAovAsvAtvAwvAxvAyvAzvA{vA|vA~vAcwAdwAewAfwAgwAhwAkwAlwAuwAvwAywAzwA{wA|wA`xAaxAbxAdxAexAfxAgxAhxAixAmxAsxAuxAyxAzxA{xA|xA}xA~xA`yAayAbyAcyAdyAeyAoyApyAtyAuyAwyAxyAyyA}yA~yA`zAczAezAizAkzAqzAszAwzA|zA`{Ad{Ae{Ag{Ah{Ai{Am{Ao{Ap{Aq{Ar{As{At{Au{Av{Ay{A}{Ab|Ac|Ad|Ag|Ah|Am|Aq|Aw|Ax|A{|A}|A_}A`}Aa}Ac}Ae}Ag}Al}As}At}Au}Ax}Az}A{}A_~Aa~Ab~Ac~Ad~Ae~Ai~Aj~Ar~Ay~Az~A`_Be_Bh_Bj_Bk_Bl_Bn_Bo_Bp_Br_Bu_Bw_B|_Bc`Bd`Bf`Bk`Bl`Bm`Bo`Bs`Bv`B{`B~`B_aBaaBeaBlaBmaBnaBxaByaBabBwbB|bB~bB_cB`cBacBhcBlcBqcBrcBscBtcBycB}cBcdBddBgdBhdBidB{dB_eBaeBbeBceBfeBheBieBneBoeBqeBxeBzeB`fBdfBffBgfBhfBifBnfBtfBwfBxfByfBzfB_gB`gBcgBdgBogBsgBzgB{gB|gBdhBihBjhBkhBnhBrhBshBwhByhB~hB`iBbiBciBdiBeiBliBmiBniBoiBriBwiBziB{iB`jBcjBdjBljBnjBrjB_kB`kBakBdkBekBjkBkkBvkBzkB}kBhlBjlBnlBolBplBqlBvlBwlBylB}lBamBdmBkmBlmBxmBzmB{mB_nBcnBmnBnnBonBvnBxnBynB_oBaoBfoBmoBqoBsoBvoB|oB~oB_pBepBgpBhpBlpBmpBqpBupBwpBxpBypB`qBcqBdqBeqBfqBgqBhqBlqBoqBqqBrqBtqBvqBwqBxqB|qBcrBerBhrBjrBkrBlrBmrBnrBqrBxrB~rBesBhsBpsBtsBwsBxsBzsB~sB_tBdtBetBmtBqtBstBxtB|tB_uB`uBfuBguBquBuuBxuB}uBavBevBpvB{vB|vBawBgwBowBswBuwB{wB}wB`xBbxBkxBlxBpxBsxBtxBuxBcyBfyBgyBsyBuyB~yB`zBhzBlzBnzBozBpzBtzBuzB|zB_{B`{Be{Bi{Bk{Bl{Br{Bs{Bu{Bv{Bw{Bx{B}{Bf|Bg|Bl|Bp|Br|Bt|B}|B_}Ba}Bb}Bg}Bh}Bi}Bl}Bq}Bt}B{}Bc~Be~Bi~Bj~Bk~Br~Bu~Bw~Bz~Ba_Ce_Cf_Ci_Co_Cv_Cy_C{_C}_C``Ca`Ch`Ci`Cm`Cn`Co`Cv`Cw`Cx`Cz`C_aC`aCfaCgaChaCjaClaCnaCpaCuaCyaC{aC}aC`bCbbCfbCgbCjbCkbClbCmbCpbCybCzbC}bC~bCacCccCgcCicCncCrcCscCzcC{cCedChdCpdCrdC{dCceCdeCeeCfeCieCneCoeCweC}eC~eC_fC`fCefCgfCkfCmfCofCtfCvfCzfC`gCagCbgCdgCjgCmgCqgCwgCxgC}gC~gC`hCchCehCnhCphCshCxhC|hCdiChiCpiCriCtiCwiCyiC{iC|iC}iCajCcjCjjCmjCojCpjCvjCwjCyjCzjC}jCgkChkCjkCmkCokCqkCwkCykC{kC_lC`lCllCnlCplCqlCrlCslCtlC}lCbmCdmComCqmCsmCumCvmCzmC`nCbnCcnCdnCfnChnCjnCknClnCmnCnnConCqnCsnCtnCvnCwnCxnC|nC}nC_oCeoChoCkoCmoCpoCroCsoCtoCapCipCkpCmpCppCtpCxpCaqCcqCeqCfqChqClqCnqCpqCtqCzqC_rCarCdrCfrCnrCrrCvrCwrC_sC`sChsCisClsCmsCpsCssCwsCxsC~sC`tCctCetChtCitCjtCktCptCytC|tC}tC~tCauCcuCduCeuCfuCguChuCjuCluCnuCpuCquCtuCvuCxuCevCjvCnvCovCqvCuvCxvC|vC}vC~vCbwCewCfwChwCqwCswCywC|wCaxCixCkxCmxCnxCpxCtxCxxC`yCeyClyCqyCsyCuyCxyC|yCazCbzCdzCkzCrzCxzCzzCe{Ci{Cq{Ce|Cf|Co|Cs|C||Cl}Cq}Cr}Cs}Ct}C{}Cc~Cd~Ce~Cj~Cm~Cp~Cu~Cy~Cc_Dq_D|_Dg`Dn`Dt`D~`DcaDgbDlbDybD}bDfqAjqAkqAlqAmqAnqAoqApqAqqArqAtqAuqA|qA`rAarAbrAcrAdrAfrAirAjrAkrAlrAmrAnrAorAprAqrArrAtrAwrAyrAasAbsAdsAgsAhsAisAjsAksAmsAnsApsAqsArsAtsAysA{sA~sA_tAatAbtActAdtAetAftAgtAitAwtA}tA~tA_uA`uAauAcuAfuAmuAnuApuAwuAivAjvArvA_wAbwArwAtwAxwA_xAjxAlxAqxArxAtxAxxA_yAiyAkyAmyAqyAsyAvyA|yA_zAbzAfzAhzAlzAnzAozApzArzAtzAvzAxzAyzAzzA{zA_{Ac{An{Az{A|{A~{A`|Aa|Af|Ak|Al|At|Av|Az|A~|Ab}Af}Aj}Am}Ao}Ar}Av}Ay}A~}Ag~Ah~Al~An~Ao~Ap~Av~Aw~A__Ba_Bd_Bi_B~_Bh`Bj`Br`Bu`Bw`Bz`BcaBgaBiaBkaBraBuaB|aB~aBjbBkbBtbBubBxbB}bBdcBmcBncBpcB|cB~cBbdBtdBzdB~dBdeBteBweByeB_fBmfBufBbgBkgBrgBvgBchBehBghBlhBohBqhBuhBxhB}hBaiBgiBhiBkiBxiB}iBejBmjBtjBfkBmkBrkB{kB|kB_lBalBglBxlB|lBbmBhmBimBjmBymBbnBtnBunBwnB~nBboBdoBeoBgoBnoBroBxoB`pBfpBvpB|pBbqBmqBpqBuqB~qBdrBgrBirBorBprBsrBurB|rB_sB`sBasBcsBgsBjsBlsBssBusBysB|sBatBbtBgtBktBltBptBrtBvtB~tBbuBduBjuBkuBruBtuBvuByuB{uBbvBdvBfvBkvBsvBzvBewBlwBnwBwwB|wB~wB_xBaxBfxBhxBjxBnxBoxBxxBzxBdyBeyBtyBvyB_zBfzBmzBqzBrzBxzByzB}zBf{Bj{Bt{B|{B~{Bc|Bd|Bu|Bv|B||B`}Bd}Be}Bn}Bs}Bw}Bx}B~}Bn~Bp~Bx~B{~B`_Cb_Cg_Cp_Cz_C~_Cb`Ce`Cf`Cj`Cl`Cp`Cq`Cr`Ct`Cu`CbaCiaCkaCwaC|aC~aCabCcbCibCnbCxbC|bCbcCfcCmcCocCpcC}cCcdCfdCgdCkdCndCqdCvdCwdCxdC}dCaeCjeCkeCleCseCveCyeCffCjfCnfCpfCqfCufCyfC|fC}fCcgCegCfgCggChgCigCkgCrgCygC|gCahCdhCfhCihCohCqhCrhCthCuhCwhCyhC{hC}hC~hC_iCaiCbiCciCeiCiiCjiCkiCliCmiCuiCviCxiC~iC_jCbjCdjCejChjCkjCljCnjCqjCrjCxjCakCbkCckCfkCikClkCpkCskCukCxkC|kC~kCalCblCdlCflCglCilCjlCmlCulCvlCwlCzlC{lC|lCamCemCimCmmCpmCrmCwmCymC{mC|mC}mC~mC_nCenCgnCpnCrnCunC`oCdoCgoCioCloCooCuoCxoCyoC{oC|oC}oC~oC_pC`pCcpCdpCfpCgpCopCqpCspCvpC{pC_qC`qCbqCdqCgqCiqCkqCmqCoqCrqCuqCvqCwqCxqCyqC{qC}qC~qC`rCerCgrChrCirCjrCkrClrCprCqrCurCyrC{rC|rC}rC~rCasCbsCcsCgsCksCnsCosCqsCrsCusCvsCzsC{sC|sC_tCatCbtCdtCftCgtCltCntCotCrtCttCutCvtCwtCxtCztC{tCbuCiuCkuCmuCouCruCsuCuuCwuCyuCzuC{uC|uC~uC_vC`vCbvCcvCdvCfvCgvCivClvCmvCpvCtvCwvCyvCzvC{vC_wCcwCdwCgwCiwCjwCkwClwCmwCnwCtwCuwCvwCwwCxwCzwC{wC~wC_xC`xCcxCdxCexCgxChxCjxClxCqxCsxCuxCvxCwxC{xC|xC}xC~xC_yCayCbyCcyCdyCfyCgyCiyCjyCkyCmyCnyCoyCpyCryCtyCwyCyyCzyC{yC}yC_zCezCfzChzCizCjzClzCmzCnzCozCpzCszCtzCvzCwzCyzC{zC|zC}zC~zC_{C`{Cb{Cc{Cd{Cf{Ch{Cj{Cl{Cm{Co{Cp{Cr{Ct{Cu{Cv{Cx{Cy{C|{C}{C_|C`|Ca|Cb|Cc|Cd|Cg|Ch|Ci|Cj|Ck|Cl|Cm|Cn|Cp|Cq|Cu|Cv|Cw|Cx|Cy|Cz|C{|C}|C_}C`}Ca}Cb}Cc}Cd}Ce}Cf}Cg}Ch}Ci}Cj}Ck}Cm}Cn}Cp}Cu}Cv}Cw}Cx}Cy}Cz}C|}C}}C~}C_~C`~Ca~Cb~Cf~Ch~Ci~Ck~Cl~Cn~Co~Cq~Cr~Cs~Ct~Cv~Cw~Cx~Cz~C{~C|~C}~C~~C__D`_Da_Db_Dd_De_Df_Dg_Dh_Di_Dj_Dk_Dl_Dm_Dn_Do_Dp_Ds_Dt_Du_Dv_Dw_Dx_Dy_Dz_D{_D}_D~_D_`D``Da`Db`Dc`Dd`De`Df`Dh`Di`Dj`Dk`Dl`Dm`Do`Dp`Dq`Dr`Ds`Du`Dv`Dw`Dx`Dy`Dz`D{`D|`D}`D_aD`aDaaDbaDdaDeaDfaDgaDhaDiaDjaDlaDmaDnaDoaDpaDqaDraDsaDtaDuaDvaDwaDxaDyaDzaD{aD|aD}aD~aD_bD`bDabDbbDcbDdbDebDfbDhbDibDjbDkbDmbDnbDobDpbDqbDrbDsbDtbDubDvbDwbDxbDzbD{bD|bD_cD`cDacDbcDccDdcDecDfcDgcDhcDv_{@CCqBCCCCCCCqBCCCqBCCCCCCCrOCCCCCzL|LC}SlTCCCqBrOCCC}LnFCCCr]~LC}SCCCCCCC}LnFBlTrOCtOBCCBzLzLCC@@@qBxTCtO@@Cpa@@@CCnFCCC@xTtOzL@CABCC??@A?@@?A@A??@?BBia@l@?|L@kTAA@@BA@eB??@@?A?A?@@????@?@@C?Au@@A?@@@?Z??C@C?BAA@@??A@@C@@????@AvBC@pGACAA?@@????@@AC??@@pG????@??@C@aM@?A@@Am_@`CABB@B?C@B?A@BA|OAB@@B_b@??@@CCA@@?A?B@CCCB@?bM_MCCBA@CA@@??CAB??BvBA@BAvBB?CCCA?C@@@aMpGBC?A@???@@f`@CgT?@@AC@C@|b@?@@CCCBB@@???@?????@CCC_MpT@C@???@?@@C@vBA@c@A??qI@?C~JC@G?@@C@CBC?A??C?B?@??@?C@BCCC?sAABB@oH@CA?@??@GC@@C???@?C@@BCL???@@???@?@???@A@@?CD?BBCA??@A?BC@BCA??CABA@@@B?A?WBA@?A?@@A?C_MABBBCAC@AAA?CACB?BACdB@ABB??B?CoANAbM@A@F@A@@???BB@V?BA@qIXCBBAD@ABcKB~L@CA@BWKC@@@@Z@ABnHB?@C??@CB?@?@BB@A?@@C?@?@???@?@B?@@???@fM@BA@B?CAwE@C@sc@?vBA@DCS@??@B@@@Cc@@CNACBX~LA@?B@????BC@?@@???A@@L??sA_MB@ABC@@???@???@??A@P@@@AC?A?ZC~J?@@?@@???@?]A@CA@@A@JoCBCBvA}@A@@@AB@C?vBBAD?C?@AGC@C???@@@@{b@F@@A@???@bM@AB@C???BCTAC@DA@A???@A??@CaMCnFvBB?A??@?BBABB@bP@@??ABKC???|LBB?CA@H@?@_P@@?A@B@@o@@?@AB?BB@CCvACC@A?????@B?C?iB?@ABA@@AAhMrUC@CA\@@mU@??@?BtU@D?A@C????@@???@@??BnFgMBB?@A|B???A@?RCB?AB?B?`BCBA?A@@?ApG?@A?C?@???@FC?FB@Cl@CAAB??@@??@@CA?@CACA@??B@A@@?mB???@??A@@?B?@B?A?BBB@Axc@@CV???R@EA?jAAC??@?rI?BB@CoAABBV@BB?J?B?ATCBA@@@A???@?@???@@??BBAA@?wUA??@@CKN@??@???@@??@@qB?B?CA@?pGvG@?}@C@??@A@@LEvB@@CCCCfV[A]BGNA@??B?????@B@A??@??@@@????@?@B??A@@?C@@\CAE@LA@C\CC@?A??@BX?A@?@?@yE?A@@?A@DP@uACS@KA?B?RhC?@?@A@@?BB@A@@C??@?C@@R?A@?iB?@?@???BS@???@?@?A??@????B?@C??@B??@?@A@??@@@?@@?B@A???@@]TrHC@@?@@??G?C@CCBqB@???@A?@@??CA??@@@@]@B@A?E??B@??C?@?BBC[C?vGBAAB@@?qMA?]CA@C??BBCA?BBA@?@??C@BB@AA@B@C???A@A@Bx@C@CA?ANB@@??@?BBOA@BA?AA?A?@@????@???@?@@CC@@[?~A?ABA@fP@?@???@??@????A@@vA@T?BC?AS@????B@ABC???@?@?A?@@@CrB?ABCFOAAB@A@C???@?@u@?@?@?@?@????@?@??CC?@?BB@@????@BqIa@HKA@@A?BBC??@?@GR@?@B?AACA@CCABC@@?CAAB@??@@D@AABH?@?CAA@??aB]BBABxFACB@Bf@AA?BB?BDAB@BGC?AyI?A?AAB?@BA??B@??E@}@^BB@@?BA@CCnKRBBLDDB?@Bb@?AEvB?BAB@IB?A?C@@??@@cKnFA@BAH^@??@AA@?@??CBC@??BCAC@B?@?@@?????@?@?@A???A@EZuI@@??J?B?@???@CCG@B@ACBC???@????BB\?@Bb@A@C?A?????@BAAC????@?@?@@???C@@CBC?D?@@???@?@???@?@?@A@???BAB@D@@??A?@C??A@GF?C@@@?E@AAC@???@C@??@@?@@@C?DC@CC@bP?@?@@cB?C@@????@CAk@@??A@@@?l@BAHI?D@@BBA?A@??@???@?@A?@?@@CiBAcKAaBA@???@?A?B@FABAD@??@??BdE@???@A@???@B?b@hEBCCB@Aa@R?II?EaA\@CA@@Ddd@C??@@??@@@?@A@fD?@AC@??C@nADA@O?tA?@B?A??@A?@?A?@@??????@??@@????@@cd@C@@C@@?@dBA@@`AA@c@A@??@?@@???@?@@????BBgD?CCCF@uO@fMEQ?AA??C@@@eAAA@BD@ABxG@?@?B@A?C?H@BFV@??@?@ACH?@A@@???B@A?@@@A?@ACF?A@??@AB?@?@?N?@E@CAf@A@??@@@LCA?A@B?B?BA?C??@AL@~I??@v@@???@C???B@PVC?A?C?@@??AA@?B@??@@PCA@bUC?@uACAA@@?AA?BBqO?LA?@???T@@O?@@@???@AHBBA?B@]AC@B\@@[@J@OCA???@EBN@?rGB@A@qB?BrC@?TaPGBCC@?A@??@BG???@EA@ABA????@?@??@?@CA??@G?@eAA@@@Qrf@@?@?C@?C@S@?hMBB?CsVCBCGYB@qB?@B?CNA@@B?P@EA@????@?@???@BAEAxBA@EA??@@?@???UB?PW?@@BA??BB???@????@@??@?@@UC?@AAJAA|@BA@???@?@@J?IG?L?@????@@P???@?C@@D?A@?@??@??@^H??@fVnUA@@A?C?wG@@k@@?AR@C???oHA@@JA@?@_@B?CADBA???@@?@@B?C?BAC??@@???@@?B??A@?@??B@a@B??B?ABAB??@AB?A@?@?@@?@A??@@???CbMA??B?@?C?@?@?@@????@??A@??@??@??@@@ABB?@???E@?CBA?@@aB}@??@D@@C???@B?@??@BA???@@???@A?AUA?@??@A@B@@?@@?`J?nB@@A?????Ah@@BEvIIA@qC@AB@BvBAf@B@??@???@AA?@@@????@?AB@F?aB@DBABA@A@D|E@A???????@@@DBA@A?@C?@A?I?@@?@???????@?@E@CT??@@DA@sIA@G@@kK@?AA?@@fBA@@dB@@F?@@^?@@rCHA?@@???@???fPoH@???@?@@?ACA@@s@@A?@?@???@B?CAR?@@??@@??@@??C@?A@?@@???@BBABEAvBC@???@b@???@??@??BEAx@B??A@@AFB`BBEC@@BBgD??A@@A@A@??@O?A@?B@gD@C@e@wG@??@??????@@CClB@???B@K@@@?@??A@???@?@@E@`AA?CA?BAb@??@??@C@N@@}ApF???@@@?@@??@A?@@?@?@?@B?A?AB@?A?@D??@@?xCA?A@@??QCH@@D?CABBB@C_F?B@???@@@?D?@???AA@??@E@a@A??@BA_@H??@?@@?D@?pA??@@bC@C?HBAH?A@B?A}G@??@A?@@AAB@?nADB@YBAb@@@@??~LBCAB?rC?A?C@?@A?CBIA@@??}OBwCJ@???@@@AAqBB[B?HR@@@@A???@?BB?AA?AK@B??ABAAB@AI@??AAB@?A??@???E@CH?@?@@BvHC@@XA?@A@?C@@???@??@L@AAA????@???@?@A@@@@?DAAA@BBA@w@@?cB?@B??A@@b@?A@???@@??@@@????@?bAIA@eAAB~AC@BF?OB?A??@??Bq@AOrKD@?DBAA@Nb@uKC@DA@??@?@@@C?A@@????@DN?A@B}L_@C?A|A@@?A@A@C@x@AE~EE@eANde@_HEC@A@CA@@@??zAAB@A?BD@@BA?@A@A@????@??@?B@C???@@?ORdB@@?@@Z?CUBDA??@BA@D@Tg@?@??@??@??@@C?IA@?C?A?@@B?@@?oCAF?@?@uA@?BPA???@?B?A@y@A@@@????BBAC?@@JB@@C@C@FCAEHABCBJA?CA@@AA?@@@A?@@K@?g@ABVA@@ABCEA@B????B@?I??@NBA@c@dEABBKABAB?nFaBAqBBnABBACABB@BAABBABBqBABBABBABBAABBBBACBBABA@@ABBBBA@?AARU?@A?NCA@G?A@?A?C?BAB?BKA@@tBABB@??@ABABCBABCAABB@XAA@_HCB@?vEBAABAA@?Cqf@A@@AAAh@@A?B@?ABBABB?hEAA@BBiB?BAA@jABbAAB?ACC??A@ACHB@CB?g@aMbU@A?UvBAAB@@BB@@C@@@eKC@[eB??@@????@@AA@???f@A???@??@sBF?@?@??A@??A?@KKAB}UB?I?^B]??@?@o@I?@????@@cB???B?@a@?@???@pGAA@ECpF??C@????@@A??@@@?]??@@????@@AwA??@@?@@@????BD]A@W??B@BzA?@@jKA??@@@@??@???@AqF@fA?@@\C@@A@EDEBL@F??f@B@@CjA@D@?CC@???Ux@AB@CzE?@BAA@@????@?@???A@yD??EC`KFA@sK@@X??@@A??ExPjBB@C?@G?BB@@@@CAAABC@@ZWA???@m@KA@?@???@?@@D?BBeWV?@C???@F?@@??BRC??AAA@CAA?@?@BBBAKX?e@?^A?@f@@?EC@@?VBB@A@B?AA?@DtI?B@?@E?vBA@@?@ICA@@AA@????@?@wD?@@@CcB??@??@vI@AA@??@@@?@@???BjAACv@??@yK@B??@?C@A???GrICD@A@@@???@n@??A@@?AA??@@@???@?@AIB@@?A?@@HC?Fj@@xA?@?@@??BBAAA@A@??@@@?????@@?CBA??@?@?@??@???@?@@@A?iCFW?AA??@??@?S@D@?@???ArG?@@??@@???|G@?@@@AF?I?@@@A?EB???D@AA?@?@@??@?@???@A@CB????@D@A???@?@?@?A@@???FA?@?@?@?B?A@?@??@??@??@?cK?@?@@?????@AA???AE@|AA@@??BA?@B?@???@@????@?@@@@AB@B????BA@C@?@A???@BB??A?CBA?@?@@FA}A?@???@@zD??@???COpD@?A@@@@???`AB@?A?B@D?Is@@?@?s@AuILwM@?@?@?@ArB@?@?@????@m@@A|AE@A@B???@BjAA@@?A?B?@?@??@BAAEI@A@B@l@h@@@C???@@??A@uUnA|@A?BA?@oM@?hE`A@BCLA?@?C@CCvA@@A?BY?@?@??A@A???@???BA?@@??AB??A`B@??@?B@AB@@?L?@??@?B@A?J@??@??@A@D?{I@@@B@UBDC@BxAvA??@??@B?B@@?A??@?@?A?@DCH??@??@@gB??@BC?yf@oAA|@@??@?UBa@v@a@A@A@@?AA???J@BC@B?AJ?@UC?C?`DACA?iB?@@??BB@????@??A@?@@?E@A@????@?@??B?S@C???@??@~@@@@??@FC?@?@}AAA?????@?@???@BEH@A@GC?DA@@A??EA@@@A??@?@AA@G?@AF@@???@@AA?A??@@DA?B@KN?RB@Dw@@BrCA@@?D@bP?C@@P???B@fAwD}F@@ABB@???sAB@???AB@B?tAC?@????@S@X?@@D?CAB???@?C@@??B@e@E@@@?AC@@DBA?????@@@BfDA@?@?@?@@@?@?@BA?sBBB??@?@?B@K?AB@ErHBC??@?@b@@??h@CA@@@@@A@P@???@@FA@N@???@@AAA@@J???@GMBC?yC@cAa@?A??@@?@?@?@A@@?A?_F@N?@B?V@?BBBA@?@k@@AXBB?A??@ABCBBP??ABAAASACBABC@@?e@???A@?@@B??BKGG?CBC?AA@b@Ch@BA?B@@N?d@A@@DCA?@??????@@@@{BNv@?@`GCH?@@[?A?@@????@w@AO@?AA?BAB?@@I?BAE@?@?@_DADB?g@A?????@??ASB@|E?@@@??@??@????B@A@C@@@@AA?B@@B@MCIhE???@@@??AAB?A?EAs@?@@??Ac@I@@????sKAvG@X@KC?A?ACABB?NAjW@TuFuP?@@@A?@@?A@@?A?@BA??@@???@??B?C?H???B@?AjVB??@?@@A@B?@?????@@Bw@?A??V?@aG??@B?A?@@f@A?\Bn@cAbA@D?AB??A@@?@????@C@@???@@B@@B??@@??A@@?A@??????@@@@?CA?A??@@@?@@J}F?Am@zA?@?@@A?E@CDJA@@R@dJA@AA@?D??@@@A???E@D@?@?@??@@?zD@???iE@@??CAA@BCAKE?@GW@???@??A@@B?????@@@@??^H@t@???@@pAA????@B@A@pAuBD@?@@???@yC???B@?AiB?A@?@???B?A?A@BA?L@@?@@?`H?A@C@@?@?@???@A@?@@kCCz@?@??@SBA?BA?sKB@yA??@?@@xKAOB@?A@[?A?EpDADA@@}AA?C?@?@?@??@????@E?@A@@@????@@?C??BAP?BA?@?@???@@?@??@@AA@??@??@k@A?????@@@HK@@??A?@@B??B??oAy@@@??@?_@V?B@DA??@??AD@yAM?MB?@?@?@???@???@nAA??E@xK??@[HI?@@?@@?CPAA@?@B@@???@@@?@AA?BxKCM?@??B@A???CB?@@CA??@yA@A@@@D?????@@????B?A@b@@@?A??@@?d@A?AO@???@@@?ABBU@?vBAA????@@AP@EDA@@A@A@be@B?C?@?@B??@?@UY`GBA?@?@ZA@?BAAxPA?@?@@???@x@?ABqA@K?ABB?Bz@?AB@??@?@@@JD@B?~A@??@Ax@EBBuA@A?B?A@@@AAB?gCgC@P?CA@?B??????C??AwKB???@@B@A??@?@?BBA@aBF?hA@@????@?@????eA@A@@@a@iBBABCIAk@@??S@B@@@??@A@AvBC@@?A??BIB}B@?@?C?@???@?k@@?C??@BHA@^@???Bf@CAB??A@ADBC@??A?O@@?@BtGHBF@@?^?@@?A??IObAA?p@MZ@ABB@@A?BB?MA`F@CCAAFf@@@{F?\BA????@CBBC??BA@@t@??IBB_QCA@BA@tFKCB?G@?TH?B@??@A?@@?@BA@@G?@???@???@?@@APHBBAA@????@{F??@@??@??@J?O?@?@?@BA^s@A@@A??@@@?@?A@?@wICC?@?B????@@@A@D?~BsOBB@BA?H?@G???BBALCB?A?@?@?E@??@G?@??A@@hV??A@?CA@?@@@?A@C?Q@?@??@??@??@?@@BrHj@???@@?B@CAJ@@D?A@@???MD?uB@??@@?ABBA@dGGA??@@@D@@?QA@l@?AB@B[sKB@?}H?@@?@?@A@BCA?@@?dA@B@BxG@rF@?@@@@?kQ?@@AD?A@@Dw@b@A@?@?A_@@?kAAA@?nM@MMgM@@?A?k@??@?@?A@B??@@?AA@@Cp@BG_GO@???@A@@?B?A@??@@???@??@?A??@??@bL@\??@@`JIAAC?@@zV?C?@@?@z@AB@A????@@x@@??@B??GAAGCCGBD@@G?BBBB?@@?@??@??BAB@bDAK@o@d@?A@AA?????BBbD?FF@@KDA@B??A@?zAA@??@@@@A?@ZA?@~F?IHE@GA`@@B@AA@CoBK@A@YC???@@BCDz@A?@?@?@@kJ?C?@@P??@@?A@E@`@A@A@??@@A?@?@@vE??@AB?F?@xB??@??@?@@F?A@?@zAC@@aP?Ad@@ADA????@@@A??`D?@@?BB?A?@@???@@BAA??@???@??E@F?A?B@?AuFRdA?@?c@@@?@@??@J?TWC@V@?A?AB@????@@IWKvE@?L?BAABBiCAH@A?@EjE??@@A??@~VC??F@kKpBD?@@???@@?CvKAdg@C`@ABBABBi@@AGNAHB??`LdAA?@????@BMkBBA?A???G?@@??@?@BIwHIB@@???@??@?mUoW?@@D?D@@A~@iCSy@?]CB^eAA@?@D?A@?A@?@?G?@@@?A?@@@?AK@@?@?@??_@@Db@??@@N???E?@C@BzHAI?@V@???@C|B?@?A?@@??@e@BC??A?A@??@??@????E@A@@A?@B?AAH_XAFAB@@vG@@@?A?@@zBaCBAEAB@@??Q@@?D?@????@@lB??@@????@@@????B?AB@A?@????@BAAB???A@EA@?@?ZFAx@@@tB?A?@@P?q@@??@?@?CBB@?A?@D?md@@HCACBA@@???|@@@????E?A@A@?A@fAB|EWABA@k@A?ABAA??@??B@AAAAB??A@@AD?D?@??@?@BDA???B@@A?@@lC?B??AA@@?A@]B?O?????@@SH???@of@@@A@C???@?@?dA?@~AA`AA@@A?X@???@sPB@zCBDBA??@???@?_@v@A?BGDAC?n@@?AdAX@@?@@BB@@????BHA??@?@@A?yF@@B@eB?C`H??@@??@vVhABC?A}A?BAA@BLABDAAk@@@@?HHC@A@@@A@?@@A@|g@?ABBfi@@@??B?oHB@@?KTC@AEA@@`B???@?@?ABLBbJ??@?@?@?@@k@lIXTAI@B?C@BA@?G@??@@??@?H@@?`A??@g@??B?@????@B?A?\@@BBl@Q?@@?@BA?A??@??@?B@EBPAA@BBmBA@@@??B?DsBO^|GL_@j@O@@CA??@??AAJ@@??PBv@A@@?BABsDC??@@@??B^dD@@A??@@@BA@C?@B??@@?@?@?@@bDI?A@B????????@@AA?@??ABBA?EV?AA@@AAA@?ACBA@???cEmCxA@@????E`@@A?????CC@@D??@??@?@??@E?ARBB@ABC@?EE?`A?O@?@CA@C??eL??@R??@???n@@@??@@Ab@G?@???jX@?@???@?CzF@CA?@@TFCM@V@?AA@B????@??????@@A?@E@yBF@?hC?B@A?BCbA??aAAA@@???@@??@?@B@AABn@U@?@yA~@C?CA??@AA????@G???@@@@?AEA@@??@G?AA@@@BAA@?@???@@rB??F@cA?Y@B?POGB@@AZzBBAC@B@??AsBB@C~M????nK@CO@JpA??@AB@AA?EC@A?@@AC??@@@??@BB???@@pBBrb@@????h@@@BqAB?^??@A???@BAA?C@?ZI??@@???@??A@@?@@X?B??@@?BAAC@@??A@?@?@??@??@@C@?CVB???@@@??G?@AzGW??@@@A@BB@@?A?AHBB@@GADB@????d@fC}AA_WUCGBB@@A@@?A??@CA@@??A@A???@?@??@BA?@@vKXA@@???@A???BC?y@mHC???@??@@?@?@?@@zA?@@@A?N@@A??iDE@AB?@?@A@?@?fA??@@A{@aN@CbAC@@??@?@?CAB?BA??@@??@?B@I@??@@??@??@n@A@@?ABbN???@ElC@AA@@A?ByA@??@@@??E@A@?@??@GA@??@??B????@@?sArIA@@LDBBABBBAB??B?@@@dL??AeD@?BAH@A?A@@BAAAuD@K?@?AB?@CA@lPY??@?@@JTA?@@@@@@AA~AA?@@Ch@oQ?@?VC?@@o@?@@??AU@mCAOGBzAAbA@Ma@?bA?BAL@?@@??@@?A@BwAjAI@?A?@?J@@@?CA?@?BC@`@UCAB@????@????@@DIBB}K?A@@????J@?@??@??@@sA@??m@@C?A@?FA?C@@@}K@?B?iBABB??@?x@AB?@?AB@?@vFACIBgB@M?@f@A?@@bAA@?@?DCBw@ABA@?????@B???A@BA?????@?eD{@?CK@A@??kg@@?AL@@????@@?@?@B?@?A@@EA??@@?x@@E?ATCBMqK??@??@BjAABk@AFA@@FKA@@?@fAB@?~A@VA?A??@@BB?@?A@B@HB?]BCB@@@BC??bAkA@A@C?@??@?@?Ga@Ba@V@A@???@@@Q?@?@A?XF@@@?pAF??@A@??@@??A@BcQrCC@B???@????@ECkE@@???}A@????oGqAA@A@@BB^C@C@??BA@?????@@}BzA?@@??@??@???@@@BA??m@@?AA?@???xD@BcQwG?A@B@J?@?@??@@???@?@CA@@@@????@@AyE@@????@????@B?@?{@??@BA@oC@?A@BzETKA@xAE@?@?CUm@?nBkB@@A???@@?cD??@BkA@???qAT?IAB@@@@???@CJ??B@k@BfEO?bIc@A@@eAjh@?B??LeN?BC@Cu@BA@?AMB@BAdGwFUB@ABBCOA?BA?HD`BACBI?BBA?@?FDBB@Y@??A?B??BAA@?Be@R@AY@B@?A??@BgLCCB@B}FHF?@@?B@B@@@_@?xE@DV?@B??@??QDGB@tPAb@ABCAB@A??A@@@pf@?@@???@?jBD@?l@@??_@@K]?@?@@?@C?d@@B@lDNjB@@@????ABB@?@??A?@????@?A@@?tAG@?@@?A@ABBiEIWI@@wAw@??@@A@EFDA?@???@@@????_@wC{@A@?@AKB@@?hB@@????@@D@@?A?@?AB@?DF???@@?@@AaFoJ@@CUAOG?A?@?@A@aAB?zWA?@?@e@@@?@?AXGt@F@BD?A?B????@{@?@A?@?@??@@A?FA?B@D?dI@H@@?I?@??@@?@?@A?@??@?@a@O?@???@?????@A?@`QW?JB@CXo@?@?@HPAQsK???@@?@@?????@@@OA???@@LAA@@ABBAxKB@AHoCG?@?@B?CAA@K?BjBAd@aPAAvB@AF?@BC?lNACE@@]HrDCAA@?@?ACMnKB@dB?@ABA?D@A?@?@??@@A?@@?@@??A??@?@G}L@???@@@@@A??AA?@A@A?@@bXA}G@?@@?@??|W?@@`@gAAn@??@@??D??@A@?BAB@BAyPBBAl@ABBAABBABBABIHA?@@dI?@?iP?@@??H?@@@QA@????@A@?@x@??@C?A?@@B@JA@?A@@@P@j@cAzI?@G@}EFDBC?ABBAcA@{@CA?A@AA?cIBCBBAA@@K@DB?ABjBTPA@BAA@?AGBrMBBA@@DByDLCB@?@BB??@@A??BBag@AkA@@??@HCOB@?@??@A@??@@?A`LCBB}A?CA?BdG@??AC@@A???@@????@@aA?^u@?@??@B????@????@@A?O@@AA@@?`CP@B???BBA?ABBB@A?U??BMA@jBCBN|BAC?@@??wAmC?B]A@cWABv@?M@hk@rBA?C@@?????AAAE@?AAFT@???@?@@CABBABj@B?@G@???LAhC@@AA@CC@??@@DA@?@@?D?@}@Q??@??@@?B@A@@LO?A?@B??@@iP?@K@C?HjAB???@@jEvAkB???CMA@@@@W?I?@?AA@?AfB@@???A@@AAqB@@@@@Z]G@B@B?^A@?AB@CIAA?@B@B?@@????@?@??@@?AB@@AA?BBA@HlDbA?@A@??BABBB?BvD?AMBAyA`@A@D??A@???@??Gl@F@@A??@APB@hEA?@@bL??AA@@??o@?@?CA@@BGa@a@APA?@BqH@?@@BEA@BaCp@F@??@?@?@Bx@??BB???C@@????@A??@@A?@@q@?@si@@KAB?y@???@@@yAC@@@??D@@?@@C@??@?@A?@B@DCAP@e@@DK@BjNA?@B@A@iB?@jXBuA?@}I?@A@?@?@?F????@@BBABAGcDBAB@A?@@@A@?@?TC@?@@@bA?yCEwF?A@?M?@AP@AA@@??B?@?????@@@DC?@?@@???@?p@fGA@BAmA@AABB??B?@AuU@@VwU?@?@c@tX@?@??@@G@J?rFO@?A@A@??AUfA`@@A@?FA@@H?EA@?@BgACqAB?|GxKM@A?B@B??A@@CF_HGSB?A@i@E@zB?~F@?ABBBB?|@IPEB?DABB@zCA@@@?@cD??@@AA?BBA???@@A@]LAf@@??@A@?@?kB@@HLA@??A?BAqAzDvAhA?@@?B??@A??AAdLABB?E@A@BBDe@B?A@A?GC@_@@??m@?cA@A?OH?A@@@@????BB??@@H@?@?@BiNHA@???A@@tX?@@DA?????@@|@?tB@?BEA@@C??????@BAWFtB@???CqA_EJ@AA@B???@C@??@oXA@??@?A@LCE@?|@B?@B@bFCD@f@A@@?`B?AA@A?B?AEJ}@vB~DS_DA@?A@A@??@?@@??`D?@@???@@???EBA`@@?@C@A@???@?@?BV?@Q@PAB@ABBAW@@fB@?A?@?A@@kAAKBOAAI@B@?c@AA@@@fJ@??@??{DA@A?B?@??E@?A?C@?mB??@fA?@?`D?@A@B@?uPA??@@?????mN@????@@w@??B@???A@@A?B}B?AeDBL?A@@?????@??@@@?@JbAFJ@?@?@??@@?@A@@?kK??@?B?????@?@??@q@@CAI@?@A@ABU?CB@BpVADBAC@B@?wB@M?GtUAAB@?iJAABh@@@ABC@AAhB??BB?A@@JA?@?@@A@?rA?G????@??g@@B@@?@@??@BBB_@@BITBB@A@@?@????@@???A?@I@???@?BA@?@?@@QA@DC?E@`@B@A?CB?T?@?A@AB@CVI@?PBBBA?@~G?ABi@@@AB@A@AA?D@B?AB@?@??@HQ?@EAxPhD??@B@?AD@?C@@AA??rA@C@?B@E?@?kB??@C??@?@@???BB?GD?@AqAAB@CAb@?@|A?E}@??B?@C?yC@@@?ApB@D??@??h@A@@A?@?@??@W???BB@@AmB@A??@@??SBAkAA@@???B??@@?@GA@@??@?ki@CqM_@@A???CB@?A@@B@AAT@A@Dn@AA@A?|WA@J@???aA@A@BAJ??@?@NAd@EFAB@??@??@BBAC@?@FA@ii@??kB@ETA?ABBAaA@X@??????@?A@@Z?@h@@Bj@?@?@sH@@AAb@MC????B??@@@@????@A@B@vAAw@BD??AA@@C@JA?A@?AA@@@?zBHFW@?ABCAABDDjA@BAE`@e@BAABA?@OAA?B@G@?C?GC@BBAW??@@BcAA?W?AB@HCAB?@??@?AABBB????@@B?A@CCC@???A??@@@@AbQ??@??@?@?@oK?@??BIn@?B?A?@@AeN??@@D?@A?@@??C@bJA@?@A@?@@?@vDcBd@d@@@B?nOA?@B?bG\?A@@AQB?A@G?@@?zAA@@A???@@??@?A@@AB`@E@@A?AQ@??BB??A@@?@@vB?@@@AK?s@B@@??AcJ@cA?vGABBEA@@??A@@AA@@@EC?ABBI????@@BB?@B?oAz@?B@FB@A?qI@?A?@@?nAA@AN@BgQT@?@????BC@BCZe@@@????A@??@??B?rA??@???@???@B??@??@??@@@?Ax@Cv@??lLrI@@?B??@??@?@?AY??@@?@@ABBBBCH????@?@A@?BD?AA@??dHm@@\CxQB?EBAS@?Y?@@?W????A?@B??AH@??@??B?P@?BC?v@@@?@@?C?A@B?xC??bAIW??@@@UG?B?????@@BmEhB~ABA}A@BBa@AA@BHAGJ@?@?mCA@@ADQAAB@?BBtBA@DAB?@AJ?@BUp@?CABEA@@CC@}BA?@@??@?B@gFAECA@@??@A?@?@@??AeB??@@D?@?@????@@`AA?@AAL@?APF{A??@@@?C?iE?gAB@D@AC?Ba@G@B?C?????@@@[A@@??@??@@??@???@@@?A@@Y?@???B@???B?ACE?jDI?BdD??gI???@@m@A?@BA@@A@@OA@oJ????@@@A???B@eAsBB??B??BBDZA?@??@??B@?YBA?B@@?@@A@@@D??BA??BB@@???B_BAM?A|EB?@@A?pX@PBDBF@tI???@A@??B?@@A?C@?RA?@IA@?A?ABAAAB@@B@ABBfA@@dEA@?@???@@AeAaAAB@H??@CvAA@?e@?BB?hFBU?}B?@??@??@????BBAAG@@???@???BBl@???@kB@@AAgAiABL@CA@cABA`J?oA@BoK@@p@n@AB????@sCB@@C?B@AA@?AA?A?@@A@@ALaJ@uA?C?B?@@??iIA@B?B@B??BBZJzP???@?ABeI?D@BA????@B@?KB@A???@?@?B}X?XAB@???@ABjE??@fA?@@Ee@E@?C?AA@BA?B???@??@@wA?@?@??A@DCA?B@BAnKxD@@@AAFBHBA@QAA?@???@@CA?~D@D?A???@?@BNC@@@???@?B?@DJBMsABA?@?@@?@L?A?@@?sAA@BBHG?@@AQ@??@A?B@?A?@@b@A@?@?@????@?A?@@V??AABBA?nD`C@??CAB?^IK@@?~B???@?@??@O}@F?B@IA@??@t@AC???@@C@@A?f@?@?@@?ABB@kAAI@|DhBA?A?@@@@?JAB??@?B@??@@?RA@?bAABA@????@??R@@E`@@BI??jBE?rXD@A?B@?@?@xFBA@@oE{@@BnAy@??@?@B@@?@AA@@??aA@???@????@@?@??_@Ag@UYBxCX@?A@??@A@MI@A@?qKfP?@@@???@???A?CB??B@~@mAA????@?@@JArHED?Cd@@?AA@@?CVCB@AC?@?@???@@??E@??@A??@@?@d@~@???@?EhGcGyA@gBMB@BF???@B??A????@ZNBwE@@?C???@@@??B?s@A|BMAS?@???yCE?@?@B????@@????A?@@?@@C@pL@@@wA?COB?mKAL@@@?C????@??f@A@@zc@@d@?C?B@A?fCP@B?H?@@???SB@??F@?B???@B?fGAB@D?@?AG?E@?@?@ABB@}H?pJkA?@@A@A?@@????w@?@@BCjEB?cK?iD?@@B@a@???ABQOAC@?A@B?sDAC@D@@?yHAA@@f@???yA?@?B]AAA??{@?@CUA@??@A@@A?AA@@L??BqA@M?MC@@AA@@@A?@BJA?@@?V?@?@A_@?ACcEBtCIR?B@jA??B?@@?@??@?@??@BAA@A@?bD??@@?CA?@??BBA@@??BjC`@E??BAB@AB@@??TA@@??A@@B@dA?@@?w@A@C@B@hAw@ABAhI??@MTA???@?@B@??MB@A?Ng@@IH[BA??@?@@AI?@@A?@BB?@??@@??@@@@A?oC@AKAnF@BsOF?A@BD@AFA@AK??@@?@@C?wBRYB@??A?@B?AA?@@@?L@???@@??@???@@B????A@@jD@?Hmi@@?@@D?_I??@?@?z@?AAAA@??BBAA|@@??hA@AB@rH????@?@@dE?FC@AA???@@?CA@@B?JF?@??@?BA@????@@@Aa@|F?@??C@A??@@?Bn@???k@CBBH@AdD?@?@@@sCA?i@@@???@???@?@BEXCAb@?MA@?NAd@@@?@@?bL?????@@B@??@??EAH@@s@?L@B@A?a@@@??A?B?@???@@AfL?@AA@???@?@??@?@A@?AO?T??ABBAB@BA??@A?A`C?AlA?B?bG@J@d@??@?@AwIAMScADU@?mKBB???@?@^???@@@AlDA@@{@Jb@@Az@???@B?@??@@??@~A@p@??bI?B@???@?B@AABABBBABBBBB@AjEBKrAC?@@??vA@?@?vd@AU@??DAw@CBAC?_H@A@H?B??@PAB`AKIbE@BcA@??A?KOMA@@BA@@ACE@t@?|HAj@eIjJ@@A?G@@O???@@DHKe@@B???ABXT|@kC????@@@?A??@@Q??AE@??D?@?@@@@@{C?@B?eN?AA@@?m@B?????@f@B@BAqBAA@@xGe@u@@gF???UU[?A@@@@I?r@@@dAe@@??lE@????@D??C?@?A?@@????@@@??@BQA???@@Cj@???hF@BM?@@???@?A??@AA?n@AmJB@B?@??@t@?A@?G@?@??NBs@EBA?@B?????@\A@yAM@?@EAB@A??{M???@?@A?@?@?@??uD@@{A@???S@@p@?Ap@C?@CA@?@A???@???@@?AeFBM@@???QjAE\?@V?@??@AyG@XuD@A^BAF??BB@bF@HqA@DA?B????@@@?A?@@lC@C?A@Gy@?F@@??@@D@AA?@?A@?@@@DVmC@QIFA@hC??@?@@DaJvDED@@?@@yHDB????@??@cEz@W@Jb@lE?@@@@BC???@F??B?@A@F?cl@?????@@BIAUD@D@DC@?@BB???????@@A@@@A@@CAA?pDvG@Q???@EA?@z@???@??????@@X@?@????@@A?@??@?@@???A@EA@@iD@@A?@?FA@@A@?@@@@?F??@j@BU@r@@~AoV?oA?eA?@@A@@lBe@vl@W|@?@BFA^?B?C@hDA@A@??AF@@??aG?@?B?FBIF@@?@@@??@BCG@@A?A@??@B@?rCM@DA?@L@?AhBABB?A?@?@??????BjD@iF?@?KDBj@@?@@???@BDA???@@@@?A}j@?@?@?A@?@A?A@A@A@@@???BB??A@DTx@EyF??@?g@@AP^@???@@@@??@A@BB??B@?jC?rAA??@?D@@@??[EBDDB@AJ?AfHv@??BBABoAABFAMQ@@??bA?@@aTi@@B_NpACCeDArBpJEBBAAvAT??GAA@@DA@B?AL??@???@@_Fv@??y@@???@UCd@d@BD?@AzA@[AA@?@@jBAC@@GA???@@?m@B?BABzCBBA{@A@@??B?ABB?mD{A??@@G?|HBC?kDR@AB?@@D?A??@?@????@@gJ?@?@?@???@?A??@?@@?B@@D@@A@AiY?I???@?@E@pA?B?????@?@@@zM?MrH@BD??@@uC@@@A?@@??oANA@?F?@?@??E@ABB@@B?@Y??@@YB??E@?AA@ACAVB@bAAaA|EAB@DKKEBA@C}EOy@Br@B@A???@@AHFB?A@@wH@@A@A?A@@NoLd@A@?@@@F?L@A@B????@B@DAB?KwAA@Bh@@@@cE?@??@?@?BAAA@YK???_N?@??@@UAE?@???n@BfAB@???@@??B?@@???A@A?ADVE@@@?@@kC@IB??PA?A@BV?BEcGm@?F@@G?@a@@???B?FB?@??@A?A@A{DA??@?AA?BBDA~K@qAC|A?@bCD@@???@?sMB?p@@??@qA@CeE?B@??A???AE@Db@uC@@tABL?A?U@YnB?@??jA@???@@@A?~V@@|D????@@?@@???BlX??@@@A???A??@A@???@Ksk@m@A?@?@?@mL?A@?EsX?@@?A@@c@?@_@nF?C@dD?A?C@?uGA@@fD?g@B?A?@@?A?MBBAAsA@?tA?HB??Ak@@A?f@A@?@@Bx@@{k@B@??RA{AA@?BBBBBBBQB???dFBBBA@@?A@A@Cz@?B@?w@A?A??A@@BA?@@cRBh@CBAA@BBAB@@^???cAAAAE~E`@B?A@vYB@DA@@?A@?ABKAB@@?hBAAjABABn@]@@?GkPB@?iFB@AIEAS?A@BAL@?@fEaA?`E@??EB`@A@n@A???|B@??C]B@@BBABB?BA@Ar@A@B??AAQBBABEa@BBBB?qBBA?C@rMAA?ASB@?G?aDgJ@BeAA?A?@@A???FwBBpA?@?CABJ?N?B?A?@A@BeEyM?B@?????@???@F?@@G@A?@@F???@@@BDA??ABD@??@BACA??BA@B??HF@@AA@@AvGHA@@KB@mCABB?A@?rCBdEBAaN@A@A_D@SnH@?@??Y?uD@@@@F@@?DOAC@?A@BABu@???ABzF?qQJ@H?@@???B@kD@@h@C@}D?a@b@BcBD?t@BAA??@ABAJBBBB???@?A@BABB_@Bq@CB?AlG@A@R??Bq@??AB?D?@?BA?SAABjB@BaB?@@@bCA@?@???cA@Y@??A@b@AA@????@@??@J@@lGt@@V?@?~@QOFbAA@@A@?BABA@@o@@T@??AEqL?Ah@BCB@?A??@?@?@BC??^?cD?@@A@@?jDE@Cr@?MCBDiGv@A@???@kA?CA@?EDDA@@??A?@??B@???@@?B?@W?BA@fBBp@?@??EaE@BPAB??^AA@H@?@jK?@??@@@H?tJlC?@A@??B@A?@@???dB??@?@@@gA?AA?@AA@@@hGnE?A?BB@@y@J??@A@?????@?@B@?fBAaAB?LA~@@@??@D?F@BB?P??@?]???@?@????@@@@@kAABA@?a@??H@?@zAYzD@A@AE@`@A@Z?BpD@A?BB?B?ABAAdY@@@BQA?CBL_GnAAE@DQF?@AAB@A@@@AO~EBAB@BB?kD@@??}@?B?BA??k@@?DD@ABB@BBA??AB@A?B_@?@BIA??@@????@@G?AAABB@@?D@C@Nn@@Qwf@R?_@@????B@@?@BA@BAB@A@BD?B@@Ep@@BA@@ACJ@A?AA@B{DBSAEyFB@@?A?@@ABAA@@???@sABA@DiF@@AA@D^?zDgIAA@B?@@??BAAEBA?@?BB@?@A??B?Y?BBBN?|AAB?AB?j@a@y@@B?|B?A@@s@A?|CBGR?@V?@@CH@oEB?A?UwC?bFBAB@??D?CBGC@?B???IB??@BAB@@AW@@??@@NAwAABBeDCGFH@BABAAAkB@ABACbGdA@??AC@A?A@@BAB@??B?B@?A@BA]@{@CH@@PA?@???lm@@BBQGDAB@L?Bt@B@xI?I?JBA@A??@nP?@A?BB?cXTgWS?b@H@AB[?FBBBBB???|F?BBBGAvA@?BADi@BBA@@????n@B?@???@@?j@ABB{D??@???An@@A??A@@?_CAB@?@??@@@@A@?A@??@@HfD?bIY@?@@@??A@??BBA?|DABB@????@E`@A@?ABBuAAA?TgG_@@V?B??AbG?AhG@@B?WlB@AC@C??BgACAB?ABA@?GA@?BB@@B?@@EA`@@?D@CB@B@@??A?@@A@AA@@aCL?~AE?AB???@BAA@GL?@@@AC??C@A@@?Byj@@jJB?QBz@TA?BA@L`G??B?CA@?oABFAB@dAAC@A?AQEA?B?A?@UT?AIcF_Fv@?EfA?BEJ@BCaBB@?@BA@?OO@?A?|IA@uGBAIJ?BGAB@rA??@@????@@BAF@A@?B@?m@@NA@A@zC??@A?BBA@BjI?A?BAtJ?B?B?@?o@@??@?@?AF?@@?aAA??@?m@@A@@AA??@?S@N?@???@~@lJrC@sA??@@?AB@@?@xDAC?@?@??@@??@?@B@@@??EBo@X?@pA@@R?@???A@@B|M@?@????}O@Du@mJ?A?@?@@B{W??]CC?@@?@?@?A?B@m@A@?kC@@?@AQBrFTA@?BDF?t@??@@@FAA@?@@GG??B@@@NDhA@A@?uC@@?C???@??A@?@@?@?????@@@O@CfI?@@AD@?P@vA??A@??U??@??SDBA@l@A?@N@A??@@?@??????@@?@xA@@@?DGyIAAB@B@HAHE@yGABG?A@lG@@{D??@@JJ?XFT@A?_G?@?@?@B?A@@AF@@??@@Az@zCBA?@@??i@BAA@?@@A@?iIAA@@?G@@??@??@@A?uBo@@yJAB???@?@?IA@@?pE?Rd@@~AAEr@@oKfIj@@@A@B@??@R@|@xXA@BF@CA@A?BBA@BA?@@DF@AAA@?C@B???qE@??C@@C???[ABB@B?B@CdA???@?@?B?A@?IA@BA?@@A?oH@A@BAAvA?@@@@b@???BBnDlA@A?CB??@??AA@c@@E@???@??@h@@oEA??BG?A@|I@??@??@??@??@?@ED?AAh@@CA??A@?AgAAM@?@???Ak@@F?eB?????CA@@A?CAA@@?mB@A@iJ?FA@@?J?B??`AG@@A@tA@QA?@@???@?@?@BE??@B??@A?@???@ACCA?uB?@?@??AB?A@k@xDtV@B@?@?@?@@AB@??BM@F?AB@B?AxD?@A?AA@?CEvD@?@A??EBAmBB?@@???@mQ@yD??@????@?@?fF??CABA@hP?A?B@???@?EB]@@BCj@C~BA@?@?@e@?@@A??@@@????nC?@??A??@@@@iGp@A@??A?LeF@@?@C@BBuN@nJABB?A?A@@ADA??_B?@@E@?hDA@@??A@@?C@AA@A???@@BA@o@BA@@Ar@SBABBC@?qE??BAE@A?@h@A?BA@?@@DB[?yB@_L@A?nA@???@b@@C?AA?@B@AQ?A@?@??@@???B@A?@?@??@?_CAO@@?bAtBD]B|X@JA@?@?@BFxIM@??IABBB?A@?A@@@@???@@A?@@D??@??R?GRGB@A@C?@??BB?ABjG??A@BA??A@???A@@??Bn@cIOB?@@Ag@?@?A@@N??d@@@^???BB?jC@??@@?@A??@?@?@@?P?@{A?????@@gA???@@?????@??@?@Ag@???@@@?@N??A@@@DO@@[tA@BA?@AEB@@@?T?H@v@?eA@@A?A?@AL@@@?A@?@ABB@BIoA?A@????@@@A@AB?g@A?????@A?@??@A??@A@???@R???mFA@@]Iy@C@@tGtN@@AG?A?@@@A@FBB?t@AA@@iAEaArFA@@?A@BDA@@?x@jB@uJ?@O???@????@?@?jACAABBB@?ALyH@@hAABF_@??@??B@DD?@??@?sQ??@@B@?A?@?@?@Ej@??A@?@@@[ODA?@@????_@@fAR|@B@h@CvJEAB?D?A?iBgHB?BA@P?@@?BBoAIBhB[DB?C@??A@pA@B????@??@@A?@?A@A??@w@A?p@ABkD?E@?@t@X??U??A?@@??@@@@?@lD??ge@@?gEA@@cD??@@?[A@?B??@EAI@??@@?A?@??????@@?B?A@AE@AB@?@?@A@@AWGaAbI???@?@??@sj@DD@@???@uHCT?@`B?@??@~@?@?EgWFY?@???E`@B??@??@?@?A@???@?@@@?@rB???@A]A?@?@A@?@??@@?d@AEL@@??@@?A?@~@?????@@?U@A?B@?D?@@zGfNuBU??A@?@ADaA@D@A??BJABLE@e@?B@?[N?@@`A?A?@?@I_FK@A@@?A??AS?}CA@q@??@@?@A]?@?AAC@D@@B?C??@??BBBB???mG@@A??@??@@XB?AABBi@uC?@B??A@AIB?@MAuB@tAAoB@B?uG??@@sJdH@D??A?@DW}GBQ@oBA?@??@@?A?B?gBgAPAAzB@@XK?@A@?B?@B??AB????B@A???IiB@Ma@??A@?d@J?BBRA@eBA?AABB@?lA@?@EPd@N?d@@?[AAH?@@?AmD~@A?B@?ApABAC?AA@@@@A?mB?ABADGB@BE?A`EJCBA?AB?BAeMBOAkKAN@sAEbC@??B@?AAA?@k@A[?@@vB??B@pA?@q@??@M@???@?@@?v@BBAA@AAZB@B???@@?@????@B@H?AnJaBBI@??A@?ADB@A@??A@??@??@qAV?O??@uB@BEBZAkB@BAW?B?AC?@B????ABB@@A??@Q@@?AB@A?E@nG?A@??@?B??AJu@X?B@???@?j@@B@EaL@~HDA@A@k@@@A@Q@A???BxHP{YBAwD?F?@?B?xFA@BX??y@p@?@YAgBB_L@G?jF?@B?A??@@R?VBA@@?~E?BA@@@sl@???B@?@??@B@BA@?@cB??I@gBg@?rBR@??@B?AnCUJ~@A?@??@BzIv@?A@@?{CA@AB@AEA@??@B@?c@wX?@CA@@GA??@@m@@zBA@ECBA?B@@A@@@AK}YA@??@?A@BLA@KAB?S@@?A@D?@?@?AB?C?@?@@??@A?L@A@R@QL@B??EvABpF?@@??@?@???E@`@AB?@?????BBAA?@?j@A@_R?[A@CB^QA@B??_CA@@?@@A?@?AB??d@@?B@oHB@u@u@AAI?A~HEA?@???@BACBu@AAB?BB@CDA??@???@@oCg@jBIBA?@?@?D?cj@@@yCAB?C?????rE@@A?TO@zACABfFA?@@fG?A@kB?@@?}A??@G}A_BABEcGA@???@?@???KMdE?@??@@AB?@?IA@B@BAAABBB@A?nA@???@?@E?`@A?@B?uB??BBpF?C?aA??@|B?AEBA|DB@@@A@W@@AW@M@wAAQ~QB?EA@C@B?A?V@??B@A?A@AB@?A?A?A??@?@?@v@??BWj@I@ACBAS@B?BAAJ??@AAAI?ABB?A?ClA~@@R???@@~F@_E@r@@?@??@???@?EBAA@A@??@@@WJ_D??@@BdEgF??IAA@@???M@?y@IB????@@yM?D@@?KGA@@jN?C@@@AA@????@sQ?@@?BBA?ABnMPzICBBANAkAA@I@@v@?AAdA?ABBC?~M@?@KJ??@A@?@??A?@@?BA@@BEBkQ?}@nC@A@AB@A???BBBLBBgGAAF@@DFB?SB?u@}ABAiAG@K@AABsCA@@A_CAB@?A@@?_QAA@BBBnJ@@@C?A@@PD@?@@Bp@@BA?TB@@B@BBA@EsBBEAlA@Ec@BBABpJBEBKA@?B?A@@CWNpE?A?AB@@|@AaC?A@A?CO@@hLr@S?BB@A@BB@AAB???C@@B??A?DA?B@A?AAA@@?D?@B{BA@}E???A@A?}EAABB@kB???@A@CP@@DC@@??@BfEF@B?e@B@AD?E?O@@???@@MBB@?A@?@BA@BA?B@?C?B@bA?O@@@?@QB??M@@bF?u@??@@@GBA@@?A?C@C?A?@??@?@AA@@??@vC?@@A@EA???A?@AA???A@F@?AB??@B?MXB@?A@BVMg@@}B@????@?@?@BA@?~CA@A@@?\A@BB@@?yD@`X?@A?BBA_CFB@@fAb@vi@BB?Wa@B??AwE@LAACG@~@A?hAABBBmH`A@Bh@C@zEAgAB@@?eHB@????A?@??@@@??@A?A@AEA@?B?B@}DRAG@@????@?WAB@?@DA?@?A?di@LB?AFj@?P?B??@???@@@}M?@@?@??@g@@?A@@?AA@@AD?@?J@?BEwD@@??B@CjLA@?oL@A?@A??@@A????@@@B@N??@@?ABA?wI@???SA@@JA@BmAABF@?@x@??@@DTCA@EwHjIC@?bD@[pCy@?@dDBAuBP??C@?D??@BA??@@A?@@????@?@??A@@?A??@X?hA@U??@AB@@?BA?gA@k@?Y@?@D??@ABA?????@BA?@A??@A@?@AB@?A@@?bC@AAUE`@???BBsCxFA@ABQcD[]@@hCA@CCmGBA?a@@PB??@@mBABxIN@eHB@@??kNAAA?A??@?BZ???@@BBS@@BCJ@?@A@??o@?@?@@@??@CA@@H???@@A@@VmB??B@KN@@?AAxGN}G?AASBAED@@@FAhD?@Bn@@BBQCAAA?@@RJ?B@?A@B`J??G@BA?B@V@LH@A@AB@?jQ@BA@cAc@?~AgEbA@@Cw@wBBE`@Bu@??AC_@@IeY@EC@?@mEO??@??@@??AC@jBAB@@?A@???@?AE`@ABB|BbC??@B??B@??@??@DH@BCDD@@@@@dADp@@AA@A@???oAAC@IA?A?BC@???AAEBVBBfApC?B?@x@pBHAdIy@FgFxH@DB@g@`@hJ?BuJ?`ZfD?@A??A\TzR@BfDAI@?AB?B@?CjAB@MABA?CdC@Q?A@BBA?BAsA@B?@?@?D@@?A?AA?@@??@@??@@???@?@?A@B??aCc@?B|B@A?{JB@D@jK@?A@BsH@BAAB`@_@????yR@@gA?A@@??JaOvH@A@B?IC@AFJBB?M@wA?GABA@B@?AA@q@A?A@@????rK@@A???BABgE@???@?A?sA@@???A?@@?@@nX?dD?@??@??B^dHBABB@C`AA@??hJ??@AB~@AcXBPBAE@???B@jFA?@HNfJBm@?iCl@?A?@@s@@@@???@Ej@~D@nJ@AB?ABs@?CA@??C@MA??@?@@A?@A??@Eq@?@B?BBAoAGAUC@B?BA@@B?J?aA|DhXe@SfE@|DBbCAn@BBFwAh@dC@?A?@@?@@?A@??AEA?@??@?@@?w@?@B?CA?@????B@?CAF?@??gC@?@?CBB??AB@AY~BA@@A@B?\?C@??@A??@A@D?BBBmD?]A@@@@?@?oA?@??BA??m@@@@A?@h@uA@BmE?A?@?cW~RKBABA@???ABB?E@q@@@AA@hDuG@A@@lA?ABAA?B@???BB@@?AaFBBDAN@???@A?HBAG@G@gI?@@cJ???BAAJB@@??@??@@nAA@B???An@@jEW@BAOBBABBQKA@?LkXBC@????@@??@hI???@B@A?B@C??G}C@xB?RaF@?AA@@F?EGA@?@??@@AB?xWI@@@F@@????B?B@@???????@??AB??A@@L??@@BaCa@@?BiAA?@@???ABP?????@@@@HIAjA@?@BA@?`A?@?BBk@BG?ABjH??@?@BC???@dJ??@@??@???@GIA@gG@@AF@??@@yAcA@oB?@?AlA???@???@@?@AbD??@??@??o@@@????@?@ZA?@?@?@??@aE?@rBs@???@?@????@@?@@????@@??B?A@?@???@B??a@??@?@???A?@?@rY?v@B?A?@?@?BA@?@??AA@A@???BAB???@?@@BHBZF@?{DaF@??@B@?A?G@@??BcA@AB@@I?@~A@@xGA?hB??@?@E@?Y?@@B@w@D?@@rE?~IB~B@@???@@KG??@@C@??\?@K@AfY?\@@tCA?@CEA?_O@@???@?U@???@?@???????A????eBA@@?@@?@@?r@?@????@@??LdAi@?@??@?@@DmD@@??@?@xF@@???B@Aue@@ABA@?_JA?@@????@@@?TAM?[@m@A?AOA@?b@@@A@i@@G?A@@????B@lBA@HHA@C@@?CA?@A?@cYfBA@?D?@BlA???@@@??@?@??@cA@?@?@B`k@?@@??@@?A??@@YhFG@?A?@?A?B@?@@@H??@?@K@?tK?@???@?@?@@Ab@?@@@AeAzX?@Eio@jWA?AA@@??ABoLf@A?@?@@C@???@BnU?A?@?AY@???@?@O@@A?@?@?CA@????BA???FAA@?x@CiIt@A??@@HHgG@@??}ABv@@A?@?AAAC`@@@@?@B???B@AA@A??GII~D???@@wAYI@@??AFCBABBBA??@?@C?[qBA@sEA@BBn@@AlAI@@??@cH??A?B?A}l@AsM?@@@?@?|@?@@?@@A??@?B?AA@?@@@????@BAA?EyCAA?@?@@AwD?@A@?@@?zC?@???~B@A@?@r@C@@??@@AGB?B@D?UA@a@N@???B??@A@A@B@A~D@@?@@EV@?@??@U?LlEc@@??@@@`A??A@?@A??@?P@???T?@?B?AlB?B??@?B@zDB@@AA@@A?A@@|@iG??pB?@??BlR??BAA?@??@@@zFcN??@BAdRBAj@@?A?@??@???@@@????@@A???B?@@A{@@??@?C@?CxA@A{@W?mD@@@?B??@oK@?A?@B?z@?@?D?CB?@DkB@?@?A@`CB??@As@hJ@@??@???@@@w@Ar@N@@pJ@???@FBA?A@R@A?@DAN?@??Q@??@?DA???@?@BAiG@?@?@wKATgH@??@@fA?qZA@??@@@???@?BkD@@@@yNAlBE@AB@mDBB@D@??aGhG?eHH@Bu@@?@pBA@?V?@?@?@@BA?@???BBAdF@??@???@wBBI?AABd@AA??rA@@?@@eFA?c@?R??@EuHA?`HE@fHA@@???@@kA??eG@BAAAB@A?A@A?A??@?@A?Lh@C@BAA@??A@???@BA?AB|R?{@?@G??F@@?C??@?@???@@?A@@J??Ah@B????@@l@?@AG@A@??A@@@A?@?jIA?B@@~IA@CB?A?hF@@A@BAQAA@@_@?eC??@pAB`E@@r@Fx@EV@F?@?@??B?ZA@AjB@@?dN@K_NLgBBA@B}@rB?@BA??B@IQ?G?AAAA@_HA??@A@n@?gB@?FAyEB@B@B?@@?@??@B@?@???@??@?@@SLVB@?A??@A??B?oC@@GFC??lAlJBAa@?@??@E@A@k@AEyMA@????@@PDB?@?AUv@?@zD?AAA?wA@A@?@??B@?@?@?gIpBD@_@@?AA?BbIBAh@@@?A@@jA@@AM?@A??@@A?@??@@B@@W?@?@_@A?@@?A?@@?A@@HxEBE??C|H@eA@??@@AQBFAB??@?@??A?@DA^RBN@@???@?IA?@kI??H@@@@nN?A?@A@?@A@??EA???@@?@???B@?AB@@sB?`A?XB???@??@@A??@@A?AQ@D??B@@AAAB@}@@vP_C?`K{ABABA?@?@@?p@xDn@B?MkAB?JA?Bs@BA@ABBCA?DBBO?AA@L@@@A?^@lMAnA@?@Ah@@?A?@@????@r@?@@hHxAgD?qB@^qEH?BSBIiB@oKBw@?mCA@A?@@?BB?@???BB?cB@?@@AVA?B@?uA@A@?@D^@???~G?@??A@BAJB?G?a@?A@g@LH@EA????@@??B?A@@A?K?@??@?@B??FO@??@@??@A@???@@@????@???@???@B??L`AAKg@?B?ARlCqC?B]AK@IwB?@?A@??tB@@AB@A@@??@BLaE?lA@BA@@A?@@FhEaL??AABB????pBBCFtA@?@@BB?A@@cE@??@@r@oC?@???@??@???@@BAGAF??????@@?@c@jA??@@Ak@uI@CvA@BAA@jF@?IeA@?rA@?@qFA?AAAB?vp@?HABEBD@hAFtCGB_@?BB`BBECa@@AA@AAABBu@ABBBA?BBAA~CBBBAB@L@|C?A@@????H???@@D?A??B@v@?AH@?`G?oE@vD??@??A@qQ@?BB@RBxADAB@AA?A?BBBAAKECABB@B?hJAB@?CC?UBA?BAE@bF??AB@BBDN?B@{@???BBXABBMGHC@AvXBA?@kAB@?A@????A@?@??@SYAA_@BA?B~@AiHA@???B@J??@@@BEz@@?@??@???@A???@?@?A?A@@@?@@???f@B@DYBBiG@?B???xF??B?@R???C@E@DV?eA??@@?B@?GG?B@vP@rJ@@?{@lD?@BA?uC???@?@@??@?AI@?@@@fB???B?ANA@?@aB@?A?yL@`HAHf@B??@@?AEZM@??@lA??@@A@?@???SEA??@@nA@?eIBS@?@@ADeXzA??@@?@??@VjB?@B@Mc@@@??@@jADH?@?A@Bu@wDBE@dRy@~D@AhC@E}@@?@??@C?A@??@@AAB@^?@Y@??B??T_IA{G@?A@A@@?@??@???@@?@jD@?A@t@?@??BE?sH@?AR@CA@??@??@?@A@@rL?A?@Bj@@@A??BgC?J@B@[@@@???@@??@?CB@??@?B?B@?AyJqM?@A@[@@cN??@??@@????cBA?A@?@???@?@??@@@?@?@DBeYB@CA??ABAA@?]???@@???@@AGS????@@EA@A?@@@ANJ?kCBBK?mEG????@@?B????A@@?????@??@@@A@?@@?~F@B`A@_EB@@r@M@GAB??@????@@?y@??@??@?EF?A@@??@@@NDe@d@@??@??@@AB@DAoAXB@@?BAbA@@sLDBC~G@??B@oA?A??@@??????@|@?F^l@|CB@?sC?@@A??A????Bt@@@?ABO???@?AaB@?~BB?dA@?@?@?xHbB???@@AB@g@H??@B?RuH?B@?pD@?|CA?@DvAA@}AA@@@f@A@aQ?@?AI@`E@D?A?@J?@?@@??eAA@?@D?@A@?@?@AA?@A??@@]AiAABBB@A@@@NMC?@??qRfGA@@A@@@???@?@?@A?@??@@@EA@@???@?@?@@A?QB@A@@?GPFqN@@?A???@@B@eHA?@@?????@@??@EA?@ALkB?BB@?{AMpFA??@??A@_@?BC@?@ABBAA@@f@I?hD???@??@??c@I@@vA??J??bB@zFyCsJ??@?@?@?@BB???@@????BaACC@??BAA@?@?AqEBF?AG?AA@?D@?@A?@???@@@?D?M@BA??N@@?@??K@?@@@@??@???@@A@B?KDn@@e@@?{C?BaC?@@?@@wF?u@?@QA???@?@BE^B????b@B@kD?@A@j@@@O~@bC?@?@??@?@SJAA?B@FCBcAdJ@VD@@???A@?P@@D@AC@A??|C@??@AAB@??rD@@??D@BA?@??@?@???@V_@CZDAdI@@p@@@JJlC?@A@@???@@?@@A???@??F@@A@@??@??@?M?@`B@?A??@@A??@?@?????@?@@??BA?B@ASnBAA@???@?@W_ChC@???@NA@@@?N@?@lE?BaC?B?B@VAA@@??A???@?@???@B@?FH?@@???B??ABgAA|A@@@??B?A??@@AAE??HA@@c@el@?@@?AAkC???@BBA`A?B?BA@??@kD@???@@BG@@J?UH]CA???@?@BA@@??@?@????IAAAB@@}B??@?@@?~EEm@CAA@@X@@A@?@??cLBG?wV?@D|C@?@@@AK@?@??T?g@lG~BdCB??@@lR@A??@F?BA@@?A?J@?A@A?BAIBABxC@?F?@?@@@???iApB?ABA@z@BA?Q@EA@?{JzBBBH@A@@@?A@E`@????@B?W??@qCK`DbA@yV?@A@dI_@fS?A[E@DA@?@?@?A??BA@@@@@BB?AA?B@?@jFTD@????@nA@J?wMA?G@A?@@CB?gB@?@?????@@@?H?A@??~@G@B}Hpm@QkA@??@?@?@FA@@???BrF@?@?@C?tG@@@v@a@cQbAHF@@uDA@??A@@?A@B?????B??A@@I@B??IA@?JlCBt@?@@AA@?@A?@@???????@@@GBdA?aAKK^A@@?A@??@XB?b@?@D?B?B@?@@???@@?YA?@@?yHBAB?`E?@eD@?nBz@AC?@@A@B?BBaA@o@N?@@?B@@EALgQAB@B????BnBjFAzA@??@ByF?K@???A@@??B?@???BtG@??A@BA?A?k@]A@@sH?@A@Cc@tBAEABB?BBWAAmB@IAABxH@AoABBB@D@@A?@\@BBbJFA@BwG?e@tC@A@BAPBB@S@lABA@B@BQABEb@ABBB}@A?cD@@???BA@?@HBB@kJcFA@BABAjG@XAA@@?AA?AACBACB@??D?~QAAAB@?AN?SSA?@?BEA??BFAAEe@Aa@@B@AB????@h@@@AJ@@@_AcI?@UD{G?B@CtB@EBdEB?oDBB@lAAO???@yG^A@@`Ap@???@?BA?@@?v@?@BAA????B?@???vJ@?@BL??d@@@@?L?@uLu@gH}MF?@??D@@?@@??@I??ABSB?ABDA@A?B]AC@A?UC@@@R^???@@??@@?lD@??B@BAC~D@@??B?@A?@??A?@ABDB?AA?@@?ECA@w@A?@????@BAAA?@??@@sAfJ@?@??A??@@AfBBB@???@?B?~@@A@??gD@?@??SyED??O?HA~D{p@K@@V@@Az@@?eArYNA@@AY@????wYBAFA?@A@@bEA@D?@??@?E?AMwI@D[BB??@BcRADA??F??@BA@AA@?oB@BrJ?K@@A@dD???@dA@@???@?@@P?@AP@????@@@bO?G?@??@B@A??A@B?@{QI@@?@@@p@[pC|C???@?@????@@??@@aAAaABAd@A]E@A`@@N@[eB?ABBAA?AB???@BuB@EA`@AB@Qo@@WI@@AB??@?@@B@@???@?@@????@BA@@A???BA@AB@@NWtAqKBBCWGZe@B@HD?@X@w@mD@?fAKA????@@@kK?@@??Bh@@dCUB?A?@BE?A???@@BC?@@BD???@@@????@??L@@?QAAl@BBkEA?BBA??@GA?B@pADS@?}CA@M@?@??@A?@?B@???@?@?AGABB@?@AA@B?A???@Bw@@BA?@?????@??o@nC??@@?rAd@GBAAB@CBAH?B@wAA@L@A?B@M?H@@A?H?@?@?ABA@B?A??B@???????@YvE@?@@@A{FB?A@BAC?@@AA?@????@@|A???@B??BA@@????@@?@?@@Ps@??]??@?dGB~MB?@?@A?@@B?f@??@@???E_@sXDAT@BAA@A??aAD@B??AA??@?FA@@}DT@@gFAF@?B???@?@?C?@??@@V?L@BABt@CzABA@@???r@@@D@@OAB@???@@sLDzE@?@?@EA@@C@h@CsD??@?@?B@@B????@@?A@@?@B|D??A?@@??A?@A^@@@AuB@@F{JDA@A?A@A@???@@D?@@??CCeKAeK_CGXB?xA?CABBA??O@@L@??@@@A?Bv@??@@@?C??^bAcET@@iD?@@?@???@A@?@@xBA???@?BK@???F@A@@?AB?B?A@@N?@@????@???@@k@A@@A?@@~p@zA~AjD?GB@YA@h@AT@@B??B@?A@@AHu@?ANB@nG?A@@F?G@?@Be@?@BA???AB@??AB@AE@EkJj@????@@@@NDABuO@@?@@?iB?A@dYJ@??@@?bAAE@??BA@i@@XA?@@EA@@?H?C?@?{A@@???@?@@EQhF@@AFB@Nd@H@bB?@Z@@???@?EA@B@@A?@@A@????B??l@C?@@?@????@?@?@???tB@DB@@@KJA@z@B?m@@AAB?AA??@@@?????@@A@@??@??@??A@EABXeFCyAMFA@P?A?@BKA@BAhB@@BABASBIcJ{MAH@@kL@@?@dG?B@?F@H?[ABCAB?A?@A@?bFAA?@???@B@bEA@z@??@??C?Ak@@_CV@dF`B@?AAB@?vFA@@A?vCd@H@wA~Ap@lCKJ@BAA@@@BA?@@Q????@BaB??AA|H@?B@B?zG?@W~R@@??{C?B???@@pBD??`FBA?zJ@pM@@Ao@B@hBABAUT@~H@?BBAMlM?@@?BCkNB??@??KqE@???@?@???@??@??@?@@??@??@@?@@pE?A?@?@vYA@@@BDPyF@@@@AbNqBC@I?A@@EA??A???@DpM?]B?ABAE@AY?B@?@??mMrABG@AAA@A@RvAA?@ED?A@mEBA?@?@???BCB@@ATH@?@@?KzCqEARoA@@AAAfD@@V??@@jDnER?@lG|A?R?@?@BA??B?@???cF@@@vJ?D@EAA?A@??AY@@?\??B@oDmJ@@@jZ?@?@??|A@@AN????{@?@A@@BAABBnAs@BVQ?@BrA@yBG?aI@?UO?HUBo@??E@?D@@}A??R@???@@A{@A@@vDrAA@A?@D@@W??@@V_BA@@???@@B??oA_@@A@?A@?ABA?@@AAhD?s@gRA?ABBA?_G@??@xE?@?BA@???A@@?BA@xAABBkF??cAcA@B?AB@AA@@ElB?@BnDL@?\?xFA@@j@@nG@?@b@A?@~I???@BB@@?@B??ABrE???@@?Jd@@?B?@B@B??AIBD?Wh@gAB?AdC@?iAAhA?@mE@A@@?@?zA@?wEB?BBeHBx@A@AABBABBBBB@]?A@ABBB@B?ACB?ABBB@?J?B|@CASB`GnHm@CtR?@d@AAB?FA@WqCB?AABBAB@AA?GB@?n@@@?AdF?@AABBBqA?Cd@O@@????ABAC???A?BA?@??BA?AA@@EmAg@TABBJ??i@ABABE@?f@@@AeG_D@?WA@UbF@GAA?B?BABB??A@@BA@X@ADBAAA@BAA@h@@AmDIB@B???{A@LjI@?AG?@B?AA?BBBB@@B@kUAA@?X@A?@@AA@????@Bf@?@BAAA@@?NAB@oA?dC@@?@@tf@A?tQ??@?\@???@bB???@do@@L@?A?@D??GcI@g@C@B|@AU?@?????Ac@B?AABABAABCjHqA?@@oBAJAAA@@?fJB???ABB?AB?AB@?zB?bEk@AAAB]uHI?@wWKCB@V@lF@?@@??e@BBBB@?Br@I_D@BA?B@B?dA?C@BBAA?B?A@A??w@AA@@?lAA?BB?IBAA@A@BG?A?@AD@@?D?jFBA@BBDA?sA@AjC?BANB?L@HA??@pABA?BB?A?@??@@?B?@???A@@?S@?J@???@@@}@?BBBBBAABBBVpDB@A|DA???@?EA@@??RKzA?@?AB@?A?@@?qR?@?jA???B??E`@AbAAEq@An@?@A@B?@?@??@B@nQ?AB@D@?@@??G????@@?@@B??Y@@yG@BD????BIBB@C?M?@@?@@?@@@???@?@@???????@iA@AA@@??@B?A?@?X?@?@@mB@?B???@?AA?@tAA_J?@??@T??@?B@rN_L@k@h@@A?@?@?????@@@?A?@@A?RB?f@?A??@?@@?dA??@@A@@???@?A@?@|H?{D@@N}I~MJB@??@@AK|@@A?@rC@fE?ACAPvLA@@????B@?hIA@?A@BdANgD_I@BJlD??@????@??@??@@A|@???H@@?EC?@@A\B@B@?@???BBA_@A?B?eAHz@`@EA`GA@@?A?@???@?@@B????@?AB@?@??@aA@?iE@?@@BBAA?@xAeH?@???B@MK@?@?A{@@?LB@?fBK?@B~C?d@@BGRB@D?A@@?H??A@@??zE?BR?_O@E`@A??BEC?B}NA@@eG@???@OA?@???@?ABBBB@AD@BB}@@Zy@@A@@uW?BsVB?ABA@EA@B[tGA?A@@lC??I?????@?@E@A??@?@?Bx@B?R?CfR@@xJ??BB??????@?AA@C]?A?i@B@@AA@?BA?i@j@?@?@??@??~@@@@A@@@A?@?@??nEbJ?@@?]@?@?@BAA?@??@@j@@@_A@dA?@@}@@??@@???A?@@??@?@@|DAAmAA@???@L@@???@@???A@AkH?S@@@?kA??aA@?A??@?BBBA???@?@@A??@?@_@?@?@B??@?dGC?b@_DABc@e@?@wFsC??@@???@[?@zP?@h@?ABABB@t@j@?BBeF@wCwB???@?@??????@@?@AJW@WIL?BP?B??@?F@?@?@@??@BA@????A@@??@AA@@??AB?@??Bb@???@AAeD@@G?IpN@]R????AB@EAE?j@@@A@BFyN??@@w@AB??@?@K????@?IA?B\@??@?@?@@s@A?@@Q?@@LABCBAk@wF?s@U@A?mB{C?@Nu@A@@??@V??@zG@??@@EDcGAB????HpA????@@@A@QA@@?@?@?@?@?@?B@??@?@?@?@@@????BcF??@@?A??~Ah@@BA@w@?????aF@@_@zGAA@^B??@?@@@ShHBWl@AA@@rA???????B@???@B@??PBH?TT@@YA?@?@?@?B@C?@vCAT?XAUA@C??@@@qCDjCAEBA@???@@?A@?@J????@Et@A??@??LArD@YJBA?A??@@@A@BC???@@?D@A@?{C?y@d@|C@C@@@hBhH@@V?@?BAA@@A?@iB???@?@?@A?@{M???@??A@D@?@@xBAB?AA?kGA@???@@@?BA@???@BAnB@@?E@sC@@?A?A@@?@U{GvA@@AY@??@BWAyKI??S@???@??G?@??@?A@?@@@Q???@bB??@@B???@?@@kJ?@BA??@??MG@??@?BCnJA@??zD@?@???@?@??@?@@R?wD@??@???@@@A?B{GeF?@@????|R@??@@oAB@?NaInKA?@?@qA@????@?@??B@@A?????@B@A?@@?A@@A???@AD@@A@C?F@??@?OA@B@BBAAwG{A@???BlA????@?@?@?@A?E@J??@@B@?@??@??@??_@BiDZ?A?@?@k@@@@A@A??@_BF?ABAA@@AA@?@kG@bJ?ByFLP@???@?AABAAAtDAd@?@@AOBB??A@?E@rCU@A_A@???GBC@????@BC@E?@BQYASBA?@@A???@f@A@@?r@?@?B@?F?AA@AQ@?@?AA?@dj@A@fHB|M?@???BKWJ?@????@B?A@@A??@@H[??@@{@???@@KA??@@?@@??A?@@A?fB_A@@mG@BIAB@RA@@A@A@BlSBAAB@????@A?A@@????@@@?jA}D@?@?@?@??@@A??@??@?B??@?BuW??@@?D{B?@@A@_RAB@@@@AkI?FA@@?EBhDA?@?A@?BoJ????@@A??@?@@?BrI@JBRAA@@?B?A??fE??[@tC@@A@A@???@????@@@@??AB@AA?BCA@@@A?@@???@?@B@???@@yDDB@F?B@@A`L@BjK@BAqRgEA???@??@@@????B??@AAIAA?O?@@A@A?@@sH???B?@AuG@?QF?U??{CM@@??@@???????@?????A@@?SA?@AAA`RFA@???@?BBAA@AAA?C@kEA??A??@??@?@oD@@@@MNE@xB@??@@@AA?@@???n@@HL@@Z@@cEB@?OHIA?@@??xHjCB????@????????AB?A??@??AA@?@@@D_A?@@?@P??@@|D???UEY@P@@oJ@@AjA]@@@A??@BAF?EA@?A@{D?k@@?@??KqI@N@A??@@????@?A@@@kBNN?mH@?@???@@????@???@@p@Aoi@hClDA?@@^?BB@DA?@s@@GTGA@BiGzGGlLA@??@@??@??BA@A@?gBuCAA_@?e@@??@A@AAmf@B}@@@@?A@?AU????@Cz@@?@UC\AARUF@bQ?@@?A?zHA@?@?@?@C@@AByB?@kG?@A@ATsDG@?@@D@@?@??A@@?@????@???@@A@@??@OAA@??@@??@@???@?@?@?cA???@B@A?B@Bh@cG@@?mBB?@?A?@@cAwX@AAA@@A???@???@BCA??@?@??A?@?@?@?@???@?@?@@BAs@?@@??@@??@@AA?@?gA{@NBrAA@@EEuAC@?@?D_F?@@??@B@AhI?T@@AGA@??@?@|@@??@F|@?CfAn@@A?@@?ABA@A@?@@BwJIH?^??@?@@@mDoE@?@@B??em@HdCA@???@@DxBDe@?@?@??@??@@oA???@AAH@@??_C@@DAQVh@@@@@?A?@?@???k@@@lF???@_@@A?@@Ev@IBE??H?AA?@B???@BA@P???@?@Y?@G?@@?EqJ@@i@cD@@?@A??AA@@A?@@?@@????@@???@@??@@@AB@|G?@@@IAoCAkB?zB???@@AvAGgB@aAeSB_@@BIbE??@@@aZx@?PA@@?Q?@?@Bm@@???@C????@@A@?@??@?ABm@@?pC@?AA@A?@??AEF?RIA@?@A?B@TdFA@wK}@?@?@@@??AB@GA@oYD|@UB?L??BA@A@g@T@A@CA?vIAyA@?EBsHBtA@sAE`BS@A@@k@??_I_@?A?O@@B?A?A?G?@@@AAhJ@VF_@mB???B@@?A?BAeF@?@`O??@???@{I@@oNpEG???@@H`AlNhB@B?A?@@@@A??@@\??????@@?B@?A@BA@@???@@????@@??Yy@BA?D@??@mGBnJBA??GBK@Y?@BGeACByIjI@?ZA@A?F@?@D?L@@@@o@?G@AB?ACBA@?R@AAA@@?????@A?B@@?k@@A@?EA?@?B@e@??M@@?bAThIpNA@@@ABrA@???@?BAA?r@@?M??@BxBjFA????@@@?J?@c@@?A@@?@?RA@?t@@??B@AP~N@@WAA???@@}N@A??@@pQI@@???d@B?A?@??A@@?p@A@A@BA?tKEs@?AC@?AC@C@BcD?EH??@?@@@?J??yA?OB@??@??@B@S@BRA@??A@@?A?AB@???@?EzH@@?Y?AU@???L@@?A?A@@tF???A??@BA??????@@`O?U@iHhH??@??@@?@?[?@@AkAB?K?A?@?A@@???~E@ECEAB?jHB???@?}A@????@B?@@DXA??dA?@E{@A?@????PBM?@??BBA?@??@A@?@??@?zH?@@[eS@n@A?@jG?fI??EA??@@@@???to@J?B?@@A?AA?B@??@?@??B??yA@AbA@?@@AP?AA@BA?@@DF@@xE??BWBA??BiAN@?@@??@@A???BB@@FnGA@?B@A???@UD@D?U?@?@BfA?AAA@AfAN??????@@@@????@?@??@??_G??@@?BHBdAA?@@@?????@BWB?F?@@?iDCA?@@??@??@@??lJ@@AJV?@@r@??@?????@A?@@??BA@?A@aAA???~A@?D?@Q@@A?@AkAA@@@@??AB@A?E@???@@A?KRaA?D@`G?@?@@v@?@?@?@@@@?AL@?@NAhB?BjEA@@@@aSAGGCBA?@@BEYABBDF?E_@?FA@@A??cHA@@@B?A?{A@@^?????U@?A?BiB?A@@???@cA@C?kE?@@????@???@?@??@?@??@BA@@???@@?A@???@??@cArCA??@@???@?@???@@??@@JAJ@}@S@B???@BBGH??BA]J@@?Y@??@BBfg@Au@?@?A?@GDAB?@???@?aBc@zA@D@mL??B????@IA@?~@?@lEAA@@???@@?@@ABnE?@?@?@??B?e@@@????@EBAf@@@@@@AgBAzAA???@?@wRvq@ABB@D@@BAj@@?N?A@???BAB?@@j@@@??BB@BA?@@??@@l@G?BA@?A@G?@??@@@??AeIbBdB@kDA@A?@??@?ABqJf@XABBhEKtZF@_@?\A?@k@@B}@F@A@B@?@??@??@@kAAUEA?@D@?Ax@?@?@A@eX@??@BC@?@B@??}D@B?AM@@??tB?@@?@@??ABB?uC??A@@?B@???FBEA@@A??@@??YBBC@?@qAsL??M@@`C?@{J?A@@BpJ???@@???@?@?BBf@A@@?A?B?@Y@eK??_@?^?@?cJA?@?@??@@?sE@@@A@@@g@?A?@EkC?AD@@ACCClNqKrMqKuIE@K@@@an@?nL@@??_@CCt@[@?B?ABAg@?ANB@????@@?F@@KqL?@B??AA?AC@@A?@@@A?@@??@@GA??@???sAEA@@???@@AB?@??@@D???BB?H??@??AqCMA@@?_CA?@BYjE@???????@@RFAF?BrBRAUc[CHB@?A?@?@ACBr@@BVr@ME@ApA?B?@??@AB@@A@@????E@?Qb@???@B@AFu@?IFA?BB@}EdD@@??B??A}K@?FA@BBpFW?@@???@R?F@?}@T]GAtCY??@AB@A??@@@pCu@@BM?D@???@A@V@E?jE?@@AB@{A@?A??@@??A?@@@@vL]ABBA@@AO@BA?cA@LAiL?@B??A@@pC???y@?@@?@wG?@ArI?@@@???B??@?@E`@A?@BjD?uEzFzB@A@gA?A@BpHGOJTy@@A?B?@?@@?D@@?aLA^@?@?@??@Dz@??@@@Atj@o@?@??EBP@pBD|@A@???@?@??@AJ?@@?~@@@??@???@?AO?@?@BA??@B?HMI@@?^??@A@?@??@@A???@NV?@????@@@z@cFC?@C???@????BB@r@C@@}@?@AF?@@A????@?A@?Z@?@?@@A??@??@BB@C@???@??@AlE@?@@???@?@??@@_C?@??h@?@?@?@jCwI??B?E@L@_FB?tF@@??A@@?FA?BB??Acq@@?@P?@?@@?@A@@AB@??@_A@@?AA@B@BAuLLHBA?@?@@aB{@p@?A@@yE?A?@@?iH??@???@?@??@@@?A??@???@@@?B?@@OA@???AB@??A?@@???I@??A@??@@D@??AB_A?B?@?B?@?@B?A@@??@A??@@`O^@G???@@vJ????@??j@@@?@q@F@?A?@A??@?@?AB?uMA|p@@wFP@j[]???@????@DC?k@@@B?[A@@AGBm@??@C@@???@?aCCfA@??BBA?P??@?@?B@A???@BB?A@BA~@I@AA@@O??L@??@?@???@?@A@??@@??Aj@@A@?@??pA??iAB@?@@@gFjC?@A@iA@BHAxD@@ck@ODB@vI???@iA@??@cA@??V@Ay@@????@???JkG??@?@BmCcH@????@@|C??n@@@BDA@@??CBEsL?@?@??@??@AEA@ABw@?eBQV@?BA@~Ef@A@qA?dAiHA@@@?f@A?cH@???@@A`AA^wB@kH??@}F@??B@???I??@@?A@@?m@qAA?B?A?@??~ABl@gEqJGB@tLtKJg@@@??Kv@@{I}I@xC?@AA@????AiF???A?@?@Agr@JAkCg@?BA@@@A@?@????B?@AB?gBbB?B?A@@{@}E@??@B???zZBB{@B`H??A@@AA?B@CiG??_@k@???@@@@?GA?@B@tY???B??F@??@?@??@@eC???U?AHAA@@FA?AAAAEA@~@?@D@?qAsE@?A@BAm@@A@??BAC@@`A?FpC??@??@AFBpi@@ABAH@@????@BD@?sA?M?cNBA@??rE@BS?@mBA@BA?lB@@??@@a@B@??gBrMB@g@Q??@@?N@A@@@AAAB??C??@?@?@@D?@@@yB?lB@@D@@?@@lAA?@@LJ??@@??JA@?@@??@A@AJB`OH?B@????@BC?S@?@??O?|J@lCB@xDAC@???dO?AC??@?J??@@BzYDDECA~@@B`D?K@?@?BABA@dA@???@??AA@A???@@@EA?KhRpB@dJ??BB?c@oL@B?C?gk@_B@@wIAi@A@??@@wJ???@@??D@@?eS?@@??@?BAHCEA?BBxAAAB@AAB???A@@?B@D@sE@@@@A@@???@BG`A??@AA?@?@?BS?uCm@@?@??BAR@ABy@@????@kSBAF@?}@?@?@???@??C@@@C@AAkIG???@???@?@???Ah@dC@@HdB??@@BD?@a@AB@????@?AAoG@?A@?BlC@@???@|@B[??BB?xBHF?UAB`I?@?Q??@@???@??@D??B???@A@?@B?xD??A??@@@AKxA@BBhE@@?\[AB~NA?BdAK@A@aB@???@BALI?ABBB@?Nd@?@yB??@AEA@rA?BAB@?BS@B_@?QAB@A@@@BBA@AAA?B@???A@@@?B_G?B?A?@@??B??BA@?A?@????B@A@?BAABBBAB@@A?A@@@?@A??@?B?AXAHAB@@?LABA??nB?@u@BA@\BApG?iF@@??LBAB@?@??A@?@??@??@?@???@?@@?@A??@@?A?m@@???mE@???@?@AC@J@???E`@@?A@@?A@@?nZ??@??@@P@`GAE?@@B??A@@GFAI@BA???@fG?A?@@@@@xA???@@@?ABrFAA?BJA@BB@A?_BfEB??N@AAA@C?@yDH?kG?@BAIAE@A@AT???@@?@?@??@??@kEpS@AABB?N?@??@xD?BAA@@L?@?@?@D??@@??A@?FQ?y@BDBxGBA@d@???@@@??H?@???@@A??aC@CA?@?@?@QC?AB@@DwPiLnH@H??@?@S@B??A@@?A@B?w@?SAA?I??~HBAA@?@@\zQAEjS@@???BA@jGA@?@ABu@?M?@?A@D@b@?@|SA@A??@F?ABA?B?AA?BA@?@bG@@NAB?@@AH?B@Do@Ov@z@N?AA?B@wD?e@?{@@d@kGCBAgBBAB???RS?BA|C@?@uCA@@A?@????BA@qA@??F?CjGA?rL?@@A@??@??@@BBA?@A?@yNAA@???@f@?@??@?@s@A?Bf@KA@@V?B@?@@@A?@@?D???wCB@ABfIC?@?BA?A@A???@@nAAz@BsB?@A@?bBV@@G?@?rRnBMSE_A@AXAy@BcEB?@??@@?@?@?@uD??B?X?P@BA@P??@B?`m@?qEBB?xGA?An@@AA@?@?@BB_@zQsA\??B?jAFA@D@?UBOZ?G?iCA@?BB@ph@BACo@@AhA?EBe@Ab@?@AB?B@B?@??@B}G@???@BA`H@@?A?@@A_O??@d[AE_Y@@A@?B@?@?@?K???@@@j@B@@uBzA@@?T?A@????@@I?A??BCX@?@@@GtAd@@@nL???BBAA@B?f[AB??????@?@BCAA@o@@@EaCuCBB??p@@iA?BEA`@B@@???Bd[E@GCEBGAB@@D?qFA@@AB@A?B@?A@BABa@ChBB??@@@mJBqAA@@PM@@?fH?AAB@CS?BMZFCE@|AA@??@??@rFAB@vR?@@BaGJ?A@AA@SbJA@AAA@AAq@y@U@nAwE[AB@A@B?@@@@?@@hDaBA???@@@@?@@??@@A@@???@@???@?@?B?AaY?@???BBAALAJB@fJ@@?y@@??@B??ByDA@]@???aD???@A?@??@@???r@@@???????cC@???@@?Ba@?@??@?@???@BAA?@?@???@@?FA@?@A@wAC@?BA@??@@@A@BAB@??b@?@K?@??@{EiBB@?????@?`@AE?B?LA?@@@????B??A@m@@HFC@@????F?IW@@??@@???AAJ@K@C??AA`J@gAA?F?@@?@E`@x@AEBDAD???@?@?@????@?r@@??AA@??@??@@@????@@@Dp@A@@??p@?BBAC?A?@?Be@BAE@A?A?@@?A~AaJEA???@@V?@nL@@?@eB??B??@BLw@D?sD@A?@EcE@@@|IB@AnD@@A?@??BIABBHIBA?AxZ@@??AA@@BkBpABcEC?AB@BPB?om@BBAC@?jOCBF?[BBA??@?BxAABr@?A@yBfI?@BwE?FA?A@???@gQX@?@??y@GFF@@@VCBA@A@@???@?@?@BGAJC?aE@A?@m@@ACABB?ABA?A?@@KJ\C?BA@?]@A?@@?AA???@?B?B@@????@?@?@?`DG@@??@A?@BB?ABpC@@??s@@JiBtC@C@?@@B??X@Ee@@???A@@|A?@?@??@BGAB@dFA?@?EB?hLVAB@aF@t@??B[B@zDBcJ??@@?AH?AX@@A?g@dHBA@??@?@@C?ABpAAAA@CA?A@??@BtZ???a[@??@@A??@A?B?@??@?@gA@NM?@@??@A?@??@@?@?CN@BD??@A@??@?KY???@@B??KA?A?@@A@??@wA??@?@@gA??@A@`AA@????????@@@????@@?wH@A@ARBBEA@@mJAg@??]?M@@?CDCvA??@@?@??@?@??@?@_A@BBuJ?AeB@EA?@??@??i@?@@D@U}B\tC@A@Ak@@kL_EBAA?@BAA?@@FCH@bEABA@?yGA@?A?AA@?E@???@@?S@D@@BB??@tC|G??U?@D?@?t@J@BB?AB@A@@?RA?hA?aI@?BABB@j@???@?@???B?@B?BAAB??uHaAA@@a@?_AEAB@BnEA@@??AB?iEB?@?A?@@A@QBBA?ABgG@@@A?MA?@@AE}CBA@G@A@?A?k@?DA?@EJ@F?{K?@?A@yr@]??B@???@?@BABB?eA?}G@@?A?@B?A?@AApC?K@????@?@BQqL??@??@@A????@???@??P[@@gBAA??h@@ZN?HaACB?hLn@@@@lA@@AA?@@????@@?D?A@??A@@rZ@ACB??@@@V?A?@@?AUA??@A@@@@@?AA?B@?@@????wD@?@@?@@?jA?}ZB@P?AmD@BA@NAAA@@AKdAB@tF@uHNbO@d@??@@??A??@AAc@@q@@?_s@?aLB?BD?pF?????@??ElF?@?iE@?B??@?@?@??@??@{M?H@?A@?E?A@@_A@@fHBBAhFIL?AB?@?E@A?@?N??@?@BH?cB@@A??@nS@A?@@@@????@???@?@B?A??@@?@@aBAU@A?aD??AcB@@@zINkA@@DD@@EA@?@@nBA?@A@???@A?BBAAB@A^??@?B@BAg@?@?@?iB?@@J?iX?@?C@A??@@?A?BA~@K@bABB@B?`GA?bQB??@A@@@wAADF@?HBBA@????@@@AEBA?BBABB?G~@G@@?B@AK@????@@l@A?fAB@EA?@@A???@@???@LdG??AB??????@?@????@????@L@@@?m@A@@@j@@@pAA?B@AA??@@A?NV@@?BdHC?A@??@@??AB@A@BAB@?A???@@@hAA@????@@@@p@y@C@@?@???@BAAxH@I???@@AAABB?AA@@A?BABAA?@B??AA@????B@CA@@?A??@???@??@@DA@??@@A?A@BzBIA?@@JDoS?~A@cF?@@gAAAiC@aAA@@}BoD?@CDE?F@@[APBrAiCBA@B}D?PB{@BA?sE@@D??@@???@?BCAA?@@?gA[ABE?CS?AA@I?F@BnBGIoQB@@@g@A?xC@?@???fA@B???@@????@?B???@j@@???BB?AA@?f@|AA@@uD?@bCFa@Ci@@ALb@?@?AF???@@BAtW@A@b@?@EjA@A?@@???B|XAASA@EXBA@BABBB@s@?AABAAB@A??@??@dSA]A??Aek@A?@ABcHEBEAAA@A???@@?BAB@?AB?A?@A@@@DA?@?y@@@EBA@@?ABUB????@???B@P?@???BE`@AA@???@?@A?AiQwZ?@?@ABjIBnCA?@??B????@@??@?B?AWBAV?A@D@A`Ac@@wDpA??@??@@??@|@AAE@}@??@@???@?@?@CoAA@???B_l@?ABAAB@@iE@vCMrA?B@A@??@D@?@B?A?@BA?@@@Aa@?@j@B?BaO??AB@A?B{GKIbA@@F?BB?@A@??@@@???k@??@???fB??@@@?@????I?eA@b@qQA?B|HeR@@vA?AVHAAByA@@A?BB@AFB@HVB@?A??@?@s@AAE?yB@AAB@@A?B@????@A@?A?ABB@?BM?@??@@?A@??B@AAA@??@??@BC@X_AGB@B?sB@@QNA@AJlF?ABBGT?AA@@A{DBB?@B??qL@??AACAH@B@A@AA??@A?N@L?BA}D?@EAvMJB?@@}A?A?B@?EA@@??K?bABABBBBA?@@f@@@aF???@@????NA??@@j@@@tE?jA??@??B?A@?ACd@jBB@??@@D@A{@BBA}FEBAB@M?@AB@?AB?L@ABJAAAB?tCUN?B{FAbIcLAGBBAAaGBB?Bc@AB?ABBBABBBA@AqG@@BD?A@`D???@@ABBEAvM@\`A@ABBBEAB@@?AnM@A@@A^B?A@|@@?BBBBtDAdHBAE@?@?@E??YA@??EAcB@?@@@??@@?@@??gEmB@BABB@lJzAsCB@@yBBBB@B???mR@?@??@bCBCBAT@@BBBAAAA[A@B?oD?@@J??B?ARA?B?@CA@??B@?A?B@Z?AB?@?A?@@?A?@BA@?A?B@AhH?B@w@AAA@@@H_AA@UA@B[iA?LcZFh@BAAlS?AVCBR@BiQ?~@@DA]?BA?ABB@@t@h@v@@Ynq@@X@@@??AA@??@A?A???@@`BB@@??V@|FD@@?@??BBA@@????~B@@??zJEA@A@????@?@m@A??@x@@@?V@FBA@BtJu@?A@s@?@D@A?@????@????D@?YB???@NABEA?h@BmD@A@??@@A@?p@vACB@?hD@@w@kCQ?@@kLvAAA@?@@ABAD?GA@C~B?A@BA@@_A??@?@???@@A??@d@??@@?C@@aI?g@B@?AEQA@@?zBkFB@DA??@z@???@???@@???BY??BAA??@@@@@?W??yACB???@BA?jA@DA@@NH?A@@@A??@@??@A???@?@Ea@?A@??A?@@??rA?@C@@A@@AA?BBBARS@BB@@OF??@?A?AA??B@??AA@@kA?A??A@??@?@@?AkB@@??zCiEH|JrBAB?@@@@@AT@???@BA??B??@BB??AB?B?AB@@j@F@AB@@aq@???@?AEA`@@@tEM@BrA??v@@@HAAAhSA?BAB@BABBb@DA@B?oCAACABJAkL_@DOHG@@?EjA@@AlFBAAB?BgJS@???LkOdCBABA@n@??`@@Bjs@eAAA?A?B??@BA@@A?A@@C@A?AB@@?DrL@@eGLQ@@I@z@@B@???@B?~@J??@@BIb@?BBB@ASBA???@A_AA@hF???@@A??nBAAA@@N???@AUl@AkGAyA@@]??vC@A@@iAA@?A@lAA@AAAAAAB@A?fF????hA@??@??@?@??fF@j@CdCH@@???@?@@A@iABx@?B?b@nEAA?A@}d@AKWB?xIAAB??@??@@?xA@@?E??a@BA?BB@@?F_AEB?AA@E?P@bAA?BA@?@?BB???@?AAB@A?@B?AA@B????A@@?@C`@@BDC\A@@BO?BA@@????@@A?@@dB??DB???C@A@@?H?jC@?C`@qAAA@??@P?A@B??EA@?B@tFIm@@?@AbEA@bCBD@???@???@BBB@?@@AuF]B@AVB@@@????BAAA@@AB?@????iA?@BBaLA@@??A?@@_A?P@@S??@?@B@?AnGBK?@D@Ay@@@?oD?tC??@@aAA@??A@?@A@@???e@?@A?@??BBpE??NBA?@??@f@@??@v@OkF@@A@@??@????@@AI?B@?@v@??BRB{AAA@??@??@??@hS@?}M?A@@???@AB@@yK??L@At@???@?BH???eI@B?@??@~@@cBD?BA@@??A@@AA@iF?@@?A@@?iLB?BJ?O?@??@??@?@A?@???@?@]ABA@hB@BA??i@A@AhBt@BFx@?@??sMj@B@ArXA?@@@@}@B?A@A@@CCt@?@?C@??SC?@lYA??@@BD@AmMCW@??@?@?@?A@??AB??@@?gDd@@A?@D@CjGA|HvCA@@A@@G~Fnn@A@??@????zC@?@m@@??A?H@@eAAeBT@?@NA?@CDA?@BD?fLB@t@??A@@???uA@???C@AE@AA?A@Q?BA@BkAA@AE?@@@L?A?@?@@EDA?]@@?A?ls@@@@A?@D?@???A@cAGA??B??A@@A@@Fy@J@?BA?U@Au@BBV_H?@EA?@AoA@@@_AAG@???@?B@xAfY?Z?@AA@Fa@??@@B?DABEK~Z@??K@@AER`@?@`A@CA@@xB?ABA??@B@??SBKAeD?@@?iJA@@u@@T???@@f@???@???A@???@?@bB?LOqMBABdm@@@?AmGBB?Ad@@@????@?H@@?A??@@?AqHA@B??B??A@hG@@]@zE@??A?O?wC??@@???@??B???@@@|E\H@?@?@???m[@A@@MoZ?A@l@@A@@A?@?G??@@?@?????@A??@@pBjH?@@@@A?BBmHyAqA_B`R@@CIA@@A?CBl@???BrET@?@????@@pA@A@@G??A@A?@@@G?AaB@@D??B@AzBAB@kABB?A?AB@@??@?@@OF??B@MgSaF@`B@@tCFR?@AB?~E\AEA@ACAaE???@ICAAB@V?B?@m@BAFA@@?P??@????@`Jf@@?????BA_CB?@@?A@@I?A?nB?A@@@BxJ@?N}AAAA?@B?@@xB????@EDBfHWiO?@@AA?A??@@A???B@@]~o@?uq@@@???qFA@y@??iA@@AH@????A@@????@?@?@CnBA@A@BAB@I@?A?A@dABA???@??@@??@?A?@@?@@??@?@?o[LNrSA?B@V???@@???zNBaATe@?B?oBB@APw@ABg@@A@FAe@HeAB?NX]?BB??uk@BI?RABA?DB@UJ{C?@AJMBAB?ByXA?@B????@_AA@@sJA@gs@@BA@D?@@AR?BBbCKvR?ZKjB?`D@?@A@@AG?@@AeB@Qs@AcA?DB@A??@@A?AAAa@bA@VnNBm@A@@?AABB}C@BgK@AnZ@k@@?A?A@@C???B?A@@ABF???@B??@??B??@?@AA?Q@?Qb@?ECM?@?@?@@???A@@ABB@vCl@ABd@@L@???@?AAAFABBVa@BBWAA??A[BAAAA?B@ABq@AABe@MGA@A??BHA@@IABA@@A@KM@@?t@A@BA??FkI@AwL@?@B?BWF@A}O?BM?bAoNlFAAeAB?A@BB@?ABBB?AAjAE@}AAJ@@??@@?AA@p@H@XnX@@A??BB?Af@???@@?B?@?@@???BBA?h@B?V@NoBA@@?@@aBAA@B?{IcB@Bw@B@Be@?C?@??aA@?B@@???AA@?????@?@?A@s@A@P?????@BA@aB@EuC???@A@?@?@@dDA@gZ?@@AxZ@?@?@??@AA?BAA@???@?@@A??@??@?@?A@A@B????@@?vEKT@@?B@????@@?KlRpA{@??@pKgAA@?Kl@@@????@???@??@@??@@?xA?ASA??@@@_A?jC@?@BA??A@?@??A@@?QAEB?A?@NnB@A@LB]????@?@?@@@OBBT???@@@?ZA@????@?zIBA@@A???@@@???EL@G???@??@??@?@?@?@@c[@@u@?K?kEy@?BjNA?@@????@AA@?@@^??@?A?@A??@@A?A_@e@wE@@?@?@?R?eG?@??@AA@??@???@Bj@t@FA@B@m@???KBhF?AB?E@eG@???@?k@~@mF@BA?i@?A@@B@b@???@~B@@?GCA@??@A?rA@?}@@B@@?G??@A@AAfOm@BB@?DAB@PiJBl@?ABBAAB_@pRAfFBA{@B@@_@BBLzA@@?ABBABAB@IKZT@AF@@A?@B`@C@@A????B@A?B@@\A?@@A?BtQ@@BNdDCbD@??@?BBPOA@??@?@bA@@AaDBA@@?tID?BaA?BjBA@dN~DBEABBBBABB@F?????@@?GA@?@?@?@??BAA@@v@A@??DT@k@??mQv@?@@?B@_p@A???@?@??@???@xQ@@??@???@?aABAB?Jml@B@rJGCjF?E@aOA@@?E@DF?A@?@??@?@?A?@?@?@?@??E@{AA??@?@B@t@???wBJAByB@A@??A@@DeH?@?@??BErJ@A?A@@f@A@@AbBmC?A@@QyFIRZ??@@?@@dB?zp@AA@@B@xJ?@??@AZ???@@B_@?AOBWBBD{A@?@?@f@Dj@o@?@@@BtKS@A?@@A???BIT@?@???@@?@?AAB?}p@?A@B@nV@uC@??@?dC@ArE@A?AE@AtLEvKK@?@N???@@?@@Y@EAtn@`@AA?TJ@@B????@@A??B?@???B@?B@??AtE@@B_LBCG?v@?@kIBAAB@?AS@??@BAAA@??@@@D^ABBA@B?p@A@?a@A??@@?B???CB?AkE?gY@|A@@M?@yC@@?B?At@B??@?`C@???@@?@???@A@O?sAA?@??B?@AyP@@?w@GeF@B?ADwBw@?AA@AwHFB@?@_D?@BBsAA@?@????@?ABqNB?e@@eq@i@B?JgA@@?A@???@?k@@@GBA??@??@@?AAB@A@@@@I?uBA?@@??BB_CA@VEAC@B?AB~KBAAB@???@BACExBBAB@BfA?@oJ?@oCABB@@?B@ABB@B@Bc@AFB@AB@@@HRAAA@@??@@???BB?b@BA@A?@?ACQ@BJA@}@????@?B@??QH@AA@@lO?Y{s@@?A@@}BA~NA?@@@BA?@@?AWH?oMMABfBRg@BCA??A??R@@GA??B??@??@@AIXeI@@?AdD@DB?F???@@@???E@C@q@@@@A?A@?@?@@?d@?N@@OAA@EA@kA@??A@@???N?@LBJLbLA?@?@V@Bt@?rR@@Au@?AKZ?@@ABYm@MB_[nEG???@??QC@???@@G?@?lE@BABGBA??@B?A@???@A?GB?@A@??@??B???gEhA?BpD@B?KMA??BA@@AB@??@??@???jS@??@lB?A@@gLAE@???@D?????@?A?bBBB@sn@@@A?@@\eAA?@E`@A@}CsB??@?@??aAXA@?@???@???kIc@E@@?AANrJ?i@@M@AB?HA??@A?@?A?@@??@????@S??]AA@??@@??@~G???@@A@D@??A?@??@EAB@??C@I@@AA??@@??zC@???@??A?BA@T?nVBS@sC????@??B????@j@@@Ca@mABAAABAAByZ@@???BBAEA@B?A?O?A@@???pECA@?@BEtC@?_F@B?A???@?@@??@jG??Er@@???@fA@Bs@[?B?g@C@??@@???@@?CA?@AA@@AB?A?F@?@?A@H?@@BeF??tBHH?}@@FIBA??BB@AC?E@?A@@?R@@?@iC???@@????cD@hH@???@?@?A@C@@AA??@BL?Ac@DaIB?A?@??AB@G??g@qF@A?Rc@@@zE_@UiJLQzZGA?@?@?B?Y@kA?@?lO@A@???@m@@C@A?@@A@@?BB@????@?A?@gLAADBiI?BA@AjGAX{A@Bu@D?@?@AAA@BBB?????@?yA@@Ez@?BP?@A@B?A|e@BA?@?@?S@@cAA@??@?ABBEYB@WiIA@@rL@A?@@`s@lX@DBA?@?^WB??mC?n@@?@@{AD?A@??BBABKAB@iEA@@A???@@?ABB^@@A?@@FAB@A@@D?@?@B@AA@??@?A|o@?@???A@@BLis@B@vCGFd@B?sBA@?W?~BA?@@gA?AB@?@??A????@@sC@@?AC@D?@??kG@hA?AAB@uo@xC?@BD?M?rKBC?GLA?A@lGC@@AzA????B??@@@IOz@Bw@@f@@@@A@@cBe@@?@?Ak@BmEpL?z@?@??@?AfGd@BAB@lNrAB@????}FPA@~E@??@?@???@@@A?AP@B@?@?@@???@A@@B?TB@@LA?B@A@AA@@???@?@?AA@@aG_B@??@@BAA??@?@cB?@??@xBAC@@rD~@A?iNC?W@KA@@?A??@@AGsAA?@?@@?N??bB@kEm@A@???BBNoZ??@BT~F`E??yBACB@?A??@??o@?@@B@dAoEAAB@??@@????B@yBvLC@@@??@bOkA@@wAA@BEA?@B_B???@A@?|E??MEAJ@@????@@@?C@B?jo@E@Ah@C?BA?@?@A??qA@@?@??{CB@d@D?@??@?@?ABB@A?@A@@???A?N??@@c@@hm@@?@@@AzM@@AB@_A@@@@?AB??A@Go@@?@fBB@B{@BB?@@ABz@E@Ae@N@@eGcF@?@A@?@@?@A@@Z???@??@??@@??@?@BA?G@@A?@EA~DiG@@?IGB?@Bh@@???pKA?B?b@??UBLBBvLASABS@nGRf@_C?Bs@??@EA?A@??@CAAnDsA@A?@@}@?@@{C??A?@@m@@?I??@?hAAk@@?@qZ@???@}DMtJ@???@}J@gA?@@_D?bZBB?A?@@@zR???@Dr@?@D@GOOBB???A@xD@@oD@@D???@@e@_DBB?@@?PA@@????FBgB@@?lC?@@?@A??@@?A?ZD@?@?B@iA????@@A?B@?MF?@@BBBB@A?@??BxL?@tA@?@@A@??BC@@??AB?BBCDM@?B?@@v@A_E@?o@@@?@????@?@??@@?BB?DJ@@xAG?lA????@@?iA@A??@??@BA?@@uBA?@??B?`K@AlB?@SFA@@rR?EA@_A?@@?nL????@@?@@tI@@@@c@gEA@A?@?AB???Lih@s@@sCd@??A@?B??B???@@tA?@IBA?gB@@A??A@@?~D~A@A@?xE@??@@??BA@?A@@A?uF@A@AK{@k@?zKB??ABD?A@@AB@A??bBAB??AUrE??@@f@??eD@QAbC?@BvAA?D@??A@@???F@@??@ED`@gA?cA??nC@_A?A?B@A?A@??m@@@A?DW?@??E?@??@@??@??@?@@qJ?A?@@?@@A@F@???@BAA@??@X@??AB@?@??AAAB@A?_CcIrAA?B|A?RAL@?@?b@???@@?yAdF@uDABBZ@A@c@?yV@@A@x@A@?J_BSA}@@@????@@AvA@@DA??E`@Z@AAAeR@?A@??@?AcC@z@@?@?@?UgSMpMF@@A??{A?BBGF?x@@}XzNCA?@@??@B??@@V}F?@A@A@BhA?_H@@cAA???@??eAA@???@?@BA?AB[pNAAA?fE@?B@B@DVB@?A?fFlAe@??@@@@???@@?@??????@Dc@GPAm@_@~GF@AH}@@BB@???@@THC????@@@@tWiC?HAB@??AB@BAIK?@@@A???RA@@J?A@AA@@~@@ErCB@AyC@A@?@??@?@BD??EA???@?lBAA@@@BApX?@j@~@???B@?hD?H?@@??@P?At@@?B???@?@??AJFHBABA@BBrCsJACaEkJ@??EA?fD@@oD?GB???@@pC??@BBA?@sE?BA@??qLB@?@???BA_A?@@??@??@??qAAH@@?C@BkC??K?@?@?BI??@?@@????@B??A@V@?wC@lH@qFEQAB@??A?BoBB@@M?NzD@A[?@?@@@B?VR?@?@@??@??@?A@?@?@@@A??ZA@?@?@??[?@A@??G@gG??@@CzI@@A?A?AA?@G??CB?wE?g@B@?jNBBL@@?A?@zF@?@@bF@B??@?A?W@@jAAnAEdk@A@@?@?EE`@?A?~BBB??@?@eLBAABB@??AB|AiAA??EB`@ABBxAC??@@B???@?@_GRA?@@?@A@?BBD?f@fAB?^??@@?@??iH@@G?@A@@hF????B??B???BcY?@WDABBFDAU_@TAEhE@A?A@@?nC?@B?@?@@?aA???g@fF????@@?@@@?@???@??@@?A?`F@??DB@??BA@@@P@@?@?b@@@BzBbE??@?????@@?@B????B@A???@??@yB@???@@@??@|@@lBz@C@@?ABBB??@@?B?V?SBAO@@lS@lDB?K?@?@@B?@@D}U@@??fAxD??dOA@@A?@???????@?@?AA@?@@?@AB??CA?@@?xL@@BB@@??@@z@IxAA@@@_A?PqN???@@?@@?@??@t@A?@?@@?@A@????A@?A?@@A??W@???@@@@??h@@fE??@a@?zEB@@RmCFA@@on@???B@A?@@D?zCBB?AE?U@???@oBA@BDA@????@@???@@cL???@?@AAB@A?N@eH?@AA@?BB??AnB@??@??@?@@eBjDB?B?@oq@KB?AA@@@L??BBClAjApAK@??@BBrZcO?@??jB@@?E@?@EA@?B???@@o@?@Ab@BjD?A@?@?A@@???vC@A@BBI?@@AdC@?@B?@AB@@????H@@?X@h@@@?@@`A?AoD?@@B?I@{@FBA?N~@B@?ABB}@??@@JhC??@?gH@DB??[A@@??@?A@?@?CB@@?A?@?rKE]?~@`E@?@@@B@??A_@}@?b@?BABA}F@@?AA@@?XAAr@??BBnDUgA@??AyEn@A?@E`@V@@A?H@BA?ABBA??@@@BzQiH@@??@@??@??@BAAA@@t@?HA?B?@?@???@A?B?[?@??@@_Ay@Q?Rs@BAB@B??C@@?@???@@?Y@@?bDB@???r@@??I@A@@?B?AsB?@????@mSA@e@lEAzAB@DwD^??@??@@nSEz[@IA????@@?@@AD?LE@??A@@?@B??@B?DABB??B@????@k@?kUF????@@@@??A@BhC??A?@@CBmJ@????@sAAAAgD@BgDA?@@?BBAB]kF@??hG@A@@?uJfH?@B^A??@@?@???@?dNB@@yIAA@@???@@???bA@???@_A@??@@@@Bh@@gA@?AB@A?AAn@`@QC@L{C@A?@@???x@@B?A?BA@fABB`Cx@vLPB@A@|I[?pLAC@BAjp@B?@ABA?aE?B@_AAiE@@Aa@dL@@?e@xBB?@@Cc@E@I?OA@?A?@@@DAA@??@@oE@@_B?xAA@????@@G???@xL@?A?@A?@@@@aG?s@[@?SBf@@A@??BA@@A?A@@A?BBArAAA@@@???BqOqEA??OA@@?AB?QA@H@LA?Fx@@@?@@AcLoCBAB?@?@?BB????@?@BoDAsN?@@jDBqEB?|FoL?w@?@@A??@?@@?@@@A@??@Y_k@A??@DcAA?AB@AgJ@@A@eDhX??AB@??@BD??@H@bB@@@\A@A@YB?y@@B?jAlB`q@@@fL???@??@B}NA?@???@@????BHABBAs@?@?@@@?o@??B@A?B?A@@?AiA@BA?@@??@@??aB?@@?????BAU@AFF@??@@????@@????@?@p@@AH????@as@A?@hAkH?zB@@dCAAmN??BfAMAA@iA?@???@@A?AAeLAAABVBAAS@IBBH?Aw@@VW@A@AB@BABBAJLA@BA?S@AfDmR??BABBBm@@BABF?ABDB?A@@f@z@B@rAH@?@Ba@[?B}AoSAB@@lGC@B[v@ABA@BnSgI@BEfr@`@lA@?fNABEA@?A@@D??@BBAA@?B@BX??@@@zq@wF@@LgAWA@PAAos@?bGAA@\???@@DuD?@EGDoSuJA@EfA?@@???WDpDN?@HB@B}@@BW????@@????AH@P@??ApRPD@?@??@?^A?@@@????@@A@qC?TbE@@A?~BBA?@?@????@@@?A@B@BwJ??@rA?A`@@?@AA?BB@G????@?_A@@?B??M@?A@????L?@?@@BC???@xEBAO@?pRsDfA@kO?@@AAtNBBU?qC@??BBAAm@A??A[@FA@@@p@LhN?G?AM@BI?W?FR?A@@@A?kCB?OA@?AK@BcB???B?uDcB@e@G?@@A?HH@?@B????@????C?@@A??@@??@@?BB@@?K?@@A????@?PyDrNrABBA?ABAB??@UBAAKA@ACBBABx@A@?BATABBj@G?@@?A@\hBgABABBAB?@@iF?@?uNA?@???@eB_AFB@CZ?AB}HJr@@?SaCAaFyEABA?@@?ABBiA@@AAABB@?L}Gz@BB@????@BQ@??@@AyE?A??@@??Ag@BBB@AB?@AvZ?bGA@??[ABBBB?AABB@A?AEA?ABErLlHKBA@@????@@A?BxAuBcJA??@AABBD?_BA@?@@???@@@????@BzEb@]hBnAjSB?@@H?A????@?@B@o@B?@BBA?@@?aAB?PB@????@@q@?B?@@AXBA@@?iE?@@pF@A@@_AwAA?@CM?ABBA?@???@D?@@@@?{A?@@?AH?@?G@@???@BC??@?@?@???@??@?B@@?BBAF?@@BH{@?@???@?@?@L?{@H@AJ?@?A@zJ???????RBd@AO@B??@??A?@??@]BBAAAbB@A@B@A?@@xE@ABBfAARAB?B@BA?AaAABBBtSEAA?@?@??A@wLA@BnA??FAwAA?H@@BDlAA?AA@B?De@vCqFA?@I?B@?zAOBBBBA?BBN?A@BX?B?xBA@BAAiDmQB?ADB@r@@MM@ABBAA@E?ABBBq@ARE@?@?Q@|DF@BEA?B?AAKBAB@??B@@f@??AA@e@B?@@D??}@Gh@A@v[AzFhSE`N@??w@?@@_BC@??BB@A?J?@]A@nCA_HAAASAOBnH?I@BA^BBBnE???@A@??????@@@AmE?iBA@BtLA@AM@?@A?BY??B@?@vS@???@?BFrW@@D@@????BBAH@^@oXAB?BBA@AB@|E?T@?Y?@nDA@ABlCg@A@sm@@DB@p@AASBAB???B@@?A??B?kHBE`NAsAkED@nMN`CA@?@@@?sB?nDB@?Y?@?U@?o@BBQ@??ABeAA?@?BA?QABI@?A@BIjVr@DHOA@A@?@B@@AIBB?@@?fA?A@@?dF?AE`@@ABAy[@pEBA?B????@@@U??R?@@A???@@?BA?@@BTGHk@A??bB`ByMGH?@A@@??AD@AcB?nRABBfA??B@A??B???L?@@@@ri@tE??@@?@???@@?@?B^FoAA@eL?AGeA@@??@A@??Q?AB@?@?iCKMBdA@??_t@?@@??pEA@@A@@????@gA?A@xE???@?@?@@nCTAB@?F@}D@@BB?JA?BfF@{@@????@?u@F?BBbI??{D@????@AAdL@???@??@B@?@?@?QF?s@@@??A?@?AGAB?LFA?@kA??B\@@D??@??@?hDBBFF??@@D??N@@?CA`@@vj@_A??B@?A@?@??B?@BNd@?H~H@@@@cE?@GAAA@@G??A@@KNA????@@?B?BAi@@K^CAkX??A@@?|@Qw@@^@Q?O@yJ????@@??@BrBDABCFA@?^?oC@@bB@@YB@U?eApElC@n@BBABkN?A??@??B_@@?A?@@w@EGEe@@???qIB@@ABH?@BsLAEwL???B@?A@@D?@@A@ABDBbF??QBCE@A???BcF@B?A@EABA@A@??@@@A??@@A?h@@L?@@AG?B@???gO@@????u@BA?B?A@@@A?AF~ABFSWt@?iBA@?@@pBuSM}@BBA??pBW?bSB@e@bBAE@uLAASAAB@iAA@HABsAB??@?I@@?HCEVB?r@MT@BFeBA?@hM@@lA??A@@???dA?@BAABB@??@?B@TA??@?@@?BA@iBBp@???C@?GA?@@???d@??AB?A@A?@?AA@xCB?AAA?@@@?A@@???A@?@@Ano@?@BWAA?@AAmMI@@{JBBBQHbXA?AAAf@?B??@BBBKj@@?@?BA?@zV??A?WAdRDA@A@?@??D?P?@??B??BBLBARdGs@`AABBDA@???A}@@EA@@A??BR@?A???@@wE@BA?fBBB@?@??@?AA@@?iD@BO_EBBVg@?n@@?CBvC?jR@?C@oD??@@???@???@B@@NjByA@B[fEEKwKBBEB{F@DAB@BB@@?@{@@A?@??@AJeLAB@ABiB`CRAAAABBA@@_AAC@A@MAHA@BAL@BA??BBA?BAEnGJB@???tE@@@A???qA@@BAA@@??@@nAAIa@A?A?b@AECYA@BgS@BBB@@MBBA@L??BAeAAHB@AgZBbLA@A?@BA@????ACL@BE?ABAAA@rAeAW@@@HPA@@?DACho@BgB??B@xAM??@????D@??A@@@_@?DA?@yEhBuLAB{QtF@z@F?tC?ABA?{@@H@?@@F?AB?G@AA@?EA?ABBpBtEA?@@????@@rE?B@@????@@kF??@@??@A@?A@?BAA@A?g@?@?@?@@?hEA?@????@@BB?[A@@@D?ED@BB???@Ao@@@??vA?Au@A}IB@@A?@@?xEBBBB@gO@@_J@Gc@A?@AABBlDaYyZ?@BAABa@ABiIBm@@A@BjEAB@@DD@?zB@???B_A@?BAAyNABV?F@AAABGQA?aA@???@Ia@J?BBBB@B{@`B@bBDA?@s[B???@??V@e@??@@A?D?@@@@???@@?{GA@@A??@??AAB?AA_@F@lHA?E@W_XF??@@?@???cA@@OABdI@A@A?j@B@kBA@B@bFoM@@AJA@A@?@pSv@z@@?t@?B??@^@??@?@????@@?AeABJN??B@AcNAAcAYFH@FRLA@??@@@HI?@B}@?x@?H?A?@??BI??pAqCA?@CzGAQ???k@@{IA@@AG??@@AyD??@A?@@W?Q?@Ng@?lB@nC?@???A@@@????@@B?|FAQ@?@???@?@@A@??B@@@FoY???_@BA??~@@AB@??@?@??@@@?wMNd@A@@??iA@@Q@I@ET@yAM@@?A?iCA?@?cAFOA@@@?kCA?@M@AD|D@@eDA@???E~k@A?A?qB@uAB?ISHB??wW??@@?nL@????@@AyK_LArq@B???@@BB@@A?AABB@_A?EA`@@@?^A@@?A_@@???@???@A@j@?oEA@@GA??@@?@BAA?A@??@??@??@BAr@~@A@BgOsh@?BA?gA@@uBrN^B???At@?Az@@eIA?@@A?@CmCDBABBMBD?ABBA@@??FGAB?A???G?A@?BAa@@@?A?MhC?FA@@nC?AB@aB?A@ByC@@A?BEA?D@aEAoA@AA?CBEA@AE@@AB@ApMYBx@?@???_ABBkBMA@?lF@?lLfD@s@wAC@@`AAA}AEl@oB?ABk@B|G?G?{Q??@??@@A??@@A?BAA@BZ?@?@BFO@@????@???@?B?g@AY??@@Ep@@@H?@@cHAp@@???@b@@???@@??wN@@fA???@@A@@ALTG@MA@@@tIA????@@@@A@??p@?@??@?@qCdB@????@qA@kAA?@@@@QDnG@DfRA?@bi@BI~Ft@A@_@?PA@@Ip@F@@VxC??@@?AB@@@?{G?A@L??@@????@?A@B???@???@D@A@???AE@JA@AuA@BA@???@@?A?s@f@@@???@?@@?A@?EABA@@UI?G?@@y[A??@A@?hC@@??A?@mB?@?@AiCBBAB@{@~C@??@R?BAL_@ZAIcABABEA@@ht@?@@p@???@@@B@aS???V???@?@?@??BB@l@F@A@BAB@?yB@@BnQ??AA@?@????@???@gL?@bZIkI?@xA@?B@c@???@?@???B?AB@@@?pV?bGBB????@?v[uC@BAA`@@??@??B??C|@??@A?@_RB?AABH@A@S?bDLrAoEpCQ@sE?@?@@HAn@@DA???@?@@zF?A|A@EsC?@@A~AA??@@mm@??A?@@`E??A@@A@?@???gC@A?@BKZA_@?fSAB@VB@X?}B@fOAE@?o@AR@eAA@@??BsBA@A@s@@@?E@A?ABdCgA]|AA?@A?B?B?kFY@@?????@?~@@@@A?bq@}H@@A@ABwHzAB@A@@hF???A?@@AB??@?AB??OBMBBB~E@@A?@|F?BLA??@@??AB@@vAw@lAEBA?B?AA@V@A?@A?@ABBS?D@@????@G@A?@GBAG??@@BlGCdC?BA@hC?O@A@?h@@@@ACBBA?@KA??@QBOhIAB?@???@@?ABABLA@@???A@?@cI@AO@BAvS?B@AbS@Bh@@B?????@?????@ABAM@b@E@@?qJA?@AE@??BA@@?A?A@?@???@@??????@??lFA?@@?@@?ByB???AE@D@B?vA?AB@ABB??@xA?????@?@_NBSV@A\@@?lFhHS@?A@@lH?pC@@z@?A?@@??fB@@??@H??@A|ABBrAAHB?DA@@@pAA?@@?A@@|GrHA??@eG??@B?jI@wABB??A{A@??@@@AnN?aS??~HAB@B?@Ae@Q?@???@wB@GIA?@?@???AH@@B@?@mGar@B@A??@@DAAGB????@?@AaJR@@??BCA?AB@??A?@@A@@gJ@_EC|A??BB@BAZ@??A?@B?CA?@QzF?@@aBB?@B@?AS@??B@@???@?@BDD@??@@?????@?pStt@?@AdAB@@@?B?JB??@DRAE?@???@@A@@DA?@?A@@?AAA}C?AqC?@FhL?S@A@@CGhLEN@@yFA???B?ABm@A@@????@@@jOBAAB?o@??@@???@@b@?@EABB|Ca@A@?@??@?[?BiAA?@?j@AO]HO@A@@@???@@\pA?Z@??@A@?D?@J@?C?BA?@?@??t@@??FB?@A^EB}o@@@?Q?Mk@@?ACBBA_@AAA@@@?o@??Enp@BB?@@g@?JA@A@A?BBsEp@BB?tQA@?A??BB??bAA@APABAB?AA?AA@?@??BAAH?B@@nR]AL@DaB@A}J@fL@cHBg@?B?{ABB??lBEDAB@@e@??@?Aj[@A??cAQA?@?@?BvIBABRpA@?@???@?????@?AAA@??@?@@??bE@@??@??@@uX{A?GA@@?yC@???@LH?@?@ABAA@{A@`[@K???n@@V??@?A@?AH@?@?@??@eN@@@??|I@@??@???@B@?NF??AA?@@??tY?@A???@?@NBAc@C}Bu@?@?@@??@??@A?@C@A@?B@?A@A?gH@j@@J@AU@A???B??@?@@f@wMpE?@@EFnC??ABA?B?@@?B^?AB?BAbAA@@BABqCBJ????@@?@FC?StJA@@??@?A~K@vCArA?EAsC@@??@AI?BM?B@a@A@?@??AEHA@@??@?B?B@?@???AV@?@E@A???@?D?ABhJB@@?AE??@@??AAB@??@vIB?A?AA@r@C?dHEABAA?BD@@@@?V?@A??C?@@?A?AFA@?@@C?BAE@`@@??@??@AEAB@_EPFm[?o@@@?cA@fA??@AA@dIGHoAkAB?@@AA@?????@???@??@@BA|F~A@?yB??@?@?@@D????BAB@?A?B?F@@]?AB?A[@@??@BA?ABBAdAABA@iIA?CB@B??u@A@????@@@??@??@@??@@lHgD}AA@M`R?~DACg@BAA~l@E@?@B?JA?AT@AiA@C@PA?BAA@??@???@ABBB?AB@??A@@?AAD??@?B??A@AgGBBBAA?@e@?AAA?BABAAA@BAut@?B??ABBAB@S@BAGFB@A?BABAW?A?ABBdOAA@@GA@@B@Bz@}@E?@S@??A@mB@k@???CS?S@BAA@???@A@??EA@BABA@B?Bb@?AB?@@B@gi@AT@lAAtk@B@@????iJ@@?uB?mE?A@@?@?@~B?A?@AQ@?@?a@HA@Bf@yS@@?@X?IuKA@?@?BwH?IBB@@AC@@g@N?M??@@?@@@BFfN?A???@?@@iA@B??P@?B?AC@?ABa@@?@D}C@?RBA??@??@@sAx@jR?N@`KB@JA@??sE?@?@?@{@?@?@?@B@?AR?A@???@??BBPBxIBB????BAEuD@AtG@?R?Zd@???@A?AA?@@B\e@?@@yC@@A??A@@????BAA@??@?@??@?@@@@B@mE?LHB@A?@??B@BLP?wA@@CyGAAB@Ac@?v@@@I???????@VyH@@fJ?}s@EOAB@AIK@???@A@BA?EE?tKBA@@iG?@@???@@?????@@fAAxA@Y?wBDh@ABAhEB@@Aw@A@@??@@B??AB@???@@?ABo@KiH@{DB@????sDLAaZ@????ABArV?BC@A??A???uZ???@@@B?`@g[A?@B??tAB?aB??@@}A|B??@?@??@BA@EA@@GAhI@A??@BAB?@oAA@?@??B@Y??RA?v@?@aC?BoATAB@DBAABBA?@@Z?ABB@BjHBgH?AjR@FA?@}N?`@BBIAEBA?DXA@ABBBe@A?B@@?ABABs@?@???@@???@?ApB???@?@kBwP_q@RB]?@@JABKAA@?}C@?BA?uMhq@@B?nB??@?@?[@@qEdEAA@?`EB???@@?BB?A@@s@zr@AB@?HL@M?A@BBfEAEA@?@?@@l@AEBw@f@{@A?@??@?@ir@AB@ySA??AB@@????@AA?@@DeBA@BcZz@?zJ@C@tGA?@???@?@??B@?AS@@?@Bt@P??@@O?A@dXJ@??@?BB?AA@^BA?@Z@A@?tBMABQ?A@B?p@@????@??zM@GII@ABBA@BBAAA}C@?@?E?A??A@@?@??AA@BWJ@?@jFBEwCBBAwVABZ?[ABB???B?Aa@JB^?A@@?l@AJEA@@@oAA@BLNR??@A@@??@@??@?@?@A@@B@?Ad@A?I@??BA@@????A?B@@A??@[D@@@????@?@?B@?@wL???@@??@B????@A?D^@@C?@?t@A@?S@AApG??A@BkC@@MF?{CwN??@?@{B@vo@z[@@?@?RA?@fq@?@@AAB?Oa@BBBA@NAB`C_@AA]nAABBBA?jBB?B@WA@??]^@?@BG?nABA@@ANp@?B?AA?@@?B????@zJBAA@?BU?AA@@??BGAOI@B?A@?@??@??@@@@?gBwF?A@@sA??@??B@?A@?A??AHAB?@@gO?A@@???LmA@@???@?@?qY@A?}@@A@AE@UD?A@@??????@U????@@?vH?BA?UpB?D@@?_ABeABAB@NcA@??@?@?@B@@A?[?@Z@@@?BB?A@@@A??@??@@~Fl@A@@?A?@?@??AiA?A@@@A@?@@?BBAA@????B@BA?@@?`B?Br@M@@A@b@?IO?ASBCAAzBBBXAAlM@?@B?A@@??@?@ABKAB[?@kA?B@ADW@A@??@??B???kD@?B?BBaBGvP@???w@?@?@?@@?H?A??@@?AA?@??A_OBBA{J@???B}IB@BkBA?@????@xJnC?E@GR@jA`ZB`L@?A?@?E@??xAA@BA?@@g@A@zY@A@B@?@@??????EAbD`H??B@AdE@BA@@?A@WB??BzMA?hBdN?@??@?A@?A@A?B@@???@EGA??@????B@BAB???@?@@@A@A@???B@@??@????@@\DA?ABeG?_@fS|YH?xSBBBAA{GB@gA??@@LrAr@@BBBA_B{[@@A_CBAtS?@@W@A@@AQg@FF@@???B_G?@QBA?B@uGeg@??@U@GA@?@kJ???@@A?@@????@A@?BAxF{A@fDB@??BBBkF@L??@?@?@A@@A@@?L?Bg@GvJgF@???@KBAjD?@vKJyIBBsW@nDAC??B@A{l@BeB\BzBnAhHO@~KA?@G@B?@@AG?AB@@pF@ApLD@`Y@?j@@Q@V@K@A@@nDrA??A@@q@@@@@??z@B@AD@wAAIBmBB?Av@@???@BQB??@??@AE@`@e@?@@HKA@A?B@JdDA@ECB@@?A@a[J@@A?@@AA??@dB}D?@sJBAA@@?O@??@A@ABB?A@@?aE@???@D@@??BB@J?@@BIAA@h@@??@?vD@@@???@?@W??rC@@???@B@A`E@@jK?E@`@A@?@??@?@??A?U@`@bC?A?@??@?@BwP?AB{D?ABBwC??@@@R?A@EKhG@G?y@N@???@DA?@BAA?_B@AM|R?@@@G??@@A@BAA?@@uB???@F???@@@AAB@B?~GAkD@@B?AbBA?@??@eARE@BkDO@?@@@T?A@@|YK@?A@Q?@BDC@??ME@Z@F?K@@J???E`XBA?B?@??@B]v@@gB@?@?}HB@?A@??@?@@@??A@@AsE@@@@??@H?B??QBB??A@@????BB??AA@@??cB{C@?A@M?JB@@??@BBAhA??BEfI?`@FIB??aGBB?fFtSJ??A@kGB@@ZgD?AS@??@B?A??@@@@??hATsD?@@??B?aJ?T?GAS@A@?@@@LFF?@@WPG@@??B?BA?h@C?@@@B???H?@?@??B@D??A@??mZA@???@@VB@A`B@@?A@@nAZEE???@@B??@?]??@?A@??~@?@a@LIbAB?C?@?I@A?@?@??@A???@A??B@s[AA??@@@@lCBEBAB?^A???@?BBQA?@@?ChG@`@mNpCA?|@By@?jC@`@????@@?@FA?????@@@?A?@?@Hq@?@A@@?B@qS@@AA?}C?AHtA?@@A@a@AT@AfD??@AB@??@@?AGjH@@??|@kH?A@@??pDEA{@@@iBA@uC???aEa@?@?@??@UD@@y@?A?BLBj@@@ARAA@?@IA@?@?@?@??{A???@@YBTA@iAEA@B|@BA??A@BMAFBBA?I?@@B?A@I{AA?yA@FGD@??BNQAF@BAw@?@@@A?_D@?ABA??E@A??`@@???@?@@??@@??B@?A@L@fN?@?@@tC??AgG?B??????AE?A@|C@???@?@qN?@????@h@A@@AB@@?AkS@@@@?d@?@@@BEfDA@?r@BBAA@OaOABBBeF?BiLA@j@?A?@@??b@???ABGBA??@A@?@@@rE??uL@@@??A@?@@??B?@@@?YW@jG@@??@?w@He@B@B@@AB@?B@@????@?AB@?B@DAB?A?@?S?A@@@lJ|@?AAB?@A@???@?@?B@ADkAA@?@?[@@????@BtBwEP@D?@@?BApBY??@@EA?gI@?@?W@?@??@??@???@?AAA?B??@AUB`@A@@?A??@@SQ?nB@??wN@B?AEBA?G???uS?BBA?B?w[BbB??A@BA?@@HG{KT@@AA@@|F@??@@@?AkSC?@VK@AC?@JiD?@@A???@@?HD???X@@?@??SA@t@B@?A?@?@@B?cR???@@@~@lL_@?FTSB??uI?@??@????@@@@???p@@AA?@@???BSA@@?@@N?Cd@@BA??@@?|A@BB?gFiD@n@M@A??@??A?G@@???AA?@@?@}MiA??@AAxG@FTA?@qC[D@?}E?@?@A@@?Ah@BP@@nD?FA@BdA?A@qAAAC@gDBA@`CAA?@@???A@@?@cI@?E@z@@@?|A???N?W@BHAA?B@?A@BBiLDA@pAFp@AlH@@????@@?E@A??ZA?@K^A@b@@C@Z@E?@?@R@??@@_AwS@@D??@??@?cF??@?@?@?BBA?@B@AA@?T@@???@v@???B@??}BB??iAAdABAyK@@??@|@?FRgB?@@AHI@Br@kF?B@???@?oEiA?@?@?EA@?@C@@C?@@?bC@@A@G]B?kAB@????BA?AjH??FI?A@AA?@z@iN@@@BL????A?@mSE??BBlD?ABA_@@v@?AmF@kD@?@?????@??BB@kF?@jJ???E@A@BAYwQBAE@@?|@??aAAA???@?@AMG?@r[B?yI@@???@?@CA@?@?BBgHA?}I@?aC@jF?@@@I?HB@??j@A@V?WBv@???@@??Ac@?B~B?A@]r@@??BB?A?@@H?Ap@@???@oA@?@OKU????A~H@?B@?gAA@??@?@??@pB@LmB?@??N?@@????@@A??@bD@?@@@???B?@???BCq@BBtE?AAABAA@D@?A@@@?IO~[????@|[@A?@wJ@D@?@?ABBBAE@A???@@BExNVNaE@@a@vX?@?@AE@AhBAA@T?@@??@??@@@[gAH?g@@??B@@??@@HAlYBb@xBB??A@J@ABB@AJAEA?A@@??@@DdC@??@@AP??@??@??@?yA???@@@G@?@t@^A@????_A@?BA~NAByA???@BBABAE?@??wD@D?A@B@@@PA?@?BA@??A@?BBAABBABBA@@??`[?BAgPA_ABBAsI??TA@@O?zE?@?VdA@?A@BDB?H@BA?B@AABA@@n@@?B@ABuDa@A?BcAtF@wCKkDK@@?p@?WA@CL@?yH@BjBBzs@AB?AHV@@}AK??Q@B@lBzBA@@DA?@@??oD?gE?n@B@A@@j@A@EA`@@AS@@_A}@@B?eRX?@@AA@@B?KCRCABBB@YLC}Z?@@@??AC@AA@A@@A?B@_E@cBAK@IF?Am@@@AvHwSBBB@PBA@AuH@BFAAKf@BEBB@WJQ?A@???B?B@?D?@m@E`@@BZgFAQA@B@AmAE@???@@A?dA@@???ABBARlOBCBM@B??Tt@@BA@?BAA@BHCABA?H@B@ABp@@qAAH@P?@@A?A~BA@CB?rCB@@?ABBtF~AD@@As@@@@??kN?@}@H@???BwABBW?wFE??@?@mSVm@BAA@@_FOHGU??iH_ABABA@AB@CDA@A@lG@@AA?hATBAB?A?@@@AA_@@ABAAB??A?@A@@@BBA~AfA@AxA?BA@BB@@_E@xW?@@@@?@@???@????@B`ArJ??@?@?@@@?A?BuAB????@@iN?A?@@iDh@x@AB`E?B?B@A??[@??@?gE@??@B@A???@?H?@A@@{F?@B@?A@A??uJQ~KA@?@?@@A@U?AH??rB?I@F@@?R??@BAA?bS@@?AA@f@AZ?AA@xE@?@?@@?A?LAABH@@?@???@BF~@???K?@@CA@D@?@?@?A@??@bBB?|q@BA@???@?@???@?@???@@dB?A@@@@?F??Jl@?A@@@??AB@\JANAA?@@?@?A@D@??A@dA??B@}KH?B@??@??@?BBHB@@aF?A?@@z@iAT@@????@@?A@A?fB@zJpA@@v@rE@?@??[PA@@????rS?@@W?@f@WAB?@?@?@????@@fAO?W@?@@@A?\?@@A@@AArW????@@@BkAyB?Bx[yBR@@YwJ??@?cAD@??K@?@`HrEb@@@A??@??@BB@@AjL?EA@mG??@?@?@@@A???@?B@??Mlt@@@??@EAyAvBP@@D?@|C?A?@B@@iFAwBA?G@?@?z@?G@B?@F\t@@FAA@????@@?C@@B@@A@@@?BD@?@???A@BQ???@A??@_DsE@??@@@wRAA@@@cB?A?@??@@{@`A??Gb@HeAfGpKDBABAAA????@?@???@@X?OA??G@A??K@L@?????@?@??@??@ABB@n@BB????@@G@?xC@@A??@@A??@@M^DiC@@????fA@A@??@?aApADAAB@?Fns@??@?@@@lAO?ABC@MC@wYA??D?AAwB@s@@????@A@@tEy@BA@AB@@?AtB?AeBB@@???jB@@??APB@?AB@kHJ?I@@??A@B?kP~[?AABDHI?@?tF@@@@r@MABByAMBA??A?@@?@BvC?d@?@nA?K?uX?A@kAArV@eC@??@B????@@@e@H?@?@@@AJ????@??@??@@sB?@@?cDJB@?M?BB?rj@|CBJA?@?B@}D@?`D?@?~@@@e@?x[ByAk@@????@@?B?@A@?A@@????@@AA?????@g@JBBA?@@??@???B@A??@@ACBA@t@??@??@Bks@A???Txq@_@w@?bBCAB@@A@BAB@??^qD@@??@BiD@@?AhB?@????@@??KO@?}CM?@AA?WAAqFBV?@@kC}@Wg@@?BA?@@E@\BnD@??n@BAEU@oVr@@ED?A?gH_FO@@?IAmD@?@@AdA?x@BB?BgE??[FGG?B?AB@A?G?@EnE`NBmF????qA@AB}AsC@?@?@F?@?H?@`P@?@@Qu@@@tLvCF~AZ?dZA@@A@@??@?@B????A@@?@?@?????@@vJ@kEABBpp@B@??BA@???@??@?@?@??@B?HA@SBAAkA?vCH@B?A????@?@DA?BB@B?uGqAB?A@B\??BBA?BB}@p@@?@@@??A@_A@?dA@B??F?BBs@@@?A@C?AB??AAA?@??@?@oA?@@@??i@@BvS@?@?l@A?E}CD]yAWB?}H_Ds@@@?A@BDRBB@@Y?@@?@?@@DgBCAA@A@?@BAA?B??@?BBCi@BBA?A@?@xH?AA@?@?Ak@@@AB?@A@?@@Av@Hd@BAAB@?r@?@M?@DGF@?zHABB@AoCBiC@G??vt@??@@??@?@@A?@@lFA?@DA?A@nB??@@FBs@@???@?@@Z@B`D?AyAB?@?@A`AbD@@??@?@h@DzX???@?@bBjDwA?A@@@HBWF?@@?_IjB@@???A??@A?@?@@jOB@KA@@BAL?xBAB??@B{@zC?K@@??Al@B@?????NAA@B@I?????@?@`A?AA@@?DA@@?AB?BBdD`AAEA@@vRCIT@xSID?@n@@@ySE?NHd@@@M?@?C@BAsBpL?_ZBT?AABA?@@?@@fL@?@???BBFbO@@?@????@g@AbD?@DA?TBW???k@Wh@BAlMBA?A@@HBAzH????@@@m@@b@B?@@?@@dJ@?@?@@A????@@??n@????@?@S???@A??@@??@??@??@A???@@@w@?AU?@D?sB@A@@@DA??EqFt@@^@f[qS@@@nGQB?AA@@AYBr@?@zC?kFS@KBIFPBABDDUBAHX@@?@?@@@A???@@?A??B@@?A@o@??@@AB@@?????AB@ABAA?BA@A??BAzHA@??@?n@@E@?GzAS@cB??S@Y{CABV@@BJ?A@@?A?C?ABAB@?@@FA@iFIwA@@h@dCBBD@AEA?ABn@???@??@@?@???@@@cDA{@BgAAmR@???@@ALB??@AB?W@??CA@@?@J\AH@???@Get@JA??@?@qSnB@DBj@B@A@BsDA@@???C~A?@ABBB?f@A@@?@x@?A???BABgDAlA@A?@n@M?AEh@pAB??@@??@XA@BUsC@??@@????@@??@?@?B@FHnA?@?k@go@A?@??@?@@K??AAAB@@D?????@?@@AB?Br@a@A@oJU@DgJAlBG@?@@ps@@?B@@??@NzABd@?@D@?@??????a@@?@@AfFxL|A@?@}BHaEAkH@@@@A?|@CBGyHhB@@GCA?BAd@P??@?A@A@????AB?@????@@?@iA@AAA@?@?A?B_@@A@?BF?@?@????@?@??@?@???@@?B??b@?BB?A@??@@?@@??@E?Ar@????}DwS????B@A?D?@@@????@@?@@D??@@??gR?B@G???AC?_@D@}BAFB@VB?A@@@G???@@hAA?@??????@@IA@?@?@C?@????@???ECEB?AN@@A?A@AZA@dA??@@@Y?A@BhYB@??@@???@@QOnAy@@???@??@BmC@????@?BA@@Av@n@@A@A??@?@???BP?AA@ED}@?@K@@@A??U??@BD@@NB@A?QK?A??B@?B?ABA@A@IA@@Lr@??@??@??BAAB??@@?@@?fB?EzP@HHAuFk@@?@???@???@????@ve@B?BA?@??@@@p@A@BbCX@?@@~j@A@G??@??@@???@_@lA??@EKA}t@?FAB@@gFbCcB?BBAA@B?iO??jJ@@???@@f@????@?dSEq@@@?A???@@@A??D@@????B?@???@@AUcH???dX@??mN@AA@D@?A?@@QC??@??@??B??B?C`YA@@???L@PAT?@@?yB??@@@@RYB@uN?hA??BgGB@FA?Bj@b@@@lCO????@@@@kHAPAAAB?A@@A??@@?K{@R@PA@A?@AcC@r@F@@?`Eg@??@B@@wA???@P|G?@@uAA_@???@?WIdF@??@@??A@@?????@@E@?MAB?A@@TA_I@@??@?BA|A?@?A@BABBA@APMBEAFGB?@@??B??B@B@x@~CK?lEAcAaB@gLA@@???@D@@lEB{AxQA@??@???@?Z?@?@NA@@?A?A@_EAA?ACE@?^Fm@lApEDBt@AlOA@D@cBdEwA?@?@@@?A@D?ABB???@?@???@HTA@?BAAcBA@??@???@@?@??BABALA@_CLACABGAA?AA@@@TK?I@AFTI@?ABA??AA@?A?A@A@^@@P?A@@xA?EByJrp@BuAABBPBBABBBDA@EA@@_[Jj@@hB?aJA?B@?lA?v@rSA@AA@????B@AnA@|J?ABBlHAI?@BrDBA?@???@BA@@?CFDQxB@@uID?tJAB@BAi@@@A?@pCA@WBA@@?@DGBA@\B??AB@A?B`COkPRbB@AA@?nE@@DA@??A@g@MA??AUENA?C@BuA?BbB@@?BABB@wCxSfGjCB@MBBA@BA@?@BlAABSEA`@@A?A@AAB@??ABBsBwNxF?A@B@B~@?ys@{IGABBC?B@A{r@BBlAA@f@A}CBAHcCBgl@@dABByF?@AAA@@A???BEAA?A@@l@BB??@BA??BaC@@@DBAw@@@?B@@?AA@dF@V?@@?\mZ@@?AB@B@ZAvAB@AAkOPC?A@?@B?@?nBlAqJ@jC@@iPEA`@B@ALDA@@}F@???@A@@fB??BABBB@xLG@A?ABA?[A@@?D@AABk@AoA@wLBBAg@?@DIo[y@@g@?A@BBbAe@???tE@@HW?TBB???@@D?iF???@?A?F@??@??C?@??A?B}A@A@@pJO?BA@eACAA@B?@B?yCRB@A?@???@@|IA?@?AB@hG?fK@H]?@??W?@AOsHA??@BoCr@@@??@@FoEIUD`D?F?@???@?@GA@@B????@????@BD?@?_@@??AAeDBiD?@hC@~t@@@@@_E}B@@EBxs@@o@?@M?@@au@@B?A~F@x@A?@B?AAF@@j@?S@dLyB?@B???@@?@@AA@@A?IP@BAA?A@bEABD????@@uC?PjLJAy@BsAZ@@???????@???@@?@@D???rA[?A@??@@@?A@@A?@@????@??A?@??@?@@P_IAB@??AD@L??@BD?@AAA@@A@AB@B?Yb@?A??@@??@B@????BBB~IzAa@A?A@??A@A?J@B@N?{HABeDA???@@@pA?DA@jE?BA@?V@A@A?@nCEA@@?iYsJ?kED@qADQ?BfAkm@rNBBe@??@?@A@AIHBBbGG?JB@??AB?f@?@?@AA??AA@@???AAEjZA@??BAA@BwKE@?AB??lDAB@D|JAB?A?{A@@?}BAB?AABA?ABBSy@?AB@ABBB@ABMA?BBE|E@@B@??ABBA]g[@Br[?gBAABcL@AB@q@@W@@B@@ApBBA?{AA@BAA@@@C?@??@Er@M?@FMA@?BhAA?@?@???h@EA`KVA?@ADBBA]@?ABAy@OA@@??@AJBBABBjC@cG@?bBjH}YAB@WdA??BEfHABA@G@BDAB@BIjJAAB?xAqA?kBBVg@?B?_@@BA??@GAlJ@@@R?~@I@BFAuK??@?@?@?@???@E`Bp@ABKAG@cFB@?@AS?@B?ABEAB`D?IAB|[ABAA????@@@?@tE???BB@@AB@BB?@@??zGjO@????BBA?@@??@??B@?????J@@u@KmD?@???@BwAZA@@??@@`A?a@HA?@?BAA@???@LAD@????wB@ICAI@A?@?yP?Ad@OBFfOA@@at@A@??@?@?@Es@?B@ABBJGFAB?A@@@dJiAAB?iO????@@K??A@_AlLB?@A?@??ZJ`C??@?@uSABBA?A@BA@@?BA?BAB@nD??A@@dBBa@NIGABAsA@ABA@b@AA@?A@???BBAA@@bA????@@G@?@nC@L??sQ?nNA@??A?@?@DA?@@B@_G?@?A@~BpCiXAB@?BkLbAB@AAA@@ABABXoBBAB@@BA?~r@AGS@@@?AFBdHA@@?OAzC??@?@@A?vE@?@??@?AfO???B@A@??@B?BB@A@AABBAaHS@dOU@A???BBA?A?A?@?B@BTHABE`@BiSAAB?AF@@A??o@@?@??A{AiC@@_@@kAA?@D@?BfB@EAx@iChA???@BDb@gR@B???AyJ?fG@?hDB@A@@?TH?@@?@?@???s@tE@@nARE?T@?@?BA@BFZ?s@?@@AB@BA?@@GA?@@?t@??@@AAB?AA@AAAH?kC@?DO??@Dc@??A@@??A?@@AA@BAB@BA??FB?[zBGBjC@?A?@@DALBDB@BAW?@BWAN@BoD???@@?BAA@?@@?AlHBAB??@@??@?A@@A@A@U_u@P??@|k@?@nABC@GS?gABAdZ??kBB_@wJ@{[?B@wRdGEAcABDcDGnE@@????rK}B@B?@A??~I?A?AAAnBR??Bp@ApBA|E|@BBAgI?kCIAHB@mGyJA@BA?D@kO@????@?@QM?mG@BC?f@?AGABBABBBA@?A@eAAi@}Ji@qBi@i@i@i@}JCi@qBi@i@}Ji@i@i@i@i@}Ji@i@Ci@i@i@i@i@i@`\i@i@i@xXi@jt@i@i@i@i@i@`\i@i@i@CCi@i@CACBCCCDCECFCGCHCICJCKCLCMCNa\Bb\DCOCPCQCRCSCTzSCc\UCVg\SCWCXCYCZC[C\C]C^C_@C`@Ca@Cb@Cc@Cd@Ce@Cf@Cg@Ch@Ci@Cj@Ck@n\l@Cm@Cn@Co@i\Dd\p@Cq@Cr@Cs@Ct@Cu@Cv@Cw@Cx@Cy@_KECp@p\r@r\z@C{@C|@C}@C~@C_AmOp@w\s@s\`At\v@v\aACbACcAlI^l\`@CdACeACfACgAChAy\q@q\s@Cz@CiACjACkAClAa]lACmACnACoACpACqACrACsACtACuACvACwACxACyACzAC{AC|AC}AC~AC_BC`ByLaBCbBCcBCdBCeBCfB~\r@x\iACgBChBCiBCjBn]bBo]dB|SfBb]tAc]vAe]xAg]zAi]|Ak]~Al]`Bq]s@_]{@CkBoG_@m\dA|\fA}\lBCmBCnBCoBoOpBCqBCrBCsBCtBCuBCvBCwBCxBCyBCzBC{BC|BC}BC~BC_CC`CCaC`TqBz]sB|]uB~]wB`^yBb^{Bd^}Bf^_CsOaCh^rB{]bCCcCCdCCeCCfCCgCChCCiCCjCCkCClCCmCCnCCoCCpC{LsBCbCn^dCaTfCp^hCr^jCt^lCbTqCCrCcTsCCtCCuCCvCeTvCCwCCxC_T`@{\yCvOdAw]gAClBy]nBoOuAd]wAf]yAh]{Aj]}AnO_Bm]TmIbCw^eCuOgCq^iCs^kCu^mCCqCcTrCCsC}^uCfTvCgTxCCzCwOvAs]yAb_@|ApO{CC|CC}CC~CpD_DmFeA{SgA__@mBqOoBmItB}]vB_^xBa^zBc^|Be^~Bg^`CxOcCo^eCe_@hCz^kCiTqCi_@sCk_@vCfTwChT`DCaDyLbDCcDpDcBp]eBo_@fAx]mB~St@z\w@CdDCeDv_@dCx^gCf_@jC{^mCh_@rCdTtC~^vC|_@xCC`DoTeCw_@iCg_@lC|^rCdTfDCgDuEwAa_@zAu]}Ad_@`BbKgAp_@nB_BxAt]{Ac_@~Av]TrTyAn_@}AqTTnTu@u\w@~_@hDj`@zAg`@~Ak`@{Ai`@_Bl`@|AjTiD~Sz@`]jDm`@kDClDCmDoFdBsT}AoGnDCoDCpDCqDCrDCsDCtDCuDCvDCwDCxDCyDCzDC{Dn`@eBzO|DC}DC~DC_EC`ECaECbECcECdECeECfEsAfBh`@lB`_@oBmHfCy^iCd`@mCCgEeCgC_`@kCiThECiECjECkEzOuBi^xBr_@{Bl^~Bu_@aCmAhCx_@lCbTnCv^kEClEdB~Aq@_B~`@mBfa@nBoFmECnEwTvBq_@yBk^|Bt_@_C~CiC_a@gECoECpEyTwBj^zBs_@}Bm^`Cja@xBca@|Bha@`CwBoBma@yBga@}Bla@aCo@`Boa@zBka@~B`BT{O{Bda@_Cqa@|Bna@aC`M}BqDjC``@qCz_@tCb`@vCeTwCmTqEnIoDo`@qDuTrECsECtECuE{TpDtTrDCvECwECxECyECzEC{EpO_Bl@kCy_@rCa`@uCl_@wCmTaDzT|EC}EZlCe`@rCC~EC_FzT~B_U_C`b@`Cu@mCChE`a@`FCaFnIbFCcFCdFCeFeBaCXgEXqCra@uC~a@xCpTaDq@{C_BfFCgFvTwDs`@yDnH{DaKhFCiFCjFCkFClFCmF{OnFq`@vDCoFCpFCqFCrFo\n@CsFCtFCuFCvFCwFCxFCyFfKzFC{FC|FmA}Fq@~FC_GuE`Gjb@wDaUzDXhECaGXnCea@lE|TqDuTsDp`@uDdb@xDt`@zD`ArCgUuDtb@yDPrCj_@tCsa@vC\sC{_@vCta@xCCbG|@oCrBtCwb@wCvb@vDr`@xDub@{Dyb@wDqb@{D|@nCba@lE\~ECcGo@fEzb@xDhAiEaa@kEgKuCcb@dGuEeGCfGCgGChGCiGCjGq@fEtB`F|OaFq@kGmAlGCmGCnGCoGCpGCqGCrGpIvCc`@`Dc@cGCsGCtG`AuG|OvGCwGCxGCyG}b@yDpHzDoIzGrBfDeMvCxb@`D|LaDhKvCqD{Gq@|GtBjEtA}G|@kEC|GsFwChTbGC~GvEgD`T_HC`HiKaHLkEiKxCmIbHCcHCdHCeHCfHCgHChHXiHCjHq@kHClHoI|CyOmHCnHfCoHsFpHcMqHCrHCsHhUrDxa@wEya@yE{a@{EpOtH~OuH_PvHCwHCxHob@{FCyHCzHuFsDsb@vDjUyDnHfEx@|G{B{DwT{HC|HC}HC~HZ_IjAlEjM`ICaI_c@iGsBpCfBfE{BbIF`DZ|GrGfEtBkEsGcIaKcDrFhECdItAfEf@kE|AlEsGrGq@eICfItc@aIvc@jGnIgIChICiIkc@rHCjICkIjMtDpb@xDdMoGac@qGmBaFuElIva@tE_BmImc@}ALoE|@hEuEnIuc@hG`c@jGCoIZpIkM|Hrc@~HP~EtAqICrImIsICtICuI`BvIeP}HmAwImCxICxIcc@wGl@yIu@zIN{IC|IC}IjM~I}TxEza@zE|a@}AP_JZkCnI`JCaJuFrE~c@uEhAbJCcJ|Bm@FbG{c@uDiU~CnIdJCeJCfJkd@vDqc@zDqUpGbc@rGc@{IqDgJnd@wDpd@xDuEhJCiJCjJCkJrU~ACtHoc@wFCvHiMpCrDn@ClJqUqGl@|Gqd@yDjd@sEwa@uEuFvEgd@yEyU_BfCwIl@mJCnJdc@`HOaDtAoJC}Gfd@wElc@zEid@~AzUvF`CfEFzCFpJvOqJCrJCsJCtJuA}CCuJnAhECvGfMxGxUiJrd@kJwBvJCwJ{B~Cec@cHfc@eHhc@gHjMxJ_KUj\Rh\T|d@jJsd@zE_V_Bc@vGl@yJoFzJC{JC|JaDzDeb@iFfb@kFhb@mFxO}JdUm@~JtFeC~JbK_KC`Kq@|C{LaKCbKCcKCdKCeKCfKCgKcC{DlKhIXhKvUiKXrCkMjKCkKClKCmKCnKCoKCpKlUpG|BfEmKzEae@`BmHgCdKgFiUzDcMfG~b@hGvFqKsGrK}AoEhAsK`BtKoGuKeVbKhe@dKje@fKo@vIsFvKuEwKCxKc@yKCzKsBhEgC{KjAoEwC|KaChEre@gG`M}KfB~KeCwIjPvDod@{DhV{E}a@`BmAoHwe@}AnOtH{UxFC_LC`LeChClBaLwc@hGrDbLmV~A`VcL}AlEl@dLmCjHqGnECeLu@hEmAfL{BfE}c@sEXgLtB|GT~GaVrJyd@hLCiLCjLqDkCtH~FCqICkLrDqKsIqGsU~Hle@iIgCmHClLqHmLC~KcVVk\T`MnLwGfEwd@xEhd@{Enc@vFCuHcPwHmAoLdBrGHaDmM|IsG~AC{CkT}CCmHCpLwCqL}e@tEtH_BwBwJdBrLlVwDaU|Gc@sLaf@RoMwJ`CtLyLXCuLCvLCwLCxLCyLsDzLC{Ied@}IOqE`A|GN{LqD|LlBlE{E}Lff@}IwCfEeP~LC_MC`MqHaMlPrGeBbMeEcMCdMxCnJse@cKie@eKke@gK|AyJdBNtd@tEwBeMl@fM`BtGaCxIc@gMxVuE`UcFbb@eFbd@tI\sLeEpCu@gEmIlKgViKpUsHmIhMCiMCjMCkMeErI~TlMkVmMbVdHgc@fHic@hHcCfEpPdKte@gK~T}ECnMCoM{TpMCqM}EdMrBsCdVwGgMyGuArMce@jFgb@lFq@sMuAtMbKuMCvMCwMu@qC_JhEzd@wG`e@kJud@`BvDsGFaHeEkLgf@{Chf@mHtVfEzf@eKuAxMcCyM~GxG`C~CfBzM~U{MC|MC}MmA|KoP`BvFoLtA~MpI_Nbg@fKoBlL{ByMC`N{e@iGlBoEmBdIo@oLaVaNCbNCcNCdNjf@xDfC~CaDeNrBfNfCmGqHfE|@oE_e@sEqPgNChNCiNCjNCkNClNCmN`d@iGfCm@\nNXoNu`@}Dv`@_EFdGtg@~Dw`@`Ey`@bE{`@dE}`@fEoFpNCqNCrNCsNCtNCuNif@uE{VzEpe@TtHtH~OcLl@vNdB~FmAwNu@xN_W{Exe@T}g@}A\yK{EyN_KOe\zNC{NC|NC}NC~NC_OC`OCaOsf@dFkf@ShKpHl@|LCfM\cGbKbOCcOCdOeCvGtDeOChK~g@~A~UwExd@{EjT|CyOxMpUjICfOCgO|f@kFuVuLChOqH}GqGiOoPvIbWjOCkOhAsLyDfEgg@gKtAqL|AoEhg@jG\lO_TmOCnO{H_BoG`Evg@cECoOCpO}GqOCrOzK`BuAzGCsOx@lEgKvGyTtOCuOeUsFeKuF~OwFCvOCwOuMT{HtHze@yFCxOCyOuf@uI}EzOdMoLgh@xEcf@}Aye@vFCcLxBcJo@{Olg@yDhh@lFug@_Ex`@aEz`@cE|`@eE{FwGgM|Oib@uDvToFcUqFfe@n@qPmKCiKth@yEyUtH{UvH{PzD|B}OjP~OC_Pq@~C{B{LuAfEq@`PeEzOme@lKgVnKoe@pKCoL|PzE_VtH{h@wHvM`Emh@dEvFo@pHaP\hKdWfOqCbP|VTmApC~h@aElWdE`i@bEwg@eErPeH~d@hH|Bn@XcPc@_FXbJF~GnWiKvh@mFmg@tEu@iHlIdP|A|G_h@Pf\Rc@nNrGePCbJjAaHeh@eFqDfPcMgPChPCiPo@qLgPvG{d@yGdBkHai@fHaDyMu@pIpIvGfMjPCkPqDlPrPmPq@ePqDmJl@nPCoPvWwGsP|O\fD\pPeEwG\qP_d@aImAvG_Q|OxMcEwh@fEx@fP|MxGhM|OmFrPC{MCsPCtPCuPxg@qNyg@sN{g@uNpWuEmAmGrBvP|MyGtMwPsWxPfWvLCyPCzPC{PdQbJCxPkVhGfCqLfCoL`WvFtH{CsD|P_i@gO~C}PfC~Pq@fIZdLC_QuB`Qc@pPhAzLmAqLuFaQsg@jGx@yJcC{O|h@mKne@oKhPoL`g@|Cjc@pL{E{JaWT`IdEaI|GsGoLFpCcGeEcCeNx@oExCbQ|KvFef@wF|UpCig@bNjg@dNgClLaIyJcCcQ}VdQvHvGqDyJ`f@zMbf@yEzh@vFwi@vHiMxHCeQCfQCgQChQCiQ`NfE_UjQ|@fPl@_IhAjE}VhNng@jNpg@lNrg@aIzOkQld@bPrBqPaHuHmPxHiQfQ`QwGc@lQ|PyDcMmQhAcP|AfPti@nKoWoG|c@rG~CzL\fNrPfJf@oENsGmA{Oli@rNzg@tNu@nQq@oQcg@|M|KpQei@gHnWnKmAfEfQqQuKyGaNxGC|Ohi@hGeVrQCsQCtQCuQCvQCwQCxQvUeJ|@yJFqEnf@_MhKyQfXwGeM~Ggj@hH~CsKCzLl@zQrD{Qyi@zEij@iGrDsFq@|QeJ{DmK}Q\~QZoEuAsO|FnMC_RoBnHgPwGoF`Rbj@oKhPoGgCoLhCaRc@bRoj@`MlQwF|UwHdPcR`FkOmA~C|i@iNog@kNqg@dRCeRpQzLvV|IbHfRiVfEpj@{Edf@uH_PxFc@bJfj@}MvHoNsAgReCsL\zKsBaHtAaMuj@pKlUqGoI~Mq@mLsGhReMiR`IjReBeMqj@jGad@zDcCkRq@aMo@|GeC}F\gM{ElRZmCxi@cN{EmRvD{Io@tKFaDdBeIpH~CcGoLoIoLeEnRbHvHhQeQgXgQCoRtI}GtPpRCqRaQyGmAkL\bJmFrRCsRq@{Ozj@}AqTtR`IoOnh@ThA`FdB{CyWjPyWwGCjPmAxNuAmHeJuRui@}CnPpLhN{IbNpRl@pCXiEbNtGbk@|Iik@~Awj@jN}i@mNoQxG|B~KtDvRtByJtAcMqWQgCwRlk@mHoOxRCyRyh@pFlb@zRnk@kNxj@eReQuHmPpCxC{RdWkIfC|RbWcOsF}RdB_BoIiDwBbMc@~R_g@yGqi@|CyOwRwQpOkM_ShWm@~J`SCaSrQoLkh@nOuEbSCcSCdSCeSaHfS|@|GrQoGo@gSrFaF~PbJ}k@pGxMhSaQ|O~CpCrQpGfQ|JoN}IeCoNCiS{XpLaKjSCkSClSsImS{H{CiKbGzDfMal@fEuEnSsGoS|KpSFqSq@qLwQdE|QwFfUyFCzFCrSCsS`BtSCuSCvSC}KsUwS_BxSci@iPji@{MuMaRcCbIaGxGsD_Fvk@vG`WpSsTxKxk@uOqh@tFnb@vF|j@yFoU|FtAySeClG`L|GqXoM`AyJfI|OnQyGuN|OrTrHyc@fOeWzSiV`Erk@lN~i@hGuB{SjLqG{FxGlE|OvOoDua@fACbOfh@dOuQwHdPeQvQhQtDsL{E|SvNpCXkEwl@rGpD}S}h@{E{j@wFgNpC{L~SaDqLl@{GpNyGXxI}KdMtBhElDcJaHcLsNvOiKzCc@_TCfPyX|IeCaH`B{LeJfEuA`Tq@qIcCuRfl@sE~WaTCbTaXaItPtGyG|GeCcTmHdT|l@}Auh@uHmXfJxUcSzk@eSgCpLoTeTaRjIjY~A`VuH`j@eQvQfTXzIam@tEvEqPkYtH}PpCmAcTmYuE`IgT~ChTbRkIyQ_B`MeCeEoLej@sNdKgGnYvFzi@wHhl@sS|BqL_YiTqCjTaHkTaRsHoBpLXlTtN|ONtGtNyGfm@`BfWmTsGnTsNvHhQoT`FpToBqTl@oPbl@kSeJyMgm@`Cbm@hGxJ|OtDrT_j@eJtDbJpk@yRqk@qFCzRc@lEu@nC{f@qMgUaIqDsT~XtTCuTCvTCwTzKgSsIxTim@tNjj@sQkj@uQmj@wQqYuH{NwHdPyFkY_B`IyTCzTCnRqG{TxYwFgN|Tcm@dSlQaPxN}TuVYC~TC_UC`UCaUCbUmOcUCdUxIeUmOfUgY}IsYTpYhGtm@hGvGoIyEaJwk@TkMgUpPhUpHeNxNiUCqLsIjUl@lCaKkUClUCmU~JsFrh@vFmPrSdQnUgCxMCoUvf@iMbHpUwOqU`l@nTl@nJ{BrUnm@lSoBsUtArI}Q}Cee@rFpl@uFiWxFfKyFmLrSXzKeE~MbHxFCtU_BeUCuUzDlPoNvUbYdR{BwUxNxUdBkGyQtH}P|TvN|TuGdMlKyUab@dF{KzUrB|G`AhEpIoNlh@aElWoOmF{UC|UZ_QuYeC{K}UiKdGqm@iG{BuRjk@jPzW~U{F_Vwm@tQlj@vQnj@xQoF`VaD|Ghn@mHCaVCrKkWbVsMnHhj@oKaDoLbn@cVCdVCeV~QcJXjHtAoLkn@uUrm@vDkb@pFhN{LxOfVCgVhWhVin@vFrl@yFjn@sSfCzMpKeLq@iVol@m@bKjVCkVClVCmVmk@qRaRnVCoVCpVtAnRvNxHoUyHXsLsFqV{HeI\vGlKrVcn@mU}WwLlf@yL{BkRpPsVc@aG`n@iG_JvGoFtVCuVCgRl@sT{PeNhRzTzUpSl@gJum@uTvm@wTeQcL{WoPvDtG_JaHxRtH}PxHaj@gQ{H~FqVrIZyJgn@jMxf@fCtDsG\vVeCvVbRwVao@pVaHxV{EyVePzVC{VCmPdl@|CiRvHhQyFmL{Fpc@zHxn@dVC|VC}VC}Tkl@hPmAtLyR{RdQaGlPxTuA~VzKfE{i@`CtReQzl@iQ}QtM}RfQyG{RcCtRo@tGo@oQ|B~PC}O|N_WpY`WiZgQkQiQoRpSbVaWCbWCcWCdWCeWbo@n@mb@tFql@wFzm@zHoRvFjm@pClIfW}m@gWChWCiWCjWCkWxMdEaNyGvW_VrDlJoGlWCmWxl@pDtTfAyl@cO`UnWCoWCpWCqWCrWCsW{n@m@{YtF{o@vHiM|ToBuJ|TtWCuWCvWgp@uOeUtFvFwW~PxW\yW_BzWcC{LXaLap@qD{SbOeo@jGeZvF~C{Wun@lLaD~C}WyPni@{P`SuHcPrSqE|WaXuDqe@{Dym@`B{BcQoR}WeZpSyYxHko@hQsp@wFgNrS`I|G{m@eShZiPmA{WrGzKoo@wHxCyICbQzS~WC~WC_XC`XvD{Lok@Rc@oNcOaXhUbXCcXoBwRmAbJpn@jG|NuNfRcJ~XdXfn@oUll@sPCeXeQxVc@vRrBqOcGfX\uCq@gSnYpSup@T\oNXaHmAgXvEhXvZcXfk@qRXuGuBiXsNwHoh@~VpHoLpZjXCkXXyJtD{IcCaPCwU_BlXuYbPfCpCyR|GdV_Vrn@uQxm@xQso@eV|NmXCnX_StF_KoXCpXCqXCrXCsXCtXlKuXCvXyk@n@{LwXCxXxo@dWyo@lUdn@n@lIyXbE|OtLkM`QxG`BzXjLmSfQ{XC|Xl@}XbRfOtl@~AuZS`ScLhNsG{BqLgCrM_AoIvFsF\aHzK|Qmn@cFdK~Xak@dNmAiClZoWdp@qWfp@sWhp@n@zo@uFiWvHpo@zF`P|FC_Y{BtRXvVtA`YqPaYgCzMfC`PnAaH~e@sJChLCbYCcYCdYCeYbHvO`BtRfB~CeBwJkRfYfB`PmAsLdq@|Iq@`Bpq@zDqX_RzNgYeO|TdMpGqWzN`h@hYpZzPco@xLtA|Gvn@rKkWiYxp@vHtq@|FoIfEvHwGb[jY_SsFen@wFyp@sS}f@vM~f@nBqGkYzRpRqn@kPC~UuQpCiRlYCmYCnYuK|Oq@xUop@xK`FoYsYtKsFpY~YyFkRqYaDfE}n@n@_KrYCsYCtYCuYCvYCwYCxYjr@sYkr@uYmr@wYor@yYCzYC{Ypr@tYlr@vYnr@xYsr@uYqr@xYCyYrr@|YC}YC~YCpRur@vYtr@yYvr@}Ywr@_ZC`Zxr@aZi[bZi[RjYrGq@oJkk@tGul@fEhYtG{NpC{RmHrGcZhO`Q}RdZyDtL{R}CnPlLyD{OfCfEjPeZCfZiq@gZFhZtRyFmLdMeCzKkZhQCiZ{EjZyYpCpK|JCiT_ZtGhCkZdMlZCmZ|r@fZ`p@mWoGnZCoZ~CjCn@oIoFpZ_m@wOyQ{CuPlLrGoLfs@|CxR~FqVcMCzOuAqZmYrZrGbJ{XfExh@vDjUsZoFtZCuZCvZcC|Gyq@wOsFwZgCuJnRxZqGyZo@aXzNsUsRzZ|BzM`r@wH{E{ZpIiRdSeXln@eR_B|ZC}Zmq@fCaHwFyn@oFmWzR~WxPFvKc@~ZgKqV{BeN_r@`ECiYqp@fAbp@dO~GyGu@cPms@pFuQxHds@zDxJ_[iStGvDaHqHqLmAoNsRoVmF`[{NxHtH`BmKa[sZyFqo@_Y|Kb[pWrZb[pWep@rWmp@hV|n@wFfUcRhAzK`S}WCxVeBoMaDaPcSuHcPxHfKsScs@oZn[pCl[sSuRqLuA{OxBaGXoCo@c[e[hLwq@cYsRd[qGe[vNrSrD|GvE|GlVoFcUf[ws@wFgNxHwp@iQc@g[~n@kV_o@mVCvJwG|KhK~Gqq@dF~ZTvFlJlQxF{q@}Iss@pVkZmY\g[t[iL_f@h[Ci[{BaPcS|GnT`A}_@j[q@zMe[tJ|Jk[C|Wq[eQgXl[gq@vQq[cRsZeQvQmY_Bm[Cn[~R}Oc@zK`Fo[qDhC\_TsF~Gbt@wQxYfE~q@{PdKp[iSpRbH|GfX_VsSfQjQiZq@oLoPfEcScLfZzZdt@xQ{HsMkp@uWlp@sW|ZsFdr@xFnIq[c@wGnl@wGsP_[|Pr[sSdZmXmP`Fs[wn@pKqs@bO\lQu[vHtG~GwZcJpIqVoBgY{Zt[hs@oFmWrFus@vHiMrSiOiQ_Bu[w[v[hOwMxRnRct@n[vs@wJhOmPk[w[_Bx[br@lUlq@tFmVrGkRiGoHoIrs@qFjCkRtMhK~Y_LcVy[Cz[C{[it@nB~PsLft@xGeJ{Lmo@{VbYmNcOgSxVrZc@aHvMrK{ZnX|m@wU}q@{Nah@}Nch@_OC|[C}[lK~[CnWcp@jY_S`SC_\C`\Ca\~m@dUbHb\Cc\`t@jLCh[Cd\es@eBwOe\vFbLcO{OuAiDnt@aI\vN|KuH|J~UeJbI{K|G{P|G{Of\}TrFkt@yGmt@fJNaH`AfPuRxUzn@gVpt@_\rt@g\Ch\Ci\Cj\tMoNhOfJ\k\eOpC{Nl\h[`Sqt@`\Cg\xt@i\Cm\fC{Ogt@wHnAvGjl@}KfZoV~s@lV`o@_R}QzGbs@mZoBn\wo@bWkq@eWcr@tFip@wHC|TtHkGCePuA|Gp[aECo\eOrS|Qp\hr@xOCq\Cr\`BqLbHwHn[rS|s@sShAhT}r@Rer@qRgC~Vk[{KiZhQvK~K`Fs\qGt\eOxHfKxO{t@yO}RgQXfPlIu\sSgQhKwCuRfEil@zX{RfEsFv\tHkHp[iYdKw\lo@oLaH}WCx\t[bYhRkHts@zFl[zF`PyHh[tF|Ny\gKoNtMnU|VtK`Fz\pQ|PF{\fo@uVjq@vX|Z`StDzKoBsMwt@wEdUfQjQnYxM|\u[vOtp@vD{VyDlZ}\C~\CiX}E|G}[TtA~C_n@RjJ~K|QeNtDaGaW_]pHyM_\rSiRxFyt@xHhZ`]aKa]zt@uFsq@wHtDlEst@h[_\{Fro@b]XoE`u@Sot@|Nbh@~Ndh@c]|t@Scu@TCd]Ce]Cf]Cg]Ch]Ci]Cj]Ck]}[_]bu@T?l]</div>
<div id="globalStacks" style="display:none"></div>
<div id="methods" style="display:none">@??A??B?????B??C??B?????B??D??B?????E??F??C?????E??G??C?????E??H??C?????E??I??C?????E??J??C?????E??K??C?????L??M??B?????L??N??C?????L??O??C?????L??P??C?????L??Q??C?????R??S??B?????E??T??C?????E??U??C?????E??V??C?????E??W??C?????E??X??C?????Y??Z??B?????E??[??C?????E??\??C?????]??^??@M?KC?_??`??P??_E?_??a??@@?wF?b??c??PD?KW?d??e??`@?CL?f??g??o@?KC?]??^??pS?WC?h??i??@U?wL?j??k??@F?WC?h??l??@A??G?m??l??@H?KF?n??o??p??_@?p??o??`??{A?q??o??`??cB?r??o??`??KC?s??o??@E?{O?s??t??@C?wp?s??t????????u??v??B?????E??w??B?????E??x??C?????E??y??C?????E??z??C?????E??{??C?????R??|??B?????E??}??C?????E??~??C?????E???@?C?????E??@@?C?????E??A@?C?????E??B@?C?????E??C@?C?????E??D@?C?????E??E@?C?????E??F@?C?????E??G@?C?????E??H@?C?????E??I@?C?????E??J@?C?????E??K@?C?????E??L@?C?????E??M@?C?????E??N@?C?????E??O@?C?????E??P@?C?????m??l??`D?CF?Q@?l??@Z?CY?R@?l??@A?KO?R@?l??@U?_Q?R@?S@?UN?wR?E??T@?C?????E??U@?C?????E??V@?C?????E??W@?C?????E??X@?C?????E??Y@?C?????E??Z@?C?????E??[@?C?????\@?]@?B?????E??^@?C?????_@?^??pA?Cs?`@?^??P@?kf?a@?b@?`E?GE@a@?c@?pc?WA@d@?e@?pE?KZ?f@?g@?PY?[d@h@?i@?@G?gUBh@?j@?`D?[WBk@?l@?p@?g^?m@?n@?P@?ST?o@?n@?@?????L??p@?C?????E??q@?C?????E??r@?C?????_??`??@A?cE?s@?`??P@?GH?s@?t@?`I?CG?u@?v@?pW?gF?w@?c??@?????Y??x@?B?????E??y@?C?????E??z@?C?????E??{@?C?????E??|@?C?????E??}@?C?????R@?S@?@`?gS?~@?l??@@?{A?~@??A?@?????Y??l??B?????a@?b@?@V??F@@A?^??@B????AA?BA?p??GB?CA?DA?PG?GC?EA?DA?`B????j??FA?@W?GN?j??GA?pA?gO?h??HA?@B?WH?h??HA?PG?OI?IA?HA?pE?WQ?m??HA?`D?[D?Q@?HA?pH?O`?R@?HA?@A?SB?R@?HA?@a?CE?R@?JA?@`?OG?~@?HA?@@?wB?KA?LA?@?????Y??HA?B?????EA?DA?pA????MA?NA?pF?GC?OA?PA?PA?{y@OA?PA?@?????QA?RA?B?????QA?SA?C?????QA?TA?C?????QA?UA?C?????QA?VA?C?????QA?WA?C?????QA?XA?C?????QA?YA?C?????QA?ZA?C?????QA?[A?C?????R??\A?B?????QA?]A?C?????QA?^A?C?????QA?_A?C?????QA?`A?C?????QA?aA?C?????QA?bA?C?????QA?cA?C?????QA?dA?C?????Q@?l??EZ?CY?QA?eA?C?????L??fA?C?????E??gA?B?????E??hA?C?????E??iA?C?????s@?t@?eI?CG?QA?jA?C?????QA?kA?C?????_??`??@N?KF?_??lA?PR?SH?E??mA?C?????E??nA?C?????QA?oA?C?????Y??pA?B?????E??qA?C?????E??rA?C?????E??sA?C?????E??tA?C?????E??uA?C?????E??vA?C?????j??k??PJ?sC?j??wA?@A@sK?j??xA?PD??H?AA?DA?@B??B?a@?yA?PN?sS@d@?zA?`^?[Y?d@?{A?pC?KJ?|A?}A?P@?w]?~A??B?@B??~?~A?@B?`F?Ke?m@?AB?@A?CJ?o@?AB?@?????E??BB?C?????Y??CB?B?????j??FA?pD?gM?DB?EB?@@?SL?FB?GB?`??SE?FB?HB?pL?gD?E??IB?C?????E??JB?C?????E??KB?C?????E??LB?C?????E??MB?C?????E??NB?C?????B??OB?B?????QA?PB?C?????QA?QB?C?????QA?RB?C?????QA?SB?C?????QA?TB?C?????R??UB?B?????u@?v@?qN?OF?s@?VB?AM?cO?QA?WB?C?????A??XB?B?????QA?YB?C?????d@?zA?`W?GY?f@?ZB?aF?K[@f@?[B?aH?wY@~A?\B?qI?cc?d@?zA?@K?kX?|A?]B?@@?GS?^B?]B?PA?cH?~A?_B?pB?gy?~A?_B?pU@kk?m@?n@?`B?KL?R@?JA?A`?OG?~@?HA?A@?wB?QA?`B?C?????QA?aB?C?????QA?bB?C?????QA?cB?C?????j??wA?@o?oJ?dB?l??AA?SG?dB?l??QA?cG?dB?eB?aG?WI?f@?g@?@E?kc@f@?fB?`N?_]@_??lA?pB?{G?gB?hB?A@?CU?iB?hB?q@?wI?jB?hB?AA?[|?kB?o??q@?Gd@lB?o??aL?Cb@Q@?HA?@i?Ga?~A?@B?`D?Ge?mB?nB?`A?O\?o@?oB?PD?oHBE??pB?C?????E??qB?C?????R??rB?B?????L??sB?C?????L??tB?C?????E??uB?C?????E??vB?C?????E??wB?C?????E??xB?C?????E??yB?C?????E??zB?C?????E??{B?B?????E??|B?C?????]??^??@N?KC?d@?e@?PN?gZ?}B?~B?B?????QA??C?C?????QA?@C?C?????QA?AC?C?????d@?e@?qE?KZ?f@?g@?AE?kc@f@?fB?aN?_]@~A??B?AB??~?~A?@B?aF?Ke?m@?AB?AA?CJ?E??BC?C?????QA?CC?B?????E??DC?B?????h??i??pX?KM?E??EC?C?????\@?FC?B?????\@?GC?B?????Y??HC?B?????QA?IC?C?????B??JC?B?????QA?KC?C?????LC?MC?C?????}B?NC?B?????}B?OC?B?????}B?PC?B?????E??QC?C?????QA?RC?C?????SC?TC?B?????E??UC?C?????QA?VC?C?????@A?^??AB????AA?BA?q??GB?QA?WC?B?????EA?DA?@A????XC?YC?`???J?XC?ZC?PP?KG?[C?\C?p??kC?]C?^C?q??[SA]C?^C?Q??GVA]C?_C?aA?O[CQA?`C?C?????QA?aC?C?????E??bC?B?????A??cC?B?????E??dC?C?????E??eC?C?????E??fC?B?????QA?gC?C?????f@?g@?QY?[d@h@?i@?AG?gUBh@?j@?qE?[WBL??hC?C?????E??iC?C?????E??jC?C?????E??kC?C?????E??lC?C?????E??mC?C?????E??nC?C?????j??GA?`??cO?oC?pC?`V?OJ?qC?rC?a??oE?dB?sC?qM?wA?QA?tC?C?????d@?{A?qC?KJ?|A?}A?Q@?w]?B??uC?B?????E??vC?C?????QA?wC?C?????E??xC?C?????E??yC?C?????j??wA?Pf?cJ?j??zC?aH?oL?dB?{C?QE?wN?h@?j@?aD?[WBk@?l@?aA?g^?d@?e@?aL?_Z?f@?g@?`d?Ge@d@?e@?QN?gZ?o@?AB?A?????QA?|C?C?????E??}C?C?????E??~C?C?????EA?DA?AA????XC?YC?a???J?XC?ZC?QP?KG?E???D?C?????E??@D?B?????QA?AD?C?????QA?BD?C?????QA?CD?B?????QA?DD?C?????B??ED?B?????Y??FD?B?????d@?{A?`@?{I?B??GD?B?????j??wA?PC@{I?a@?yA?@??CR@}B?HD?B?????}B?ID?B?????j??wA?pr??K?XC?JD?`J?_N?A??KD?B?????QA?LD?C?????d@?e@?PB??Z?|A?MD?@@?OV?^B?MD?pD?CI?~A?ND?PD?wz?E??OD?C?????QA?PD?C?????QA?QD?C?????E??RD?C?????QA?SD?C?????m??l??pC?CF?TD?UD?AA?_X?VD?o??AB?wC?TD?o??QH?CQ?E??WD?C?????XD?YD?B?????E??ZD?C?????d@?{A?QB?CJ?QA?[D?C?????u@?v@?qM?KF?u@?\D?AG?WH?]D?^D?AB?kV?MA?NA?@L?WC?LC?_D?C?????R@?l??AI??Q?`D?aD?A??k^?CA?DA?`D?wB?bD?cD?a??CB?dD?PA?a??oa?dD?eD?qD?_b?dD?fD?QA?GT?]C?gD?qE?KQAhD?gD?QH?OK?}B?iD?B?????XC?JD?aJ?_N?oC?pC?pZ?KJ?CA?DA?PG?GC?EA?DA?aB????j??FA?QF?oM?XC?JD?aE?cN?]C?jD?aW?KJAhD?kD?qQ?GX?E??lD?C?????A??mD?B?????QA?nD?C?????B??oD?B?????j??k??QE?WC?QA?pD?C?????d@?e@?@G?KZ?~A?_B?@??wf?QA?qD?C?????}B?rD?B?????E??sD?C?????E??tD?C?????R@?HA?@]?{D?E??uD?C?????E??vD?C?????E??wD?C?????QA?xD?C?????E??yD?C?????Y??zD?B?????QA?{D?C?????]D?^D?QC?oV?E??|D?C?????QA?}D?C?????TD?o??AA??Q?`D?o??qH?SN?TD?~D?a??kO?}B??E?B?????E??@E?C?????E??AE?C?????oC?pC?@??cI?E??BE?C?????E??CE?C?????E??DE?C?????L??EE?C?????}B?FE?B?????E??GE?C?????_??a??A@?wF?b??c??AK?[W?b??HE?aD?SQ?f??IE?QJ?SB?JE?KE?qF?oI?QA?LE?C?????B??ME?B?????QA?NE?C?????u@?\D?A??GH?qC?rC?aD?sE?dB?HA?QB?kC?dB?HA?aq?gD?E??OE?C?????XD?PE?B?????E??QE?C?????E??RE?C?????XD?SE?B?????QA?TE?C?????QA?UE?C?????EA?DA?qA????MA?NA?qF?GC?OA?PA?QA?{y@OA?PA?A?????KA?HA?A@?wB?~A??B?a??{}?KA?LA?A?????XD?VE?B?????j??xA?QD??H?AA?DA?AB??B?E??WE?C?????E??XE?C?????E??YE?C?????R@?l??pP?SQ?ZE?[E?@E?_M?\E?PA?P]?GI?E??]E?C?????E??^E?C?????E??_E?C?????|A?]B?A@?GS?^B?]B?QA?cH?~A?_B?qB?gy?E??`E?C?????QA?aE?C?????]??^??`a?CD?TD?UD?@A?_X?VD?o??@B?wC?TD?o??@A??Q?R@?l??@??KO?E??bE?C?????QA?cE?C?????j??FA?AW?GN?j??GA?qA?gO?h??HA?AB?WH?h??HA?QG?OI?IA?HA?qE?WQ?m??HA?aD?[D?Q@?HA?Ai?Ga?QA?dE?C?????LC?eE?B?????u@?v@?pr?kG?u@?fE?`d?OM?s@?gE?PY?KR?iB?HB?@A?sL?dD?hE?PA?Ge?dD?iE?pH@Wh?QA?jE?B?????QA?kE?C?????QA?lE?C?????u@?\D?a@@wJ?E??mE?C?????E??nE?C?????E??oE?C?????E??pE?C?????E??qE?C?????E??rE?C?????E??sE?C?????E??tE?C?????R@?l??qP?SQ?ZE?[E?qB?[M?uE?PA?QE?_I?QA?vE?C?????k@?l@?q@?g^?m@?n@?Q@?ST?b??c??Q??CW?s@?VB?qR?sO?ZE?[E?AE?_M?\E?PA?AI?GH?QA?wE?C?????h??l??pB?CG?m??l??@???F?E??xE?C?????E??yE?C?????QA?zE?C?????QA?{E?C?????E??|E?C?????h??HA?P??WH?E??}E?C?????E??~E?C?????E???F?C?????E??@F?C?????E??AF?C?????E??BF?C?????E??CF?C?????}B?DF?B?????E??EF?C?????~A??B?`??{}?^B?FF?`E??J?E??GF?C?????E??HF?C?????A??IF?B?????QA?JF?C?????h??i??pX?KM?E??KF?C?????QA?LF?C?????f@?g@?aI?wc@f@?MF?AC?[^@~A?NF?QD?Kd?}B?OF?B?????}B?PF?B?????QA?QF?B?????A??RF?B?????QA?SF?C?????QA?TF?C?????QA?UF?C?????QA?VF?C?????Q@?l??QA?CX?^B?]B?Q??_H?WF?XF?qB?GM?YF?ZF?a??gC?QA?[F?C?????QA?\F?C?????}B?]F?B?????b??HE?qA?OQ?f??g??aK?OC?JE?^F?AJ?OJ?QA?_F?C?????`F?aF?C?????E??bF?C?????QA?cF?C?????A??dF?B?????d@?zA?PY?OY?QA?eF?C?????E??fF?C?????j??GA?a??cO?E??gF?C?????E??hF?C?????E??iF?C?????E??jF?C?????E??kF?C?????KA?HA?@@?wB?j??FA?PF?oM?QA?lF?C?????f@?g@?ad?Ge@QA?mF?C?????E??nF?C?????Y??oF?B?????]D?^D?qD?sV?bD?cD?`??CB?dD?PA?`??oa?dD?eD?pD?_b?dD?fD?PA?GT?]C?gD?pE?KQAhD?gD?PH?OK?A??pF?B?????QA?qF?C?????QA?rF?C?????E??sF?C?????E??tF?C?????~A?_B?`w?[j?QA?uF?C?????XD?vF?B?????u@?v@?ae?OG?B??wF?B?????QA?xF?C?????E??yF?C?????Q@?HA?qH?O`?R@?HA?AA?SB?E??zF?C?????XD?{F?B?????m@?|F?@??WR?QA?}F?C?????E??~F?C?????E???G?C?????u@?\D?Q\?CI?u@?\D?QJ?[H?R??@G?B?????E??AG?C?????B??BG?B?????Y??CG?B?????Q@?l??qh?oY?Q@?DG?Q??sV?B??EG?B?????E??FG?C?????QA?GG?C?????E??HG?C?????a@?b@?p_?cF@`@?}A?`??[h?CA?DA?@??oB?QA?IG?C?????E??JG?C?????QA?KG?C?????QA?LG?C?????oC?pC?PV?OJ?E??MG?C?????E??NG?C?????d@?e@?QB??Z?|A?MD?A@?OV?^B?MD?qD?CI?~A?ND?QD?wz?L??OG?C?????E??PG?C?????E??QG?C?????]??^??PX?KC?_??lA?pF?{G?kB?RG?Q??Od@lB?SG?aQ?Cc@Y??TG?B?????d@?e@?`L?_Z?A??UG?B?????Y??VG?B?????QA?WG?C?????E??XG?C?????E??YG?C?????E??ZG?C?????E??[G?C?????CA?DA?@??oB?dB?sC?QE??B?f@?g@?`I?wc@E??\G?C?????o@?n@?A?????A??]G?B?????u@?\D?AF?WH?s@?t@?@??gF?a@?c@?@??k?@QA?^G?C?????E??_G?C?????}B?`G?B?????}B?aG?B?????`F?bG?C?????QA?cG?C?????[C?\C?@??kC?E??dG?C?????E??eG?C?????QA?fG?C?????]D?gG?a??KO?A??hG?B?????E??iG?C?????QA?jG?C?????b??c??QF?WW?h??i??@??GL?E??kG?C?????\E?PA?Q]?GI?E??lG?C?????QA?mG?C?????QA?nG?C?????uE?PA?AC?SI?oG?pG?aE?OZ?qG?rG?a??wU?qG?sG?a??[V?Y??tG?B?????E??uG?C?????L??vG?C?????s@?VB?QP?kO?E??wG?C?????E??xG?C?????b??c??@K?[W?b??HE?pA?OQ?f??g??`K?OC?JE?^F?@J?OJ?s@?`??@??GH?E??yG?C?????L??zG?C?????f@?g@?@??_c@E??{G?C?????oC?pC?pG?gI?dD?eD?aO?gb?E??|G?C?????\@?}G?B?????_??lA?@S?[H?E??~G?C?????E???H?C?????}B?@H?B?????E??AH?C?????E??BH?C?????a@?c@?@h?_A@B??CH?B?????E??DH?C?????E??EH?C?????_@?FH?A??s~?B??GH?B?????E??HH?C?????E??IH?C?????j??zC?aL?sL?QA?JH?C?????Q@?l??QB?KX?Q@?KH?Q??KL?QA?LH?C?????}B?MH?B?????}B?NH?B?????u@?v@?QE?wE?A??OH?B?????E??PH?C?????E??QH?C?????E??RH?C?????E??SH?C?????MA?NA?pM?WC?oC?o??PF?_D?E??TH?C?????E??UH?C?????R@?l??AU?_Q?R@?S@?A`?gS?~@?l??A@?{A?~@??A?A?????h@?j@?QB?[WBk@?VH?qA?W^?_@?WH?Q??K@@QA?XH?C?????j??zC?pM?wL?dD?eD?QT?sb?u@?v@?qW?gF?w@?c??A?????LC?YH?C?????k@?l@?Q??g^?L??ZH?C?????u@?\D?AZ?wH?qC?rC?`??oE?dB?sC?pM?wA?E??[H?C?????E??\H?C?????E??]H?C?????dD?iE?`g?Cg?~A??B?QA??~?XC?ZC?`N?GG?]C?^H?`@?SfA]C?^H?PI?ShAhD?_H?@C?Co?`H?aH?PI?wmBh??i??PE?WL?b??c??`O?kW?b??HE?`D?SQ?f??IE?PJ?SB?JE?KE?pF?oI?_??lA?@??sG?j??k??AF?WC?h??l??qB?CG?dB?l??@A?SG?dB?l??`C?gG?dB?bH?`E??K?cH?dH?@D????eH?fH?@A????gH?hH?@B?__?AA?DA?p@??B?iH?jH?p@????kH?fH?P?????R??lH?B?????E??mH?C?????QA?nH?C?????f@?g@?pe?Ke@`F?oH?C?????}B?pH?B?????L??qH?C?????QA?rH?C?????QA?sH?C?????QA?tH?C?????E??uH?C?????a@?yA?@C?[S@d@?zA?@??OX?uE?PA?a@?KI?WF?XF?aA?CM?B??vH?B?????`F?wH?C?????QA?xH?C?????A??yH?B?????f??g??qJ?OC?zH?{H?A???F?f@?g@?Pb?Ge@dD?iE?@M?Sf?|H?}H?@??CO?E??~H?C?????E???I?C?????E??@I?C?????E??AI?C?????E??BI?C?????Y??CI?B?????j??zC?@T?wL?XC?o??@O?[D?CA?DA?pB?wB?XC?DI?@C?SF?h??i??@@?GL?E??EI?C?????]D?^D?AF?wV?]D?FI?A??gL?QA?GI?C?????f@?fB?aJ?W]@E??HI?C?????R??II?B?????j??FA?A??SM?`D?o??QJ?WN?TD?JI?a??kO?TD?JI?a??o]@`D?JI?QG?sR?~A?@B?aB?Ce?E??KI?C?????E??LI?C?????E??MI?C?????dB?bH?P??sJ?s@?VB?Q]?SP?E??NI?C?????E??OI?C?????E??PI?C?????\E?PA?A]?GI?QA?QI?C?????~A?@B?Q??Ce?E??RI?C?????E??SI?C?????E??TI?C?????E??UI?C?????E??VI?C?????E??WI?C?????E??XI?C?????E??YI?C?????E??ZI?C?????E??[I?C?????E??\I?C?????E??]I?C?????E??^I?C?????E??_I?C?????E??`I?C?????E??aI?C?????E??bI?C?????E??cI?C?????E??dI?C?????~A??B?PA??~?^B?FF?@??sI?E??eI?C?????QA?fI?C?????E??gI?C?????u@?\D?aX?sH?B??hI?B?????E??iI?C?????E??jI?C?????j??k??pK?wC?j??wA?@??kH?u@?v@?`e?OG?E??kI?C?????~A?\B?AM?sc?R@?HA?@??kC?u@?v@?pM?KF?u@?\D?@??GH?dD?iE?@??Gf?QA?lI?C?????d@?e@?@??wY?s@?VB?QN?cO?k@?VH?Q??W^?u@?\D?QH?WH?f@?g@?P`??e@m@?mI?aA?CI?QA?nI?C?????}B?oI?B?????Q@?l??QC?OX?~A?_B?PU?[h?L??pI?C?????B??qI?B?????k@?VH?Q@?W^?s@?VB?A^?SP?o@?oB?`C?oHBQA?rI?C?????TD?~D?a??c^@`D?~D?Q@??V?E??sI?C?????}B?tI?B?????E??uI?C?????f@?g@?Pa?Ce@mB?vI?AA?s\?\E?PA?q`?[I?f@?fB?Q??w\@j??wA?pY??J?~A?_B?pL@Ok?\E?PA?qP?WH?dD?}H?A??su@f@?g@?@K?{c@}B?wI?B?????E??xI?C?????f@?g@?PV?Od@E??yI?C?????E??zI?C?????E??{I?C?????E??|I?C?????E??}I?C?????j??zC?`L?sL?E??~I?C?????E???J?C?????E??@J?C?????E??AJ?C?????E??BJ?C?????`D?~D?qD??V?a@?c@?pK?g@@Q@?HA?PA?s_?E??CJ?C?????E??DJ?C?????E??EJ?C?????E??FJ?C?????QA?GJ?C?????E??HJ?C?????E??IJ?C?????E??JJ?C?????E??KJ?C?????E??LJ?C?????E??MJ?C?????B??NJ?B?????\E?PA?QN?WH?s@?VB?aU?wO?h??i??PP?sL?QA?OJ?C?????f@?fB?aM?_]@L??PJ?C?????dD?iE?@D?Kf?\E?PA?QE?oG?QA?QJ?C?????E??RJ?C?????dB?l??PA?cG?dB?eB?`G?WI?Y??SJ?B?????~A?NF?Q??Kd?_??lA?@R?KH?E??TJ?C?????E??UJ?C?????VJ?^??@D?GI?_@?^??pA?Cs?WJ?^??PJ?oG?XJ?YJ?pM?kH?ZJ?[J???????E??\J?B?????E??]J?C?????E??^J?C?????</div>
<span style="position:fixed; bottom: 0; right:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-left: 1px solid #ffc000; border-top-left-radius: 4px;"><span id="produced">Produced by <a href='https://github.com/jvm-profiling-tools/async-profiler'>async-profiler</a>&nbsp;</span><span id='match' style="display: none">Matched: <span id='matchval'></span>&nbsp;<span id='reset' title='Clear'>&#x274c;</span></span></span>

<h1 id="title">Heatmap, CPU</h1>

<canvas id='canvas'></canvas>
<div id='hl'><span></span></div>

<span id='status' style="position:fixed; bottom: 0; left:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-right: 1px solid #ffc000; border-top-right-radius: 4px; display: none">&nbsp;</span>
<script>
	// Copyright 2020 Andrei Pangin
	// Licensed under the Apache License, Version 2.0.
	'use strict';
	let root, rootLevel, px, pattern;
	let reverse = true;
	const levels = Array(0);
	for (let h = 0; h < levels.length; h++) {
		levels[h] = [];
	}

	const canvas = document.getElementById('canvas');
	let c = canvas.getContext('2d');
	const hl = document.getElementById('hl');
	const status = document.getElementById('status');

	const canvasWidth = canvas.offsetWidth;
	let canvasHeight = canvas.offsetHeight;
	canvas.style.width = canvasWidth + 'px';
	canvas.width = canvasWidth * (devicePixelRatio || 1);
	canvas.height = canvasHeight * (devicePixelRatio || 1);
	if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
	c.font = document.body.style.font;

    const search = typeof searchIterative === 'function' ? searchIterative : searchSimple;
    const init = typeof renderHeatmap === 'function' ? renderHeatmap : render;

	const palette = [
		[0xb2e1b2, 20, 20, 20],
		[0x50e150, 30, 30, 30],
		[0x50cccc, 30, 30, 30],
		[0xe15a5a, 30, 40, 40],
		[0xc8c83c, 30, 30, 10],
		[0xe17d00, 30, 30,  0],
		[0xcce880, 20, 20, 20],
	];

	function getColor(p) {
		const v = Math.random();
		return '#' + (p[0] + ((p[1] * v) << 16 | (p[2] * v) << 8 | (p[3] * v))).toString(16);
	}

	function f(level, left, width, type, title, inln, c1, int) {
		levels[level].push({left: left, width: width, color: getColor(palette[type]), title: title,
			details: (int ? ', int=' + int : '') + (c1 ? ', c1=' + c1 : '') + (inln ? ', inln=' + inln : '')
		});
	}

	function samples(n) {
		return n === 1 ? '1 sample' : n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + ' samples';
	}

	function pct(a, b) {
		return a >= b ? '100' : (100 * a / b).toFixed(2);
	}

	function findFrame(frames, x) {
		let left = 0;
		let right = frames.length - 1;

		while (left <= right) {
			const mid = (left + right) >>> 1;
			const f = frames[mid];

			if (f.left > x) {
				right = mid - 1;
			} else if (f.left + f.width <= x) {
				left = mid + 1;
			} else {
				return f;
			}
		}

		if (frames[left] && (frames[left].left - x) * px < 0.5) return frames[left];
		if (frames[right] && (x - (frames[right].left + frames[right].width)) * px < 0.5) return frames[right];

		return null;
	}

    const marked = [];

    function render(newRoot, newLevel, minLevel) {
        minLevel = minLevel || 0;
        if (root && minLevel === 0) {
			c.fillStyle = '#ffffff';
			c.fillRect(0, 0, canvasWidth, canvasHeight);
		}

		root = newRoot || levels[0][0];
		rootLevel = newLevel || 0;
		px = canvasWidth / root.width;

		const x0 = root.left;
		const x1 = x0 + root.width;

		if (minLevel === 0) {
		    marked.length = 0;
        }

		function mark(f) {
			return marked[f.left] >= f.width || (marked[f.left] = f.width);
		}

		function totalMarked() {
			let total = 0;
			let left = 0;
			Object.keys(marked).sort(function(a, b) { return a - b; }).forEach(function(x) {
				if (+x >= left) {
					total += marked[x];
					left = +x + marked[x];
				}
			});
			return total;
		}

		function drawFrame(f, y, alpha) {
			if (f.left < x1 && f.left + f.width > x0) {
                let match = pattern && pattern.test(f.title) && mark(f);
                const fw = f.width * px;
                if (fw < 0.1) {
                    return;
                }
                c.fillStyle = match ? '#ee00ee' : f.color;
				c.fillRect((f.left - x0) * px, y, fw, 15);

				if (fw >= 21) {
					const chars = Math.floor(fw / 7);
					const title = f.title.length <= chars ? f.title : f.title.substring(0, chars - 2) + '..';
					c.fillStyle = '#000000';
					c.fillText(title, Math.max(f.left - x0, 0) * px + 3, y + 12, fw - 6);
				}

				if (alpha) {
					c.fillStyle = 'rgba(255, 255, 255, 0.5)';
					c.fillRect((f.left - x0) * px, y, fw, 15);
				}
			}
		}

		for (let h = minLevel; h < levels.length; h++) {
			const y = reverse ? h * 16 : canvasHeight - (h + 1) * 16;
			const frames = levels[h];
			for (let i = 0; i < frames.length; i++) {
				drawFrame(frames[i], y, h < rootLevel);
			}
		}

		return totalMarked();
	}

	canvas.onmousemove = function() {
		const h = Math.floor((reverse ? event.offsetY : (canvasHeight - event.offsetY)) / 16);
		if (h >= 0 && h < levels.length) {
			const f = findFrame(levels[h], event.offsetX / px + root.left);
			if (f) {
				hl.style.left = (Math.max(f.left - root.left, 0) * px + canvas.offsetLeft) + 'px';
				hl.style.width = (Math.min(f.width, root.width) * px) + 'px';
				hl.style.top = ((reverse ? h * 16 : canvasHeight - (h + 1) * 16) + canvas.offsetTop) + 'px';
				hl.firstChild.textContent = f.title;
				hl.style.display = 'block';
				let details = f.details || '';
				canvas.title = f.title + '\n(' + samples(f.width) + details + ', ' + pct(f.width, levels[0][0].width) + '%)';
				canvas.style.cursor = 'pointer';
				canvas.onclick = function() {
					if (f !== root) {
						render(f, h);
						canvas.onmousemove();
					}
				};
				status.textContent = 'Function: ' + canvas.title;
                status.style.display = 'inline';
				return;
			}
		}
		canvas.onmouseout();
	}

	canvas.onmouseout = function() {
		hl.style.display = 'none';
		status.textContent = '\xa0';
        status.style.display = 'none';
		canvas.title = '';
		canvas.style.cursor = '';
		canvas.onclick = '';
	}

    window.onkeydown = function() {
        if (event.ctrlKey && event.keyCode === 70) {
            event.preventDefault();
            search(true);
        } else if (event.keyCode === 27) {
            search(false);
        }
    }

    document.getElementById('reset').onclick = function() {
        search(false);
    }



    class DataBuffer {
        data;
        pos = 0;
        constructor(encodedData) {
            this.data = encodedData;
        }

        nextVarInt() {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(this.pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

        byteAt(pos) {
            return this.data.charCodeAt(pos) - 63;
        }

        int30(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos) << 24);
        }

        int36(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos++) << 24)
                | (this.byteAt(pos++) << 30);
        }

        varInt(pos) {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

    }

    class HeatmapCollection extends DataBuffer {

        maxZoom;
        blocks;
        zoomToCounts;
        zoomToMaxes;
        zoom;

        constructor(encodedData) {
            super(encodedData);

            this.maxZoom = this.nextVarInt();   // fixme
            this.maxZoom = 3;

            const startMethodsCount = this.nextVarInt();
            const starts = new Set();
            for (let i = 0; i < startMethodsCount; i++) {
                starts.add(this.nextVarInt());
            }

            const lz = new Lz78Data(this, starts);

            let max = 1;

            let prevByte = -1;
            const blocksCount = this.nextVarInt();
            let counts = new Uint32Array(blocksCount);
            for (let i = 0; i < blocksCount; i++) {
                let v = 0;
                let p = 0;
                let hasMore = false;
                do {
                    if (prevByte === -1) {
                        prevByte = this.byteAt(this.pos++);
                        hasMore = (prevByte >>> 5) === 1;
                        v |= ((prevByte >>> 3) & 3) << p;
                        prevByte &= 7;
                    } else {
                        hasMore = (prevByte >>> 2) === 1;
                        v |= (prevByte & 3) << p;
                        prevByte = -1;
                    }
                    p += 2;
                } while (hasMore);
                counts[i] = v;
                max = Math.max(max, v);
            }

            this.blocks = lz.decode(counts);

            this.zoomToCounts = new Array(this.maxZoom);
            this.zoomToMaxes = new Array(this.maxZoom);

            this.zoomToCounts[0] = counts;
            this.zoomToMaxes[0] = max;

            for (let z = 1; z < zoomToGroupSize.length; z++) {
                const size = zoomToGroupSize[z] / zoomToGroupSize[z - 1];
                const nextCounts = new Uint32Array(Math.ceil(counts.length / size));
                for (let i = 0; i < counts.length; i++) {
                    const index = (i / size) | 0;
                    nextCounts[index] += counts[i];
                    max = Math.max(max, nextCounts[index]);
                }
                this.zoomToCounts[z] = counts = nextCounts;
                this.zoomToMaxes[z] = max;
            }

            this.data = null;
        }

        setZoom(zoom) {
            this.zoom = zoom;
        }

        heatmap() {
            return this.zoomToCounts[this.zoom];
        }

        max() {
            return this.zoomToMaxes[this.zoom];
        }

        currentTimeBlock() {
            // FIXME 20 is hardcoded
            return 20 * zoomToGroupSize[this.zoom];
        }

        startBlock() {
            const blockMs = this.currentTimeBlock();
            const timeBlockMs = blockMs * heatHeight * 20;
            return Math.floor(startMs % timeBlockMs / blockMs);
        }

        count() {
            return Math.ceil((this.heatmap().length + this.startBlock()) / 20 / heatHeight) * 20 * heatHeight;
        }

    }

    class LzChunk extends Uint32Array {
        constructor(size) {
            super(size);
        }

        copyWithNext(element) {
            let result = new LzChunk(this.length + 1);
            result.set(this);
            result[this.length] = element;
            return result;
        }
    }

    class Lz78Data {
        data;
        starts;
        lz78;

        tmp = [];
        prevSubTreeId = -1;

        constructor(data, starts) {
            this.data = data;
            this.starts = starts;

            this.lz78 = [new LzChunk(0)];
        }

        decode(counts) {
            const synonymsCount = this.data.nextVarInt();
            const synonyms = new Uint32Array(synonymsCount);
            for (let i = 0; i < synonymsCount; i++) {
                synonyms[i] = this.data.nextVarInt();
            }

            const tailsCount = this.data.nextVarInt();
            const tails = new Uint32Array(tailsCount);
            for (let i = 0; i < tailsCount; i++) {
                const tail = this.data.nextVarInt();
                tails[i] = (tail < synonyms.length ? synonyms[tail] : tail) - synonymsCount;
            }

            const result = new Array(counts.length);
            for (let i = 0; i < counts.length; i++) {
                result[i] = new Array(counts[i]);
            }

            let thisChunk = null;
            let currentTail = 0;
            const tmp = [];
            let t = -1;
            for (let block of result) {
                for (let i = 0; i < block.length; i++, currentTail++) {
                    t++;
                    const tailId = tails[currentTail];
                    if (tailId < this.lz78.length) {
                        const tail = this.lz78[tailId];
                        if (tail.length !== 0 && this.starts.has(tail[0])) {
                            console.log(t, 'only', tailId);
                            block[i] = tail;
                            continue;
                        }
                    }

                    if (thisChunk === null) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        console.log(t, 'chunk', chunkId, addMethodId);
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                    }

                    tmp.length = 0;
                    tmp.push(...thisChunk); // FIXME it is ok to push as is, or even as lz78 index

                    while (true) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                        console.log(t, 'chunk', chunkId, addMethodId);

                        if (this.starts.has(thisChunk[0])) {
                            console.log(t, 'starts', thisChunk[0]);
                            console.log(t, 'ends', tailId);
                            const tail = this.lz78[tailId];
                            tmp.push(...tail);
                            block[i] = new Uint32Array(tmp);
                            break;
                        } else {
                            tmp.push(...thisChunk);
                        }
                    }
                }
            }

            return result;
        }
    }

    class Queue {
        data = new Array(1024);
        first = 0;
        afterLast = 0;

        push(e) {
            let a = this.afterLast;
            let d = this.data;
            d[a++] = e;
            if (a >= this.data.length) {
                a = 0;
            }
            if (a === this.first) {
                let d2 = new Array(d.length * 2);
                let i = 0;
                for (let p = a; p < d.length; p++) {
                    d2[i++] = d[p];
                }
                for (let p = 0; p < a; p++) {
                    d2[i++] = d[p];
                }
                this.data = d2;
                this.first = 0;
                this.afterLast = i;
            } else {
                this.afterLast = a;
            }
        }

        shift() {
            let i = this.first;
            let r = this.data[i++];
            if (i >= this.data.length) {
                this.first = 0;
            } else {
                this.first = i;
            }
            return r;
        }

        size() {
            let r = this.afterLast - this.first;
            if (r < 0) {
                return r + this.data.length;
            }
            return r;
        }

        reset() {
            this.first = this.afterLast = 0;
        }
    }

    function claimHtml(id) {
        let e = document.getElementById(id);
        let r = e.innerHTML;
        e.remove();
        return r;
    }

    let sq = 5;
    let sqPx = sq;
    let sqScale = 1;
    const canvasScrollPadding = 200;
    let canvasTimeHeight = 12;
    let canvasTimeHeightPx = 12;
    let ticksPerSecond = 1000000000;
    let startMs = 1665002010045;

    const zoomToGroupSize = [
        1,              // 20 ms
        50,             // 1 s
        50 * 5,         // 5 s
        50 * 60         // 1 m
    ];
    const zoomToHeight = [50, 60, 60, 60]

    let methods = new DataBuffer(claimHtml("methods"));
    let executionsHeatmap = new HeatmapCollection(claimHtml("executionsHeatmap"));
    let cpool = ["all","","libsystem_pthread.dylib","thread_start","_pthread_start","libjvm.dylib","thread_native_entry","Thread::call_run","JavaThread::thread_main_inner","attach_listener_thread_entry","load_agent","JvmtiExport::load_agent_library","libasyncProfiler.so","Agent_OnAttach","Profiler::run","Profiler::runInternal","Profiler::start","AllocTracer::start","libsystem_platform.dylib","_platform_strncmp","ConcurrentGCThread::run","G1ServiceThread::run_service","G1ServiceThread::sleep_before_next_cycle","Monitor::wait_without_safepoint_check","os::PlatformMonitor::wait","libsystem_kernel.dylib","__psynch_cvwait","WatcherThread::run","WatcherThread::sleep","one.nio.server.SelectorThread","run","one.nio.net.JavaSelector","select","registerPendingSessions","java.util.concurrent.ConcurrentLinkedQueue","poll","java.util.concurrent.ConcurrentLinkedQueue$Node","casItem","java.lang.invoke.VarHandleGuards","guard_LLL_Z","one.nio.net.Session","process","one.nio.http.HttpSession","processRead","read","one.nio.net.JavaSocket","one.nio.net.SocketClosedException","<init>","java.net.SocketException","java.io.IOException","java.lang.Exception","java.lang.Throwable","fillInStackTrace","libjava.dylib","Java_java_lang_Throwable_fillInStackTrace","JVM_FillInStackTrace","java_lang_Throwable::fill_in_stack_trace","BacktraceBuilder::expand","CollectedHeap::array_allocate","MemAllocator::allocate","_platform_memset","CompileBroker::compiler_thread_loop","CompileBroker::invoke_compiler_on_method","C2Compiler::compile_method","Compile::Compile","Compile::Optimize","PhaseIdealLoop::optimize","PhaseIdealLoop::PhaseIdealLoop","PhaseIdealLoop::build_and_optimize","PhaseIdealLoop::build_loop_tree","CProjNode::is_CFG","Compile::Code_Gen","PhaseChaitin::Register_Allocate","PhaseChaitin::post_allocate_copy_removal","PhaseChaitin::elide_copy","PhaseChaitin::use_prior_register","MachNode::in_RegMask","Compile::optimize_loops","PhaseIdealLoop::split_if_with_blocks","PhaseIdealLoop::split_if_with_blocks_pre","MultiNode::is_CFG","sun.nio.ch.SocketChannelImpl","sun.nio.ch.IOUtil","readIntoNativeBuffer","Matcher::match","Matcher::xform","Matcher::match_tree","Matcher::Label_Root","State::DFA","State::_sub_Op_ConL","Assembler::operand_valid_for_logical_immediate","encoding_for_logical_immediate","libsystem_c.dylib","bsearch","compare_immediate_pair","java.lang.Thread","java.util.concurrent.ThreadPoolExecutor$Worker","java.util.concurrent.ThreadPoolExecutor","runWorker","getTask","java.util.concurrent.LinkedBlockingQueue","take","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject","await","java.util.concurrent.ForkJoinPool","managedBlock","unmanagedBlock","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode","block","java.util.concurrent.locks.LockSupport","park","jdk.internal.misc.Unsafe","LockTracer::UnsafeParkHook","Unsafe_Park","Parker::park","sun.nio.ch.SelectorImpl","lockAndDoSelect","sun.nio.ch.KQueueSelectorImpl","doSelect","sun.nio.ch.KQueue","kevent","Matcher::find_shared","Matcher::pd_clone_node","Matcher::is_vshift_con_pattern","VectorNode::is_vector_shift","PhaseChaitin::stretch_base_pointer_live_ranges","sun.nio.ch.SocketDispatcher","read0","ok.dht.test.ilin.servers.ExpandableHttpServer$$Lambda$66.0x0000000800cc8680","ok.dht.test.ilin.servers.ExpandableHttpServer","lambda$handleRequest$0","one.nio.http.HttpServer","handleRequest","RequestHandler0_getEntity","sendResponse","writeResponse","write","one.nio.net.Session$ArrayQueueItem","writeFromNativeBuffer","sun.nio.ch.FileDispatcherImpl","write0","ok.dht.test.ilin.service.EntityService","getEntity","org.rocksdb.RocksDB","get","librocksdbjni3117412474990041175.jnilib","Java_org_rocksdb_RocksDB_get__J_3BII","rocksdb_get_helper","rocksdb::CompactedDBImpl::Open","rocksdb::DBImpl::Get","rocksdb::DBImpl::GetImpl","rocksdb::Version::Get","rocksdb::TableCache::Get","rocksdb::BlockBasedTable::Get","rocksdb::DataBlockIter::SeekImpl","rocksdb::DataBlockIter::NextImpl","_platform_memmove","rocksdb::BlockBasedTableIterator::Prev","rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>","rocksdb::BlockFetcher::ReadBlockContents","rocksdb::UncompressBlockContentsForCompressionType","rocksdb::NewCompressedSecondaryCache","snappy::RawUncompress","snappy::Uncompress","void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>","snappy::SnappyIOVecWriter::TryFastAppend","JNIEnv_::CallStaticObjectMethod","jni_CallStaticObjectMethodV","jni_invoke_static","os::current_thread_enable_wx","snappy::SnappyArrayWriter::AppendFromSelf","snappy::SnappyIOVecWriter::GetIOVecPointer","iteratorFor","PhaseIdealLoop::build_loop_late","AllocateNode::Opcode","rocksdb::RandomAccessFileReader::Read","pread","PhaseIdealLoop::build_loop_late_post_work","InstanceKlass::initialize","Matcher::find_shared_visit","PhaseOutput::Output","PhaseOutput::BuildOopMaps","OopFlow::compute_reach","processHttpBuffer","handleParsedRequest","execute","offer","signalNotEmpty","java.util.concurrent.locks.ReentrantLock","unlock","java.util.concurrent.locks.AbstractQueuedSynchronizer","release","signalNext","unpark","Unsafe_Unpark","__psynch_cvsignal","one.nio.server.Server","incRequestsProcessed","java.util.concurrent.atomic.LongAdder","increment","add","SharedRuntime::complete_monitor_locking_C","SharedRuntime::monitor_enter_helper","ObjectSynchronizer::enter","ObjectMonitor::enter","ObjectMonitor::TrySpin","ObjectMonitor::NotRunnable","pthread_jit_write_protect_np","rocksdb::GetContext::SaveValue","rocksdb::Block::ApproximateMemoryUsage","rocksdb::IndexBlockIter::SeekImpl","rocksdb::IndexBlockIter::PrefixSeek","rocksdb::DataBlockIter::SeekForGetImpl","_platform_memcmp","processDeregisterQueue","rocksdb::Comparator::CreateFromString","call_stub","snappy::SnappyArrayWriter::Produced","signal","doSignal","enqueue","lock","java.util.concurrent.locks.ReentrantLock$Sync","acquire","rocksdb::BlockBasedTable::DumpDataBlocks","rocksdb::lru_cache::LRUCache::GetShard","rocksdb::IndexBlockIter::NextImpl","rocksdb::IndexValue::DecodeFrom","one.nio.util.Utf8","isAsciiString","enableWait","sun.nio.ch.Util$2","iterator","java.util.HashSet","java.util.HashMap$KeySet","java.util.HashMap$KeyIterator","java.util.HashMap$HashIterator","java.util.concurrent.locks.AbstractQueuedSynchronizer$Node","getAndUnsetStatus","getAndBitwiseAndInt","OptoRuntime::new_array_nozero_C","MemAllocator::Allocation::notify_allocation","_sigtramp","AllocTracer::trapHandler","Profiler::recordSample","JvmtiEnvBase::get_stack_trace","JavaThread::last_java_vframe","vframe::new_vframe","compiledVFrame::compiledVFrame","CompiledMethod::scope_desc_at","PcDescContainer::find_pc_desc_internal","jni_GetByteArrayRegion","jvmti_GetClassSignature","libsystem_malloc.dylib","nanov2_size","snappy::SnappyArrayWriter::TryFastAppend","rocksdb::lru_cache::LRUCacheShard::Lookup","snappy::LittleEndian::Load32","jvmti_Deallocate","Java_org_rocksdb_ColumnFamilyHandle_disposeInternal","jni_SetByteArrayRegion","os::javaTimeMillis","clock_gettime","gettimeofday","mach_absolute_time","rocksdb::port::Mutex::Unlock","pthread_mutex_unlock","rocksdb::Block::NewDataIterator","libc++abi.dylib","operator new","_malloc_zone_malloc","nanov2_malloc","nanov2_allocate","JNI_ArgumentPusher::JNI_ArgumentPusher","rocksdb::LookupKey::LookupKey","libdyld.dylib","tlv_get_addr","ThreadShadow::clear_pending_exception","snappy::Bits::FindLSBSetNonZero64","ZBUFFv07_recommendedDOutSize","one.nio.http.Request","getRequiredParameter","getParameter","one.nio.util.URLEncoder","decode","java.lang.String","indexOf","isLatin1","rocksdb::BinarySearchIndexReader::NewIterator","rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock","jni_GetObjectClass","unknown_Java","JavaCalls::call_helper","CompilationPolicy::must_be_compiled","jni_NewByteArray","snappy::SnappyDecompressor::ReadUncompressedLength","LockTracer::recordContendedLock","jvmti_GetStackTrace","vframe::java_sender","compiledVFrame::sender","vframe::sender","ScopeDesc::ScopeDesc","ScopeDesc::decode_body","one.nio.http.Response","toBytes","one.nio.util.ByteArrayBuilder","append","length","rocksdb::ReactiveVersionSet::replay_buffer","pthread_cond_signal","os::javaTimeNanos","rocksdb::GetVarint64Ptr","jvmti_GetCurrentThread","JvmtiEnvBase::is_valid","parseRequest","startsWith","rocksdb::BlockBasedTable::NewRangeTombstoneIterator","JvmtiEnv::GetClassSignature","os::malloc","ThreadBlockInVMPreprocess<InFlightMutexRelease>::~ThreadBlockInVMPreprocess","jni_ExceptionCheck","rocksdb::Block::NewIndexIterator","rocksdb::ThreadLocalPtr::Swap","Java_org_rocksdb_WriteBatchTest_getContents","rocksdb::port::Mutex::Lock","_pthread_mutex_firstfit_lock_slow","__psynch_mutexwait","___chkstk_darwin","free","nanov2_pointer_size","getHeader","jbyte_disjoint_arraycopy","rocksdb::MemTable::Get","lockInterruptibly","acquireInterruptibly","ObjArrayAllocator::initialize","rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion","rocksdb::ThreadLocalPtr::StaticMeta::Swap","PreserveExceptionMark::PreserveExceptionMark","snappy::LittleEndian::ToHost32","java.nio.ByteBuffer","wrap","java.nio.HeapByteBuffer","os::stack_shadow_pages_available","libnio.dylib","Java_sun_nio_ch_SocketDispatcher_read0","int const static_fast_get_field_wrapper<10, int const>","thread-local wrapper routine for rocksdb::perf_context","processUpdateQueue","java.util.ArrayDeque","pollFirst","operator new[]","java.nio.Buffer","remaining","one.nio.http.PathMapper","find","java.util.HashMap","getNode","hash","hashCode","java.lang.StringLatin1","default_zone_free_definite_size","regionMatches","regionMatchesCI","MemAllocator::finish","_complete_monitor_locking_Java","rocksdb::Cleanable::~Cleanable","_pthread_cond_wait","snappy::ByteArraySource::Peek","rocksdb::lru_cache::LRUCacheShard::InsertItem","nanov2_free_definite_size","HandleMark::initialize","JavaThread::check_and_handle_async_exceptions","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2646116ull, G1BarrierSet>, ","JavaThread::pd_last_frame","CodeHeap::find_blob_unsafe","rocksdb::Cleanable::DelegateCleanupsTo","MemAllocator::Allocation::notify_allocation_jvmti_sampler","_kernelrpc_mach_port_deallocate_trap","rocksdb::GetContext::GetContext","void AccessInternal::arraycopy_conjoint<signed char>","rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator<rocksdb::DataBlockIter>","limit","malloc","CompilationPolicy::compile_if_required","JvmtiEnv::GetCurrentThread","PerfByteArray::~PerfByteArray","JavaCallWrapper::JavaCallWrapper","JavaFrameAnchor::make_walkable","std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample> > >::vector<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, void*>*, long> > >","nanov2_free_to_block","check_bounds","updateHead","guard_LL_V","java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite","setRelease","rocksdb::lru_cache::LRUCacheShard::Release","pthread_mutex_lock","rocksdb::CompactedDBImpl::Get","JvmtiEnvBase::phase","fdval","InstanceKlass::signature_name","resource_allocate_bytes","JNI_OnLoad","rocksdb::ColumnFamilyHandleImpl::GetComparator","rocksdb::ShardedCache::Lookup","Java_sun_nio_ch_FileDispatcherImpl_write0","os::os_exception_wrapper","JavaThread::is_Java_thread","Fingerprinter::compute_fingerprint_and_return_type","sun.nio.ch.Util","getTemporaryDirectBuffer","sun.nio.ch.Util$BufferCache","JNI_ArgumentPusherVaArg::push_arguments_on","ThreadsListHandle::cv_internal_thread_to_JavaThread","JNIHandleBlock::allocate_handle","oopDesc::metadata_field","snappy::Varint::Parse32WithLimit","ThreadsListHandle::ThreadsListHandle","rocksdb::RandomAccessFileReader::PrepareIOOptions","rocksdb::BlockBasedTableBuilder::SetSeqnoTimeTableProperties","__cxa_guard_abort","processEvents","processReadyEvents","put","putVal","Java_org_rocksdb_BackupEngine_disposeInternal","rocksdb::DBImpl::DefaultColumnFamily","rocksdb::Cleanable::Cleanable","G1ServiceThread::run_task","G1RemSetSamplingTask::execute","G1CollectionSet::iterate","G1YoungRemSetSamplingClosure::do_heap_region","G1CollectionSet::update_young_region_prediction","G1Policy::predict_region_non_copy_time_ms","G1Analytics::predict_card_merge_time_ms","AbsSeq::davg","java.lang.ThreadLocal","rocksdb::cache_entry_roles_detail::RegisteredDeleter<rocksdb::Block, ","rocksdb::lru_cache::LRUCache::Value","ObjectMonitor::EnterI","os::PlatformEvent::park","rocksdb::VerifyBlockChecksum","rocksdb::ComputeBuiltinChecksum","SignatureIterator::set_fingerprint","OptoRuntime::new_array_C","Method::jmethod_id","InstanceKlass::get_jmethod_id","Arena::grow","ThreadCritical::ThreadCritical","Symbol::as_C_string","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, ","nanov2_allocate_from_block","Klass::check_array_allocation_length","tryRelease","JNIHandles::make_local","ThreadsListHandle::~ThreadsListHandle","arrayof_jbyte_disjoint_arraycopy","rocksdb::DataBlockIter::SeekForPrevImpl","JvmtiEnv::Deallocate","thread-local wrapper routine for rocksdb::perf_level","canReacquire","isEnqueued","szone_malloc_should_clear","small_malloc_should_clear","Java_org_rocksdb_Logger_disposeInternal","jbyte_arraycopy","rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion","rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap","rocksdb::BlockBasedTable::UpdateCacheHitMetrics","rocksdb::PosixDirectory::FsyncWithDirOptions","java.util.concurrent.locks.ReentrantLock$NonfairSync","initialTryLock","java.util.concurrent.locks.AbstractOwnableSynchronizer","setExclusiveOwnerThread","rocksdb::CompressedSecondaryCache::Lookup","rocksdb::Block::~Block","small_size","compareAndSet","rocksdb::ShardedCache::Release","libc++.1.dylib","std::__1::moneypunct_byname<wchar_t, true>::moneypunct_byname","TypeArrayKlass::allocate_common","rocksdb::Random::GetTLSInstance","unsafe_arraycopy","rocksdb::ThreadLocalPtr::Instance","java_lang_Thread::thread","frame::real_sender","frame::sender","frame::sender_for_compiled_frame","OopMapSet::update_register_map","ImmutableOopMapSet::find_map_at_offset","rocksdb::Block::Block","rocksdb::BlockBasedTable::FullFilterKeyMayMatch","JavaThreadParkedState::JavaThreadParkedState","mach_thread_self","arrayof_jlong_disjoint_arraycopy","snappy::ByteArraySource::Available","rocksdb::ThreadLocalPtr::CompareAndSwap","MemAllocator::Allocation::check_out_of_memory","java_lang_Thread::set_thread_status","rocksdb::lru_cache::LRUCache::GetCharge","convertReturnVal","pthread_testcancel","rocksdb::Hash64","StackWatermarkSet::on_iteration","Method::bci_from","Java_sun_nio_ch_KQueue_poll","getBlocker","snappy::ByteArraySource::~ByteArraySource","ObjectMonitor::object","oopDesc::address_field","_platform_strlen","CodeBlob::is_zombie","_pthread_mutex_firstfit_unlock_slow","__psynch_mutexdrop","endRead","pthread_dependency_wait_np.cold.3","Parker::unpark","rocksdb::lru_cache::LRUCacheShard::EvictFromLRU","StackOverflow::reguard_stack_if_needed","rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal","oopFactory::new_byteArray","snappy::SnappyDecompressor::eof","rocksdb::NewLRUCache","MemAllocator::allocate_inside_tlab_slow","G1NUMA::index_of_current_thread","CallTraceStorage::put","JavaThread::threadObj","JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState","next","nextNode","__commpage_gettimeofday","I2C/C2I adapters","thread_self_trap","snappy::SnappyDecompressor::RefillTag","vframe::vframe","RegisterMap::RegisterMap","JavaThread::is_interrupted","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ull, G1BarrierSet>, ","JvmtiEnvBase::jvmtiMalloc","jshort_disjoint_arraycopy","rocksdb::BlockBasedTable::UpdateCacheMissMetrics","JavaCalls::call","szone_size","tiny_size","std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string","rocksdb::ReadOptions::ReadOptions","CompiledMethod::is_compiled","JvmtiExport::post_monitor_contended_enter","rocksdb::CachableEntry<rocksdb::Block>::ReleaseCacheHandle","elementAt","zero_blocks","JvmtiEnv::GetStackTrace","rocksdb::Cleanable::RegisterCleanup","CodeBlob::is_runtime_stub","AbstractInterpreter::size_top_interpreter_activation","rocksdb::lru_cache::LRUHandleTable::Insert","rocksdb::MemTableListVersion::Get","java.lang.ThreadLocal$ThreadLocalMap","getEntry","java.lang.ref.Reference","refersTo","refersToImpl","__commpage_gettimeofday_internal","JvmtiExport::post_monitor_contended_entered","LockTracer::MonitorContendedEntered","ScopeDesc::sender","G1BarrierSet::enqueue","JvmtiAgentThread::call_start_function","Profiler::timerLoop","MonitorDeflationThread::monitor_deflation_thread_entry","jvmti_SetTag","_utmpxname.cold.2","OptoRuntime::new_instance_C","InstanceKlass::allocate_instance","free_small","JNI_ArgumentPusherVaArg::do_type","Method::bcp_from","_pthread_cond_updateval","JNIHandleBlock::allocate_block","frame::is_interpreted_frame","interrupted","_pthread_mutex_firstfit_lock_wait","SafeThreadsListPtr::release_stable_list","PreserveExceptionMark::~PreserveExceptionMark","crc32c_arm64","ensureOpenAndConnected","rocksdb::crc32c::Extend","small_free_list_remove_ptr","default_zone_malloc","not_walkable_Java","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<594020ull, G1BarrierSet>, ","JvmtiEnv::SetTag","JvmtiTagMap::set_tag","CollectedHeap::hash_oop","InstanceKlass::allocate_objArray","JNIHandles::resolve_external_guard","isReleasable","isInterrupted","snappy::GetUncompressedLength","operator delete","Recording::recordThreadPark","JvmtiTagMapTable::find","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ull, G1BarrierSet>, ","methodHandle::~methodHandle","substring","newString","java.util.Arrays","copyOfRange","toAsciiString","java.lang.invoke.LambdaForm$MH.0x0000000800ccc400","invokeExact_MT","java.lang.invoke.LambdaForm$DMH.0x0000000800ccc800","newInvokeSpecial","java.lang.invoke.DirectMethodHandle","allocateInstance","java.lang.invoke.Invokers$Holder","linkToTargetMethod","java.lang.invoke.DirectMethodHandle$Holder","__bzero","os::free","rocksdb::ShardedCache::GetUsage","std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__assign_external","small_free_list_add_ptr","FlightRecorder::recordEvent","rocksdb::Timer::Run","rocksdb::InstrumentedCondVar::TimedWait","rocksdb::port::CondVar::TimedWait","java_lang_Thread::get_thread_status","pthread_getspecific","std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign","rocksdb::PosixRandomAccessFile::Read","jshort_arraycopy","java.lang.invoke.VarForm","getMemberName","java.util.LinkedHashMap","newNode","VMThread::run","VMThread::inner_execute","SafepointSynchronize::end","SafepointSynchronize::disarm_safepoint","GenericWaitBarrier::disarm","swtch_pri","getPath","java_lang_Thread::interrupted","inc","rocksdb::GetPerfLevel","PcDescCache::find_pc_desc","_platform_strcpy","position","JavaThread::can_call_java","CompositeElapsedCounterSource::now","ObjectSynchronizer::quick_enter","compiledVFrame::method","CodeCache::find_blob","nmethod::is_zombie","snappy::SnappyArrayWriter::CheckLength","GangWorker::initialize","GangWorker::loop","G1EvacuateRegionsBaseTask::work","G1EvacuateRegionsBaseTask::evacuate_live_objects","G1ParEvacuateFollowersClosure::do_void","G1ParScanThreadState::steal_and_trim_queue","G1ParScanThreadState::trim_queue_to_threshold","void G1ParScanThreadState::do_oop_evac<narrowOop>","G1ParScanThreadState::do_copy_to_survivor_space","void G1ScanEvacuatedObjClosure::do_oop_work<narrowOop>","G1ParScanThreadState::allocate_copy_slow","G1PLABAllocator::allocate_direct_or_new_plab","G1Allocator::old_attempt_allocation","Mutex::lock","Mutex::lock_contended","TaskTerminator::offer_termination","Mutex::lock_without_safepoint_check","Thread::is_Named_thread","VMError::is_error_reported","VMThread::wait_for_operation","snappy::SnappyArrayWriter::Append","CodeBlob::oop_map_for_return_address","_pthread_mutex_droplock","SharedRuntime::complete_monitor_unlocking_C","ObjectMonitor::ExitEpilog","InstanceKlass::should_be_initialized","snappy::SnappyArrayWriter::SetExpectedLength","setCurrentBlocker","rocksdb::UnPackIndexTypeAndNumRestarts","nanov2_find_block_and_allocate","Dictionary::lookup","pthread_mutex_trylock","rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics","PhaseIdealLoop::build_loop_early","small_malloc_from_free_list","frame::sender_raw","clearStatus","small_free_list_remove_ptr_no_clear","os::current_stack_pointer","PeriodicTask::real_time_tick","StatSamplerTask::task","PerfLongVariant::sample","G1Analytics::predict_card_scan_time_ms","AbsSeq::dsd","G1CollectedHeap::allocate_new_tlab","G1CollectedHeap::attempt_allocation_slow","HSpaceCounters::update_used","Chunk::next_chop","Chunk::operator delete","G1AllocRegion::new_alloc_region_and_allocate","G1CollectedHeap::new_mutator_alloc_region","G1RemSetTrackingPolicy::update_at_allocate","G1ConcurrentRefine::max_num_threads","rocksdb::UncompressBlockContents","frame::entry_frame_is_first","G1DirtyCardQueueSet::num_par_ids","HandleMark::~HandleMark","ObjectMonitor::object_peek","Arena::set_size_in_bytes","ChunkPool::allocate","pthread_self","snappy::SnappyArrayWriter::Flush","Buffer::putVar64","snappy::ByteArraySource::Skip","JavaThread::is_lock_owned","__gettimeofday","nmethod::metadata_addr_at","G1Analytics::predict_scan_card_num","jdk.internal.misc.InnocuousThread","jdk.internal.ref.CleanerImpl","java.lang.ref.ReferenceQueue","remove","java.lang.Object","wait","JVM_MonitorWait","ObjectSynchronizer::wait","ObjectMonitor::wait",];

    let currentHeatmap = executionsHeatmap;
    let currentHeatmapType = 'executions';

    let heatHeight = 60;

    let heatLastSample = -1;
    let heatActiveSample1 = -1;
    let heatActiveSample2 = -1;
    let heatDiffStart = -1;
    let heatDiffEnd = -1;
    let highlightStart = -1;
    let highlightEnd = -1;

    const titleText = document.getElementById("title").textContent;
    document.getElementById("title").style.display = 'none';
    document.title = titleText;

    const heatCanvas = document.getElementById('heatmap-canvas');
    const heatStatus = document.getElementById('status');
    const heatCanvasWrapper = document.getElementById('heatmap-canvas-wrapper');
    const heatCanvasContainer = document.getElementById('heatmap-canvas-container');

    let heatC;
    let prevDx = -1000000000;

    let searchExecutedCount = 0;
    let searchMax = 0;

    const timeOptions = {
        year: '2-digit',
        month: '2-digit',
        day: '2-digit',
        timeZoneName: 'short',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsShort = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsTiny = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hourCycle: 'h23',
        //hour12: false
    };

    function methodInfo(methodIndex, out) {
        if (methodIndex === -1) {
            out.className = '';
            out.methodName = 'all';
            out.location = 0;
            out.type = 3;
            return;
        }

        methodIndex--;

        let methodAndClass = methods.int36(methodIndex * 12);
        let locationAndType = methods.int36(methodIndex * 12 + 6)
        let className = (methodAndClass & 0x3FFFF) - 1;
        let methodName = (methodAndClass >>> 18) - 1;

        out.className = cpool[className];
        out.methodName = cpool[methodName];
        out.location = locationAndType >>> 4;
        out.type = locationAndType & 15;
    }

    function title(methodIndex, out) {
        methodInfo(methodIndex, out);
        const codeLine = (out.location & 0xffff);
        let locationSuffix = codeLine === 0 ? "" : (":" + codeLine);

        if (out.methodName === '') {
            return out.className + locationSuffix;
        }
        if (out.className === '') {
            return out.methodName + locationSuffix;
        }
        if (out.type >= 3 && out.type <= 5) {
            return out.methodName + locationSuffix;
        }

        return out.className + "." + out.methodName + locationSuffix;
    }

    let bgInterval = null;
    let bgTasks = [];
    let cooldownTime = 0;
    let nextTask = 0;

    function addTask(id, iteration, afterFrame) {
        for (let t of bgTasks) {
            if (t.id === id) {
                t.f = iteration;
                t.a = afterFrame;
                return;
            }
        }

        bgTasks.push({id: id, f: iteration, a: afterFrame});
        if (bgTasks.length === 1) {
            bgInterval = setInterval(function() {
                let start = performance.now();
                if (start <= cooldownTime) {
                    return;
                }
                let overflow = false;
                do {
                    let task = bgTasks[nextTask];
                    if (task.f()) {
                        nextTask++;
                    } else {
                        bgTasks.splice(nextTask, 1);
                        if (bgTasks.length === 0) {
                            clearInterval(bgInterval);
                            nextTask = 0;
                            return;
                        }
                    }

                    if (nextTask >= bgTasks.length) {
                        nextTask = 0;
                        overflow = true;
                    }
                } while(performance.now() - start < 8);

                for (let q = 0; q < overflow ? bgTasks.length : nextTask; q++) {
                    bgTasks[q].a();
                }
            })
        }
    }

    function prepareFrames(from, to) {
        let mul = zoomToGroupSize[currentHeatmap.zoom];
        from *= mul;
        to = (to + 1) * mul - 1;
        if (to >= currentHeatmap.blocks.length) {
            to = currentHeatmap.blocks.length - 1;
        }

        const frames = new Queue();
        const root = new Map();
        root.c = 0;
        root.m = -1;
        root.x = 0;
        const roots = [root];
        let levelsCount = 1;

        for (let pos = from; pos <= to; pos++) {
            const block = currentHeatmap.blocks[pos];

            root.c += block.length;

            for (let stack of block) {
                levelsCount = Math.max(stack.length + 1, levelsCount);

                frames.push(root);
                frames.push(stack);
            }
        }

        return [frames, roots, levelsCount]
    }

    function nextFrames(frames, level) {
        frames.push(null);  // end stacks marker

        let nowFrame = null;

        while (true) {
            const frame = frames.shift();
            if (frame === null) {   // end stack marker
                break;
            }

            const stack = frames.shift();
            if (level >= stack.length) {
                continue;
            }

            const methodId = stack[level];
            nowFrame = frame.get(methodId);
            if (nowFrame === undefined) {
                nowFrame = new Map();
                nowFrame.m = methodId;
                nowFrame.c = 0;
                frame.set(methodId, nowFrame);
            }
            nowFrame.c++;

            frames.push(nowFrame);
            frames.push(stack);
        }
    }

    function renderTraces(from, to) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }

        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        addTask('flame', function () {
                nextFrames(frames, currentLevel);

                let level = levels[currentLevel];
                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;
                    const t = title(root.m, methodInfoOut);
                    let color = getColor(palette[methodInfoOut.type]);
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [...root.values()];

                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function renderWithMatch(newCanvasHeight, root, level, minLevel) {
        newCanvasHeight = Math.min(32767, newCanvasHeight);
        if (canvasHeight !== newCanvasHeight) {
            canvasHeight = newCanvasHeight;
            canvas.style.height = canvasHeight + 'px';
            canvas.height = canvasHeight * (devicePixelRatio || 1);
            c = canvas.getContext('2d');
            if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
            c.font = document.body.style.font;
        }
        const matched = render(root, level, minLevel);
        if (pattern === undefined) {
            document.getElementById('match').style.display = 'none';
            document.getElementById('produced').style.display = 'inherit';
        } else {
            document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
            document.getElementById('match').style.display = 'inline-block';
            document.getElementById('produced').style.display = 'none';
        }
    }

    function renderDiff(from, to, baseFrom, baseTo) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        let [baseFrames, baseRoots, ] = prepareFrames(baseFrom, baseTo);
        roots[0].b = baseRoots[0];

        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }
        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        let minDiff = 0;
        let maxDiff = 0;

        addTask('flame', function () {
                nextFrames(frames, currentLevel);
                nextFrames(baseFrames, currentLevel);
                let level = levels[currentLevel];

                for (let root of roots) {
                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    if (wasCount !== 0) {
                        maxDiff = Math.max(maxDiff, root.c - wasCount);
                        minDiff = Math.min(minDiff, root.c - wasCount)
                    }
                }

                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;

                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    const t = title(root.m, methodInfoOut) + " (" + root.c + "/" + wasCount +")";
                    let color;
                    if (wasCount === 0) {
                        color = "#dac571";
                    } else if (wasCount >= root.c) {
                        const ratio = (root.c - wasCount) / minDiff;
                        color = 'rgb(' + (245 - 90 * ratio) + ',' + (250 - 90 * ratio) + ',' + 255 +')';
                    } else {
                        const ratio = (root.c - wasCount) / maxDiff;
                        color = 'rgb(' + 255 + ',' + (245 - 180 * ratio) + ',' + (240 - 200 * ratio) +')';
                    }
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [];
                    for (let [methodId, frame] of root) {
                        frame.b = root.b && root.b.get(methodId);
                        nextFrames.push(frame);
                    }
                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function redrawHeatSamplesImpl(from, to, dx) {
        const patternDraw = !!pattern;
        const startBlock = currentHeatmap.startBlock();

        const max = currentHeatmap.max();
        const heatmap = currentHeatmap.heatmap();

        for (let index = from; index <= to; index++) {
            let color;
            let i = index - startBlock;
            if (i < 0 || i >= heatmap.length) {
                color = '#ddd';
            } else {
                let count = heatmap[i];

                let useFound = patternDraw && searchExecutedCount > i;
                let maxValue = useFound ? searchMax : max;
                let value = useFound ? found[i] : count;
                let ratio = value / (maxValue || 1);

                if (useFound) {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(' + value + ',' + value + ',255)';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb(0,0,' + value + ')';
                    }
                } else {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(255,' + value + ',' + value + ')';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb('+ value + ',0,0)';
                    }
                }

            }
            heatC.fillStyle = color;

            let x = Math.floor(index / heatHeight);
            let y = index % heatHeight;
            heatC.fillRect(x * sq - dx, y * sq + canvasTimeHeight, sq, sq);
        }

        let blocksBetweenMarks = 20;

        let fromBlock = Math.floor(from / blocksBetweenMarks / heatHeight) - 1;
        let toBlock = Math.ceil(to / blocksBetweenMarks / heatHeight);

        let markPixels = blocksBetweenMarks * sq;

        heatC.fillStyle = '#fff';
        heatC.fillRect(
            fromBlock * markPixels - dx,
            0,
            (toBlock - fromBlock + 1) * markPixels,
            canvasTimeHeight
        );

        heatC.beginPath();
        heatC.moveTo(fromBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.lineTo(toBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.stroke();

        heatC.fillStyle = '#000';

        let groupSize = heatHeight;
        let oneBlockMs = currentHeatmap.currentTimeBlock();
        let oneGroupMs = oneBlockMs * groupSize;
        let oneMarkMs = oneGroupMs * blocksBetweenMarks;
        for (let markIndex = fromBlock; markIndex <= toBlock; markIndex++) {
            let origin = Math.floor(startMs / oneMarkMs) * oneMarkMs;
            let ms = origin + markIndex * oneMarkMs;
            let markOffset = markIndex * markPixels - dx;

            let title = new Date(ms).toLocaleTimeString(undefined, timeOptionsTiny);

            let w = heatC.measureText(title).width;
            let x = markOffset + (markPixels - w) / 2;
            heatC.fillText(title, x, canvasTimeHeight - 1, markPixels);

            heatC.beginPath();
            heatC.moveTo(markOffset + 0.5, canvasTimeHeight - 2 * sqScale + 0.5);
            heatC.lineTo(markOffset + 0.5, canvasTimeHeight + 2 * sqScale + 0.5);
            heatC.stroke();
        }
    }

    function redrawHeatSamples(from, to) {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);

        from = Math.max(from, heatHeight * Math.floor(dx / sq));
        to = Math.min(to, heatHeight * Math.ceil((dx + heatCanvas.width) / sq));
        redrawHeatSamplesImpl(from, to, dx);
    }

    function redrawHeatMap() {
        redrawHeatSamples(0, (1 + currentHeatmap.count() / heatHeight | 0) * heatHeight);
    }

    function fillCanvasWithEvents(zoom) {
        searchExecutedCount = 0;
        searchMax = 0;

        addTask('search', function () {
            return false;
        }, function (){});

        currentHeatmap.setZoom(zoom);
        heatHeight = zoomToHeight[zoom];

        const m = devicePixelRatio || 1;
        sqScale = m;
        sqPx = 5;
        sq = Math.floor(sqPx * m);
        sqPx = sq / m;
        canvasTimeHeight = sq * 2 + 2;
        canvasTimeHeightPx = canvasTimeHeight / m;

        const widthPx = canvasScrollPadding + heatCanvasContainer.offsetWidth + canvasScrollPadding;
        const heightPx = sqPx * heatHeight + canvasTimeHeightPx;

        const heatWidthPx = Math.max(20, Math.ceil(currentHeatmap.count() / heatHeight)) * sqPx;
        heatCanvasWrapper.style.width = heatWidthPx + 'px';
        if (heatCanvasContainer.offsetWidth > heatWidthPx) {
            heatCanvasContainer.style.overflowX = 'hidden';
        } else {
            heatCanvasContainer.style.overflowX = 'scroll';
        }

        heatCanvas.width = Math.ceil(widthPx * m);
        heatCanvas.height = Math.ceil(heightPx * m);
        heatCanvas.style.width = widthPx + 'px';
        heatCanvas.style.height = heightPx + 'px';

        heatC = heatCanvas.getContext('2d');
        heatC.font = sq * 2 + 'px Verdana, sans-serif';
        heatC.lineWidth = 1;
        heatC.strokeStyle = '#000';

        document.getElementById('heatmap-height-line').textContent = [' 1 sec : 20 ms ',' 1 min : 1 sec ',' 5 min : 5 sec ',' 1 hr  : 1 min '][currentHeatmap.zoom];
        redrawHeatMap();
    }

    let found = new Uint32Array(0);

    function searchIterative(r) {
        if (r && (r = prompt('Enter regexp to search:', '')) === null) {
            return;
        }
        searchExecutedCount = 0;
        searchMax = 0;
        if (!r) {
            pattern = undefined;
            redrawHeatMap();
            addTask('search', function () {
                return false;
            }, function (){});
            return;
        }
        let renderFrom = 0;
        let heatmap = currentHeatmap.heatmap();
        let count = heatmap.length;
        found = new Uint32Array(count);
        let start = currentHeatmap.startBlock();
        function renderFunc() {
            redrawHeatSamples(start + renderFrom, start + searchExecutedCount - 1);
            renderFrom = searchExecutedCount;
        }
        pattern = r ? RegExp(r) : undefined;
        const matchedMethods = new Set();
        const methodOut = {};
        for (let index = methods.data.length / 12; index >= 0; index--) {
            if (pattern.test(title(index, methodOut))) {
                matchedMethods.add(index);
            }
        }

        let mul = zoomToGroupSize[currentHeatmap.zoom];

        addTask('search', function () {
            let amount = 0;
            const from = searchExecutedCount * mul;
            const to = (searchExecutedCount + 1) * mul;
            for (let i = from; i < to; i++) {
                const stacks = currentHeatmap.blocks[i];
                if (stacks === undefined) {
                    continue;
                }

                for (let stack of stacks) {
                    for (let methodIndex of stack) {
                        if (matchedMethods.has(methodIndex)) {
                            amount++;
                            break;
                        }
                    }
                }
            }

            if (searchMax < amount) {
                renderFrom = 0;
                searchMax = amount;
            }

            found[searchExecutedCount] = amount;
            searchExecutedCount++;
            if (searchExecutedCount >= count) {
                renderFunc();

                const matched = render(root, rootLevel);
                document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
                document.getElementById('match').style.display = r ? 'inherit' : 'none';
                document.getElementById('produced').style.display = r ? 'none' : 'inherit';

                return false;
            }
            return true;
        }, renderFunc);

    }

    function renderHeatmap() {
        let dx = heatCanvasContainer.scrollLeft - canvasScrollPadding;
        heatCanvas.style.transform = 'translate(' + dx + 'px, 0px)';

        const width = Math.floor(heatCanvasContainer.offsetWidth / sq / (devicePixelRatio || 1));

        let z = 0;
        for (; z < zoomToGroupSize.length; z++) {
            if (currentHeatmap.blocks.length / (zoomToGroupSize[z] * zoomToHeight[z]) < width) {
                break;
            }
        }

        fillCanvasWithEvents(Math.min(z, currentHeatmap.maxZoom - 1));

        renderTraces(0, currentHeatmap.heatmap().length - 1);
    }

    heatCanvasContainer.addEventListener('scroll', function() {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);
        let dxPx = dx / sqScale;
        heatCanvas.style.transform = 'translate(' + dxPx + 'px, 0px)';
        let delta = Math.abs(dx - prevDx);
        if (delta >= heatCanvas.width || searchExecutedCount !== 0) {
            redrawHeatMap();
        } else {
            heatC.drawImage(heatCanvas, prevDx - dx, 0);
            if (prevDx < dx) {
                let from = heatHeight * Math.floor((prevDx + heatCanvas.width) / sq);
                let to = heatHeight * Math.ceil((dx + heatCanvas.width) / sq);
                redrawHeatSamplesImpl(from, to, dx);
            } else {
                let from = heatHeight * Math.floor(dx / sq);
                let to = heatHeight * Math.ceil(prevDx / sq);
                redrawHeatSamplesImpl(from, to, dx);
            }
        }
        prevDx = dx;
        cooldownTime = performance.now() + 500;
    });

    document.getElementById('heatmap-height-line').onclick = function() {
        fillCanvasWithEvents((currentHeatmap.maxZoom + currentHeatmap.zoom - 1) % (currentHeatmap.maxZoom));
        highlightStart = highlightEnd = heatDiffStart = heatDiffEnd = heatActiveSample1 = heatActiveSample2 = -1;
        for (let suffix of ['Selection', 'Diff', 'Active']) {
            for (let prefix of ['left', 'leftMiddle', 'middle', 'rightMiddle', 'right']) {
                document.getElementById(prefix + suffix).style.display = 'none';
            }
        }
    }

    function callHighlightRedraw(start, end, suffix) {
        let left = document.getElementById('left' + suffix);
        let leftMiddle = document.getElementById('leftMiddle' + suffix);
        let middle = document.getElementById('middle' + suffix);
        let rightMiddle = document.getElementById('rightMiddle' + suffix);
        let right = document.getElementById('right' + suffix);

        let x1 = Math.floor(start / heatHeight);
        let y1 = start % heatHeight;
        let x2 = Math.floor(end / heatHeight);
        let y2 = end % heatHeight;

        let veryStartX = x1 * sqPx;
        let veryStartY = y1 * sqPx;
        let veryEndX = x2 * sqPx;
        let px = 1 / sqScale;
        let singleElementWidth = sqPx + px;

        let topPadding = canvasTimeHeightPx;

        if (x1 === x2) {
            left.style.display = 'none';
            right.style.display = 'none';

            for (let b of [middle, leftMiddle, rightMiddle]) {
                b.style.left = veryStartX + 'px';
                b.style.top = topPadding + veryStartY + 'px';
                b.style.width = singleElementWidth + 'px';
                b.style.height = (y2 - y1 + 1) * sqPx + px + 'px';
                b.style.display = 'block';
            }
        } else {
            left.style.left = veryStartX + 'px';
            left.style.top = topPadding + veryStartY + 'px';
            left.style.width = singleElementWidth + 'px';
            left.style.height = (heatHeight - y1) * sqPx + px + 'px';
            left.style.display = 'block';

            leftMiddle.style.left = veryStartX + 'px';
            leftMiddle.style.top = topPadding + 'px';
            leftMiddle.style.width = singleElementWidth + 'px';
            leftMiddle.style.height = y1 * sqPx + px + 'px';
            leftMiddle.style.display = 'block';

            rightMiddle.style.left = veryEndX + 'px';
            rightMiddle.style.top = topPadding + (y2 + 1) * sqPx + 'px';
            rightMiddle.style.width = sqPx + px + 'px';
            rightMiddle.style.height = (heatHeight - y2 - 1) * sqPx + px + 'px';
            rightMiddle.style.display = 'block';

            right.style.left = veryEndX + 'px';
            right.style.top = topPadding + 'px';
            right.style.width = sqPx + px + 'px';
            right.style.height = (y2 + 1) * sqPx + px + 'px';
            right.style.display = 'block';

            if (x2 - x1 === 1) {
                middle.style.display = 'none';
            } else {
                middle.style.left = veryStartX + sqPx + px + 'px';
                middle.style.top = topPadding + 'px';
                middle.style.width = (x2 - x1 - 1) * sqPx - px + 'px';
                middle.style.height = heatHeight * sqPx + px + 'px';
                middle.style.display = 'block';
            }
        }
    }

    function callSelectionRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            highlightStart = sample;
            highlightEnd = sample + Math.abs(heatActiveSample1 - heatActiveSample2);
        } else if (shiftPressed && heatActiveSample1 !== -1) {
            highlightStart = Math.min(heatActiveSample1, sample);
            highlightEnd = Math.max(heatActiveSample1, sample);
        } else {
            highlightStart = highlightEnd = sample;
        }

        callHighlightRedraw(highlightStart, highlightEnd, 'Selection');

        const index = sample - currentHeatmap.startBlock();
        const heatmap = currentHeatmap.heatmap();
        if (index >= 0 && index < heatmap.length) {
            const ms = startMs + currentHeatmap.currentTimeBlock() * index;
            const total =  heatmap[index];
            const max = currentHeatmap.max();
            heatCanvas.title = new Date(ms).toLocaleTimeString(undefined, timeOptionsShort) + " " + index;  // FIXME
            const totalText = "total: " + total + " (" + Math.floor(total / max * 100) + "%)";
            const searchText = searchExecutedCount > index
                ? "; match: " + found[index] + " (" + Math.floor(found[index] / Math.max(total, 1) * 100) + "%)"
                : "";
            status.textContent = totalText + searchText;
            status.style.display = 'inline';
        } else {
            status.style.display = 'none';
        }
    }

    function callActiveRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            heatDiffStart = highlightStart;
            heatDiffEnd = highlightEnd;

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            renderDiff(
                minSelected - currentHeatmap.startBlock(),
                maxSelected - currentHeatmap.startBlock(),
                heatDiffStart - currentHeatmap.startBlock(),
                heatDiffEnd - currentHeatmap.startBlock()
            );
        } else {
            heatDiffStart = -1;
            heatDiffEnd = -1;
            if (shiftPressed && heatActiveSample1 !== -1) {
                heatActiveSample2 = sample;
            } else {
                heatActiveSample1 = heatActiveSample2 = sample;
            }

            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            callHighlightRedraw(minSelected, maxSelected, 'Active');
            renderTraces(
                Math.max(0, minSelected - currentHeatmap.startBlock()),
                Math.min(currentHeatmap.heatmap().length - 1, maxSelected - currentHeatmap.startBlock())
            );
        }
    }

    window.addEventListener('keydown', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, true, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, true);
        }
    });

    window.addEventListener('keyup', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, false, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, false);
        }
    });

    heatCanvas.onmousemove = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        if (y >= heatHeight) {
            y = heatHeight - 1;
        }
        heatLastSample = x * heatHeight + y;
        if ((event.buttons & 1) === 1) {
            callSelectionRedraw(heatLastSample, true, event.ctrlKey);
        } else {
            callSelectionRedraw(heatLastSample, event.shiftKey, event.ctrlKey);
        }
    }

    heatCanvas.onmouseout = function () {
        status.style.display = 'none';
    };

    heatCanvas.onmousedown = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, event.shiftKey, event.ctrlKey);
    };

    heatCanvas.onmouseup = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, true, event.ctrlKey);
    };



init();
// FIXME search(/*highlight:*/);
</script></body></html>
